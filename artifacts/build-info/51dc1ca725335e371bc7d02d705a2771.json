{"id":"51dc1ca725335e371bc7d02d705a2771","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/AlphaVaultETH.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 wad) external;\n}\n\ninterface TetherToken {\n    function transfer(address, uint256) external;\n\n    function transferFrom(address from, address to, uint value) external;\n}\n\n/**\n * @title AlphaVaultSwap\n * @author Chitranshu Varshney\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\n */\n\ncontract AlphaVaultSwapETH is Ownable {\n    // AlphaVault custom events\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\n    event EtherBalanceChange(uint256 wethBal_);\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\n    event buyTokenBought(uint256 buTokenAmount);\n    event maxTransactionsChange(uint256 maxTransactions);\n\n    /**\n     * @dev Event to notify if transfer successful or failed\n     * after account approval verified\n     */\n    event TransferSuccessful(\n        address indexed from_,\n        address indexed to_,\n        uint256 amount_\n    );\n\n    error InvalidAddress();\n    error Invalid_Multiswap_Data();\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\n\n    struct wethInfo {\n        uint256 eth_balance;\n        IWETH wETH;\n    }\n    // The WETH contract.\n    IWETH public immutable WETH;\n    // IERC20 ERC20Interface;\n\n    uint256 public maxTransactions;\n    uint256 public fee;\n\n    // address private destination;\n\n    constructor() {\n        WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n        maxTransactions = 25;\n        fee = 0;\n    }\n\n    /**\n     * @dev Deposits ERC20 tokens into the contract.\n     * @param sellToken The token to deposit.\n     * @param amount The amount to deposit.\n     */\n    function depositToken(IERC20 sellToken, uint256 amount) private {\n        if (address(sellToken) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7)\n                .transferFrom(msg.sender, address(this), amount);\n        } else {\n            sellToken.transferFrom(msg.sender, address(this), amount);\n        }\n        emit TransferSuccessful(msg.sender, address(this), amount);\n    }\n\n    /**\n     * @dev Sets the fee for the transactions.\n     * @param num The new fee value.\n     */\n    function setfee(uint256 num) external onlyOwner {\n        fee = num;\n    }\n\n    /**\n     * @dev Sets the maximum transaction limit.\n     * @param num The new maximum transaction limit.\n     */\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\n        maxTransactions = num;\n        emit maxTransactionsChange(maxTransactions);\n    }\n\n    // Payable fallback to allow this contract to receive protocol fee refunds.\n    receive() external payable {}\n\n    fallback() external payable {}\n\n    // Transfer tokens held by this contrat to the sender/owner.\n    function withdrawToken(IERC20 token, uint256 amount) internal {\n        if (address(token) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7).transfer(\n                msg.sender,\n                amount\n            );\n        } else {\n            token.transfer(msg.sender, amount);\n        }\n    }\n\n    /**\n     * @dev Transfers the fee amount of tokens to the owner.\n     * @param token The token to transfer as a fee.\n     * @param amount The amount to transfer.\n     */\n    function withdrawFee(IERC20 token, uint256 amount) internal {\n        token.transfer(owner(), amount);\n    }\n\n    //Sets destination address to msg.sender\n    function setDestination() internal view returns (address) {\n        // destination = msg.sender;\n        return msg.sender;\n    }\n\n    /**\n     * @dev Transfers an amount of ETH to a given address.\n     * @param amount The amount of ETH to transfer.\n     * @param msgSender The address to receive the ETH.\n     */\n    function transferEth(uint256 amount, address msgSender) internal {\n        payable(msgSender).transfer(amount);\n    }\n\n    /**\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\n     * @param buyToken The token to buy.\n     * @param sellToken The token to sell.\n     * @param spender The address approved for spending the sellToken.\n     * @param swapTarget The target contract to execute the swap.\n     * @param swapCallData The data to call the swap function on the swapTarget.\n     * @return boughtAmount The amount of buyToken bought.\n     */ function fillQuote(\n        // The `buyTokenAddress` field from the API response.\n        IERC20 buyToken,\n        IERC20 sellToken,\n        // The `allowanceTarget` field from the API response.\n        address spender,\n        // The `to` field from the API response.\n        address swapTarget,\n        // The `data` field from the API response.\n        bytes calldata swapCallData\n    ) internal returns (uint256) {\n        if (spender == address(0)) revert InvalidAddress();\n        // Track our balance of the buyToken to determine how much we've bought.\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\n        sellToken.approve(spender, type(uint128).max);\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\n        emit ZeroXCallSuccess(success, boughtAmount);\n        if (!success)\n            revert FillQuote_Swap_Failed({\n                buyToken: buyToken,\n                sellToken: sellToken\n            });\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\n        emit buyTokenBought(boughtAmount);\n        return boughtAmount;\n    }\n\n    /**\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\n     * @param sellToken addresses of sell tokens\n     * @param buyToken addresses of sell tokens\n     * @param spender The address approved for spending the sellToken.\n     * @param swapTarget The target contract to execute the swap.\n     * @param swapCallData The data to call the swap function on the swapTarget.\n     * @param amount amount of sell token to swap.\n     */\n    function multiSwap(\n        IERC20[] calldata sellToken,\n        IERC20[] calldata buyToken,\n        address[] calldata spender,\n        address payable[] calldata swapTarget,\n        bytes[] calldata swapCallData,\n        uint256[] memory amount\n    ) external payable {\n        if (\n            !(sellToken.length <= maxTransactions &&\n                sellToken.length == buyToken.length &&\n                spender.length == buyToken.length &&\n                swapTarget.length == spender.length)\n        ) revert Invalid_Multiswap_Data();\n\n        wethInfo memory WethInfo = wethInfo(0, WETH);\n\n        if (msg.value > 0) {\n            WethInfo.wETH.deposit{value: msg.value}();\n            WethInfo.eth_balance = msg.value;\n            emit EtherBalanceChange(WethInfo.eth_balance);\n        }\n\n        for (uint256 i = 0; i < spender.length; i++) {\n            // ETHER & WETH Withdrawl request.\n            if (spender[i] == address(0)) {\n                if (WethInfo.eth_balance < amount[i]) {\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\n                    break;\n                }\n                if (amount[i] > 0) {\n                    WethInfo.eth_balance -= amount[i];\n                    WethInfo.wETH.withdraw(amount[i]);\n                    transferEth(amount[i], setDestination());\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                }\n                continue;\n            }\n            // Condition For using Deposited Ether before using WETH From user balance.\n            if (sellToken[i] == WethInfo.wETH) {\n                if (sellToken[i] == buyToken[i]) {\n                    depositToken(sellToken[i], amount[i]);\n                    WethInfo.eth_balance += amount[i];\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                    continue;\n                }\n                WethInfo.eth_balance -= amount[i];\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                depositToken(sellToken[i], amount[i]);\n            }\n\n            // Variable to store amount of tokens purchased.\n            uint256 boughtAmount = fillQuote(\n                buyToken[i],\n                sellToken[i],\n                spender[i],\n                swapTarget[i],\n                swapCallData[i]\n            );\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\n            if (buyToken[i] == WethInfo.wETH) {\n                WethInfo.eth_balance =\n                    WethInfo.eth_balance +\n                    boughtAmount -\n                    feeOfSwap;\n                withdrawFee(WETH, feeOfSwap);\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\n                withdrawFee(buyToken[i], feeOfSwap);\n                emit WithdrawTokens(buyToken[i], boughtAmount);\n            }\n        }\n        if (WethInfo.eth_balance > 0) {\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\n            emit EtherBalanceChange(0);\n        }\n    }\n}\n"},"contracts/AlphaVaultSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 wad) external;\n}\n\n/**\n * @title AlphaVaultSwap\n * @author Chitranshu Varshney\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\n */\n\ncontract AlphaVaultSwap is Ownable {\n    // AlphaVault custom events\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\n    event EtherBalanceChange(uint256 wethBal_);\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\n    event buyTokenBought(uint256 buTokenAmount);\n    event maxTransactionsChange(uint256 maxTransactions);\n\n    /**\n     * @dev Event to notify if transfer successful or failed\n     * after account approval verified\n     */\n    event TransferSuccessful(\n        address indexed from_,\n        address indexed to_,\n        uint256 amount_\n    );\n\n    error InvalidAddress();\n    error Invalid_Multiswap_Data();\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\n\n    struct wethInfo {\n        uint256 eth_balance;\n        IWETH wETH;\n    }\n    // The WETH contract.\n    IWETH public immutable WETH;\n    // IERC20 ERC20Interface;\n\n    uint256 public maxTransactions;\n    uint256 public fee;\n\n    // address private destination;\n\n    constructor(address _WETH) {\n        WETH = IWETH(_WETH);\n        maxTransactions = 25;\n        fee = 0;\n    }\n\n    /**\n     * @dev Deposits ERC20 tokens into the contract.\n     * @param sellToken The token to deposit.\n     * @param amount The amount to deposit.\n     */\n    function depositToken(IERC20 sellToken, uint256 amount) private {\n        sellToken.transferFrom(msg.sender, address(this), amount);\n\n        emit TransferSuccessful(msg.sender, address(this), amount);\n    }\n\n    /**\n     * @dev Sets the fee for the transactions.\n     * @param num The new fee value.\n     */\n    function setfee(uint256 num) external onlyOwner {\n        fee = num;\n    }\n\n    /**\n     * @dev Sets the maximum transaction limit.\n     * @param num The new maximum transaction limit.\n     */\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\n        maxTransactions = num;\n        emit maxTransactionsChange(maxTransactions);\n    }\n\n    // Payable fallback to allow this contract to receive protocol fee refunds.\n    receive() external payable {}\n\n    fallback() external payable {}\n\n    // Transfer tokens held by this contrat to the sender/owner.\n    function withdrawToken(IERC20 token, uint256 amount) internal {\n        token.transfer(msg.sender, amount);\n    }\n\n    /**\n     * @dev Transfers the fee amount of tokens to the owner.\n     * @param token The token to transfer as a fee.\n     * @param amount The amount to transfer.\n     */\n    function withdrawFee(IERC20 token, uint256 amount) internal {\n        token.transfer(owner(), amount);\n    }\n\n    //Sets destination address to msg.sender\n    function setDestination() internal view returns (address) {\n        // destination = msg.sender;\n        return msg.sender;\n    }\n\n    /**\n     * @dev Transfers an amount of ETH to a given address.\n     * @param amount The amount of ETH to transfer.\n     * @param msgSender The address to receive the ETH.\n     */\n    function transferEth(uint256 amount, address msgSender) internal {\n        payable(msgSender).transfer(amount);\n    }\n\n    /**\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\n     * @param buyToken The token to buy.\n     * @param sellToken The token to sell.\n     * @param spender The address approved for spending the sellToken.\n     * @param swapTarget The target contract to execute the swap.\n     * @param swapCallData The data to call the swap function on the swapTarget.\n     * @return boughtAmount The amount of buyToken bought.\n     */ function fillQuote(\n        // The `buyTokenAddress` field from the API response.\n        IERC20 buyToken,\n        IERC20 sellToken,\n        // The `allowanceTarget` field from the API response.\n        address spender,\n        // The `to` field from the API response.\n        address swapTarget,\n        // The `data` field from the API response.\n        bytes calldata swapCallData\n    ) internal returns (uint256) {\n        if (spender == address(0)) revert InvalidAddress();\n        // Track our balance of the buyToken to determine how much we've bought.\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\n        sellToken.approve(spender, type(uint128).max);\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\n        emit ZeroXCallSuccess(success, boughtAmount);\n        if (!success)\n            revert FillQuote_Swap_Failed({\n                buyToken: buyToken,\n                sellToken: sellToken\n            });\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\n        emit buyTokenBought(boughtAmount);\n        return boughtAmount;\n    }\n\n    /**\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\n     * @param sellToken addresses of sell tokens\n     * @param buyToken addresses of sell tokens\n     * @param spender The address approved for spending the sellToken.\n     * @param swapTarget The target contract to execute the swap.\n     * @param swapCallData The data to call the swap function on the swapTarget.\n     * @param amount amount of sell token to swap.\n     */\n    function multiSwap(\n        IERC20[] calldata sellToken,\n        IERC20[] calldata buyToken,\n        address[] calldata spender,\n        address payable[] calldata swapTarget,\n        bytes[] calldata swapCallData,\n        uint256[] memory amount\n    ) external payable {\n        if (\n            !(sellToken.length <= maxTransactions &&\n                sellToken.length == buyToken.length &&\n                spender.length == buyToken.length &&\n                swapTarget.length == spender.length)\n        ) revert Invalid_Multiswap_Data();\n\n        wethInfo memory WethInfo = wethInfo(0, WETH);\n\n        if (msg.value > 0) {\n            WethInfo.wETH.deposit{value: msg.value}();\n            WethInfo.eth_balance = msg.value;\n            emit EtherBalanceChange(WethInfo.eth_balance);\n        }\n\n        for (uint256 i = 0; i < spender.length; i++) {\n            // ETHER & WETH Withdrawl request.\n            if (spender[i] == address(0)) {\n                if (WethInfo.eth_balance < amount[i]) {\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\n                    break;\n                }\n                if (amount[i] > 0) {\n                    WethInfo.eth_balance -= amount[i];\n                    WethInfo.wETH.withdraw(amount[i]);\n                    transferEth(amount[i], setDestination());\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                }\n                continue;\n            }\n            // Condition For using Deposited Ether before using WETH From user balance.\n            if (sellToken[i] == WethInfo.wETH) {\n                if (sellToken[i] == buyToken[i]) {\n                    depositToken(sellToken[i], amount[i]);\n                    WethInfo.eth_balance += amount[i];\n                    emit EtherBalanceChange(WethInfo.eth_balance);\n                    continue;\n                }\n                WethInfo.eth_balance -= amount[i];\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                depositToken(sellToken[i], amount[i]);\n            }\n\n            // Variable to store amount of tokens purchased.\n            uint256 boughtAmount = fillQuote(\n                buyToken[i],\n                sellToken[i],\n                spender[i],\n                swapTarget[i],\n                swapCallData[i]\n            );\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\n            if (buyToken[i] == WethInfo.wETH) {\n                WethInfo.eth_balance =\n                    WethInfo.eth_balance +\n                    boughtAmount -\n                    feeOfSwap;\n                withdrawFee(WETH, feeOfSwap);\n                emit EtherBalanceChange(WethInfo.eth_balance);\n            } else {\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\n                withdrawFee(buyToken[i], feeOfSwap);\n                emit WithdrawTokens(buyToken[i], boughtAmount);\n            }\n        }\n        if (WethInfo.eth_balance > 0) {\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\n            emit EtherBalanceChange(0);\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[212],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":213,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":212,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,212],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":190,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[212]},"id":213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":212,"linearizedBaseContracts":[212],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":201,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":197,"id":200,"nodeType":"Return","src":"712:17:2"}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":212,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":206,"id":209,"nodeType":"Return","src":"819:15:2"}]},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":212,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":213,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"contracts/AlphaVaultETH.sol":{"ast":{"absolutePath":"contracts/AlphaVaultETH.sol","exportedSymbols":{"AlphaVaultSwapETH":[922],"Context":[212],"IERC20":[190],"IWETH":[227],"Ownable":[112],"TetherToken":[244]},"id":923,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":214,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":923,"sourceUnit":113,"src":"56:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":923,"sourceUnit":191,"src":"109:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":217,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"186:6:3"},"id":218,"nodeType":"InheritanceSpecifier","src":"186:6:3"}],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":227,"linearizedBaseContracts":[227,190],"name":"IWETH","nameLocation":"177:5:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"208:7:3","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"215:2:3"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"234:0:3"},"scope":227,"src":"199:36:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":226,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"250:8:3","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"wad","nameLocation":"267:3:3","nodeType":"VariableDeclaration","scope":226,"src":"259:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:13:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"280:0:3"},"scope":227,"src":"241:40:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":923,"src":"167:116:3","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":244,"linearizedBaseContracts":[244],"name":"TetherToken","nameLocation":"295:11:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a9059cbb","id":234,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"322:8:3","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"331:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"340:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"330:18:3"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"357:0:3"},"scope":244,"src":"313:45:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":243,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"373:12:3","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"from","nameLocation":"394:4:3","nodeType":"VariableDeclaration","scope":243,"src":"386:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"to","nameLocation":"408:2:3","nodeType":"VariableDeclaration","scope":243,"src":"400:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"value","nameLocation":"417:5:3","nodeType":"VariableDeclaration","scope":243,"src":"412:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint","nodeType":"ElementaryTypeName","src":"412:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:38:3"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"432:0:3"},"scope":244,"src":"364:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":923,"src":"285:150:3","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":246,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"598:7:3"},"id":247,"nodeType":"InheritanceSpecifier","src":"598:7:3"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"437:129:3","text":" @title AlphaVaultSwap\n @author Chitranshu Varshney\n @dev A contract for swapping ERC20 tokens using 0x-API quotes."},"fullyImplemented":true,"id":922,"linearizedBaseContracts":[922,112,212],"name":"AlphaVaultSwapETH","nameLocation":"577:17:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":254,"name":"WithdrawTokens","nameLocation":"650:14:3","nodeType":"EventDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"buyToken","nameLocation":"672:8:3","nodeType":"VariableDeclaration","scope":254,"src":"665:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":249,"nodeType":"UserDefinedTypeName","pathNode":{"id":248,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"665:6:3"},"referencedDeclaration":190,"src":"665:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"boughtAmount_","nameLocation":"690:13:3","nodeType":"VariableDeclaration","scope":254,"src":"682:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:40:3"},"src":"644:61:3"},{"anonymous":false,"id":258,"name":"EtherBalanceChange","nameLocation":"716:18:3","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"743:8:3","nodeType":"VariableDeclaration","scope":258,"src":"735:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"734:18:3"},"src":"710:43:3"},{"anonymous":false,"id":264,"name":"BadRequest","nameLocation":"764:10:3","nodeType":"EventDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"783:8:3","nodeType":"VariableDeclaration","scope":264,"src":"775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"reqAmount_","nameLocation":"801:10:3","nodeType":"VariableDeclaration","scope":264,"src":"793:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"774:38:3"},"src":"758:55:3"},{"anonymous":false,"id":270,"name":"ZeroXCallSuccess","nameLocation":"824:16:3","nodeType":"EventDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"846:6:3","nodeType":"VariableDeclaration","scope":270,"src":"841:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":265,"name":"bool","nodeType":"ElementaryTypeName","src":"841:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"initialBuyTokenBalance","nameLocation":"862:22:3","nodeType":"VariableDeclaration","scope":270,"src":"854:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"840:45:3"},"src":"818:68:3"},{"anonymous":false,"id":274,"name":"buyTokenBought","nameLocation":"897:14:3","nodeType":"EventDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"buTokenAmount","nameLocation":"920:13:3","nodeType":"VariableDeclaration","scope":274,"src":"912:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:23:3"},"src":"891:44:3"},{"anonymous":false,"id":278,"name":"maxTransactionsChange","nameLocation":"946:21:3","nodeType":"EventDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":false,"mutability":"mutable","name":"maxTransactions","nameLocation":"976:15:3","nodeType":"VariableDeclaration","scope":278,"src":"968:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"967:25:3"},"src":"940:53:3"},{"anonymous":false,"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"999:111:3","text":" @dev Event to notify if transfer successful or failed\n after account approval verified"},"id":287,"name":"TransferSuccessful","nameLocation":"1121:18:3","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"indexed":true,"mutability":"mutable","name":"from_","nameLocation":"1165:5:3","nodeType":"VariableDeclaration","scope":287,"src":"1149:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"1196:3:3","nodeType":"VariableDeclaration","scope":287,"src":"1180:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"1217:7:3","nodeType":"VariableDeclaration","scope":287,"src":"1209:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1139:91:3"},"src":"1115:116:3"},{"id":289,"name":"InvalidAddress","nameLocation":"1243:14:3","nodeType":"ErrorDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"1257:2:3"},"src":"1237:23:3"},{"id":291,"name":"Invalid_Multiswap_Data","nameLocation":"1271:22:3","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"1293:2:3"},"src":"1265:31:3"},{"id":299,"name":"FillQuote_Swap_Failed","nameLocation":"1307:21:3","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"buyToken","nameLocation":"1336:8:3","nodeType":"VariableDeclaration","scope":299,"src":"1329:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":293,"nodeType":"UserDefinedTypeName","pathNode":{"id":292,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1329:6:3"},"referencedDeclaration":190,"src":"1329:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"sellToken","nameLocation":"1353:9:3","nodeType":"VariableDeclaration","scope":299,"src":"1346:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":296,"nodeType":"UserDefinedTypeName","pathNode":{"id":295,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1346:6:3"},"referencedDeclaration":190,"src":"1346:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1328:35:3"},"src":"1301:63:3"},{"canonicalName":"AlphaVaultSwapETH.wethInfo","id":305,"members":[{"constant":false,"id":301,"mutability":"mutable","name":"eth_balance","nameLocation":"1404:11:3","nodeType":"VariableDeclaration","scope":305,"src":"1396:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"wETH","nameLocation":"1431:4:3","nodeType":"VariableDeclaration","scope":305,"src":"1425:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},"typeName":{"id":303,"nodeType":"UserDefinedTypeName","pathNode":{"id":302,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":227,"src":"1425:5:3"},"referencedDeclaration":227,"src":"1425:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"visibility":"internal"}],"name":"wethInfo","nameLocation":"1377:8:3","nodeType":"StructDefinition","scope":922,"src":"1370:72:3","visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":308,"mutability":"immutable","name":"WETH","nameLocation":"1496:4:3","nodeType":"VariableDeclaration","scope":922,"src":"1473:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},"typeName":{"id":307,"nodeType":"UserDefinedTypeName","pathNode":{"id":306,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":227,"src":"1473:5:3"},"referencedDeclaration":227,"src":"1473:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"visibility":"public"},{"constant":false,"functionSelector":"24e1c18d","id":310,"mutability":"mutable","name":"maxTransactions","nameLocation":"1552:15:3","nodeType":"VariableDeclaration","scope":922,"src":"1537:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":312,"mutability":"mutable","name":"fee","nameLocation":"1588:3:3","nodeType":"VariableDeclaration","scope":922,"src":"1573:18:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":329,"nodeType":"Block","src":"1649:120:3","statements":[{"expression":{"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":315,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"1659:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307843303261614133396232323346453844304130653543344632376541443930383343373536436332","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1672:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":316,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1666:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$227_$","typeString":"type(contract IWETH)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1666:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"1659:56:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":320,"nodeType":"ExpressionStatement","src":"1659:56:3"},{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":321,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1725:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1743:2:3","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1725:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":324,"nodeType":"ExpressionStatement","src":"1725:20:3"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":325,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"1755:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1761:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1755:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ExpressionStatement","src":"1755:7:3"}]},"id":330,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"1646:2:3"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1649:0:3"},"scope":922,"src":"1635:134:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":383,"nodeType":"Block","src":"1998:387:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":341,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2020:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2012:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:3","typeDescriptions":{}}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2012:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2034:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"2012:64:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":371,"nodeType":"Block","src":"2229:82:3","statements":[{"expression":{"arguments":[{"expression":{"id":362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2266:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2266:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":366,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2286:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2278:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:3","typeDescriptions":{}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2278:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2293:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":359,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2243:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"2243:22:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2243:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":370,"nodeType":"ExpressionStatement","src":"2243:57:3"}]},"id":372,"nodeType":"IfStatement","src":"2008:303:3","trueBody":{"id":358,"nodeType":"Block","src":"2078:145:3","statements":[{"expression":{"arguments":[{"expression":{"id":349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2178:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2178:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2198:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2190:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"2190:7:3","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2190:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2205:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":345,"name":"TetherToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2092:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TetherToken_$244_$","typeString":"type(contract TetherToken)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2092:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TetherToken_$244","typeString":"contract TetherToken"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":243,"src":"2092:85:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2092:120:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"2092:120:3"}]}},{"eventCall":{"arguments":[{"expression":{"id":374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2344:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2344:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":378,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2364:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}],"id":377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2356:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"2356:7:3","typeDescriptions":{}}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2356:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2371:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":373,"name":"TransferSuccessful","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2325:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2325:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":382,"nodeType":"EmitStatement","src":"2320:58:3"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"1775:154:3","text":" @dev Deposits ERC20 tokens into the contract.\n @param sellToken The token to deposit.\n @param amount The amount to deposit."},"id":384,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"1943:12:3","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"sellToken","nameLocation":"1963:9:3","nodeType":"VariableDeclaration","scope":384,"src":"1956:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":333,"nodeType":"UserDefinedTypeName","pathNode":{"id":332,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1956:6:3"},"referencedDeclaration":190,"src":"1956:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"amount","nameLocation":"1982:6:3","nodeType":"VariableDeclaration","scope":384,"src":"1974:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1955:34:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1998:0:3"},"scope":922,"src":"1934:451:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":396,"nodeType":"Block","src":"2539:26:3","statements":[{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2549:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":393,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2555:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":395,"nodeType":"ExpressionStatement","src":"2549:9:3"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"2391:95:3","text":" @dev Sets the fee for the transactions.\n @param num The new fee value."},"functionSelector":"73fee090","id":397,"implemented":true,"kind":"function","modifiers":[{"id":390,"kind":"modifierInvocation","modifierName":{"id":389,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2529:9:3"},"nodeType":"ModifierInvocation","src":"2529:9:3"}],"name":"setfee","nameLocation":"2500:6:3","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"num","nameLocation":"2515:3:3","nodeType":"VariableDeclaration","scope":397,"src":"2507:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2506:13:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"2539:0:3"},"scope":922,"src":"2491:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":413,"nodeType":"Block","src":"2752:91:3","statements":[{"expression":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2762:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":406,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2780:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2762:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":408,"nodeType":"ExpressionStatement","src":"2762:21:3"},{"eventCall":{"arguments":[{"id":410,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2820:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":409,"name":"maxTransactionsChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2798:21:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2798:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"2793:43:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2571:112:3","text":" @dev Sets the maximum transaction limit.\n @param num The new maximum transaction limit."},"functionSelector":"7a9d7c14","id":414,"implemented":true,"kind":"function","modifiers":[{"id":403,"kind":"modifierInvocation","modifierName":{"id":402,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2742:9:3"},"nodeType":"ModifierInvocation","src":"2742:9:3"}],"name":"setMaxTransactionLimit","nameLocation":"2697:22:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"num","nameLocation":"2728:3:3","nodeType":"VariableDeclaration","scope":414,"src":"2720:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2719:13:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"2752:0:3"},"scope":922,"src":"2688:155:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":417,"nodeType":"Block","src":"2956:2:3","statements":[]},"id":418,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"2936:2:3"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"2956:0:3"},"scope":922,"src":"2929:29:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":421,"nodeType":"Block","src":"2992:2:3","statements":[]},"id":422,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2972:2:3"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"2992:0:3"},"scope":922,"src":"2964:30:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":456,"nodeType":"Block","src":"3127:302:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3149:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:3","typeDescriptions":{}}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3141:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},"src":"3141:60:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":454,"nodeType":"Block","src":"3364:59:3","statements":[{"expression":{"arguments":[{"expression":{"id":449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3393:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3393:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3405:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":446,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3378:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3378:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3378:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":453,"nodeType":"ExpressionStatement","src":"3378:34:3"}]},"id":455,"nodeType":"IfStatement","src":"3137:286:3","trueBody":{"id":445,"nodeType":"Block","src":"3203:155:3","statements":[{"expression":{"arguments":[{"expression":{"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3299:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3299:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3327:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:42:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"TetherToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3217:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TetherToken_$244_$","typeString":"type(contract TetherToken)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3217:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TetherToken_$244","typeString":"contract TetherToken"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":234,"src":"3217:64:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3217:130:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"3217:130:3"}]}}]},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3074:13:3","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"token","nameLocation":"3095:5:3","nodeType":"VariableDeclaration","scope":457,"src":"3088:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":424,"nodeType":"UserDefinedTypeName","pathNode":{"id":423,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3088:6:3"},"referencedDeclaration":190,"src":"3088:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"amount","nameLocation":"3110:6:3","nodeType":"VariableDeclaration","scope":457,"src":"3102:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3087:30:3"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"3127:0:3"},"scope":922,"src":"3065:364:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"3669:48:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":469,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"3694:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3694:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3703:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3679:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3679:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3679:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"nodeType":"ExpressionStatement","src":"3679:31:3"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3435:169:3","text":" @dev Transfers the fee amount of tokens to the owner.\n @param token The token to transfer as a fee.\n @param amount The amount to transfer."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFee","nameLocation":"3618:11:3","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"token","nameLocation":"3637:5:3","nodeType":"VariableDeclaration","scope":475,"src":"3630:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":460,"nodeType":"UserDefinedTypeName","pathNode":{"id":459,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3630:6:3"},"referencedDeclaration":190,"src":"3630:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"amount","nameLocation":"3652:6:3","nodeType":"VariableDeclaration","scope":475,"src":"3644:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3644:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:30:3"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"3669:0:3"},"scope":922,"src":"3609:108:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":483,"nodeType":"Block","src":"3826:71:3","statements":[{"expression":{"expression":{"id":480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3880:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3880:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":479,"id":482,"nodeType":"Return","src":"3873:17:3"}]},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"setDestination","nameLocation":"3777:14:3","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"3791:2:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"3817:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3817:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3816:9:3"},"scope":922,"src":"3768:129:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":500,"nodeType":"Block","src":"4151:52:3","statements":[{"expression":{"arguments":[{"id":497,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4189:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":494,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4169:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4161:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"4161:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"4161:27:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"4161:35:3"}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"3903:178:3","text":" @dev Transfers an amount of ETH to a given address.\n @param amount The amount of ETH to transfer.\n @param msgSender The address to receive the ETH."},"id":501,"implemented":true,"kind":"function","modifiers":[],"name":"transferEth","nameLocation":"4095:11:3","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"amount","nameLocation":"4115:6:3","nodeType":"VariableDeclaration","scope":501,"src":"4107:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4107:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"msgSender","nameLocation":"4131:9:3","nodeType":"VariableDeclaration","scope":501,"src":"4123:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"4123:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4106:35:3"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"4151:0:3"},"scope":922,"src":"4086:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":590,"nodeType":"Block","src":"5081:690:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":519,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5095:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"5106:7:3","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5095:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":528,"nodeType":"IfStatement","src":"5091:50:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5125:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5125:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"RevertStatement","src":"5118:23:3"}},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"boughtAmount","nameLocation":"5240:12:3","nodeType":"VariableDeclaration","scope":590,"src":"5232:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":538,"initialValue":{"arguments":[{"arguments":[{"id":535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5282:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5274:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5274:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5274:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":531,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5255:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5255:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5255:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5232:56:3"},{"expression":{"arguments":[{"id":542,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5316:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5330:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":544,"name":"uint128","nodeType":"ElementaryTypeName","src":"5330:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5325:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5325:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5325:17:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":539,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5298:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"5298:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5298:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":549,"nodeType":"ExpressionStatement","src":"5298:45:3"},{"assignments":[551,null],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"success","nameLocation":"5359:7:3","nodeType":"VariableDeclaration","scope":590,"src":"5354:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"5354:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":558,"initialValue":{"arguments":[{"id":556,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5398:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":552,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5372:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5372:15:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"src":"5372:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5372:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5353:58:3"},{"eventCall":{"arguments":[{"id":560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"5443:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":561,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5452:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ZeroXCallSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5426:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5426:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"EmitStatement","src":"5421:44:3"},{"condition":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5479:8:3","subExpression":{"id":564,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"5480:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":571,"nodeType":"IfStatement","src":"5475:144:3","trueBody":{"errorCall":{"arguments":[{"id":567,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5558:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":568,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5595:9:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":566,"name":"FillQuote_Swap_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5508:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$returns$__$","typeString":"function (contract IERC20,contract IERC20) pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":["buyToken","sellToken"],"nodeType":"FunctionCall","src":"5508:111:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"RevertStatement","src":"5501:118:3"}},{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":572,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5629:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":577,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5671:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwapETH_$922","typeString":"contract AlphaVaultSwapETH"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5663:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:3","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5663:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":573,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5644:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5644:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5644:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":580,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5680:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5644:48:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5629:63:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":583,"nodeType":"ExpressionStatement","src":"5629:63:3"},{"eventCall":{"arguments":[{"id":585,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5722:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"buyTokenBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"5707:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"EmitStatement","src":"5702:33:3"},{"expression":{"id":588,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5752:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":518,"id":589,"nodeType":"Return","src":"5745:19:3"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"4209:454:3","text":" @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\n @param buyToken The token to buy.\n @param sellToken The token to sell.\n @param spender The address approved for spending the sellToken.\n @param swapTarget The target contract to execute the swap.\n @param swapCallData The data to call the swap function on the swapTarget.\n @return boughtAmount The amount of buyToken bought."},"id":591,"implemented":true,"kind":"function","modifiers":[],"name":"fillQuote","nameLocation":"4673:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"buyToken","nameLocation":"4761:8:3","nodeType":"VariableDeclaration","scope":591,"src":"4754:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4754:6:3"},"referencedDeclaration":190,"src":"4754:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"sellToken","nameLocation":"4786:9:3","nodeType":"VariableDeclaration","scope":591,"src":"4779:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":507,"nodeType":"UserDefinedTypeName","pathNode":{"id":506,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4779:6:3"},"referencedDeclaration":190,"src":"4779:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"spender","nameLocation":"4875:7:3","nodeType":"VariableDeclaration","scope":591,"src":"4867:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"swapTarget","nameLocation":"4949:10:3","nodeType":"VariableDeclaration","scope":591,"src":"4941:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"swapCallData","nameLocation":"5035:12:3","nodeType":"VariableDeclaration","scope":591,"src":"5020:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":513,"name":"bytes","nodeType":"ElementaryTypeName","src":"5020:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4682:371:3"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":591,"src":"5072:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5072:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5071:9:3"},"scope":922,"src":"4664:1107:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"6530:2828:3","statements":[{"condition":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6557:201:3","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":615,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6559:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6559:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":617,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6579:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6559:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":619,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6614:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6614:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":621,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6634:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6634:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6614:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6559:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":625,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6669:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6669:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":627,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6687:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6687:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6669:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6559:143:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":631,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"6722:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6722:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":633,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6743:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6743:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6722:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6559:198:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6558:200:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":642,"nodeType":"IfStatement","src":"6540:260:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":639,"name":"Invalid_Multiswap_Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"6776:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6776:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"RevertStatement","src":"6769:31:3"}},{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"WethInfo","nameLocation":"6827:8:3","nodeType":"VariableDeclaration","scope":920,"src":"6811:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"wethInfo","nodeType":"IdentifierPath","referencedDeclaration":305,"src":"6811:8:3"},"referencedDeclaration":305,"src":"6811:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_storage_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo"}},"visibility":"internal"}],"id":650,"initialValue":{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6847:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":648,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6850:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}],"id":646,"name":"wethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6838:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_wethInfo_$305_storage_ptr_$","typeString":"type(struct AlphaVaultSwapETH.wethInfo storage pointer)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6838:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"6811:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6870:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6870:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6882:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6870:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"IfStatement","src":"6866:190:3","trueBody":{"id":677,"nodeType":"Block","src":"6885:171:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":655,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6899:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":304,"src":"6899:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":221,"src":"6899:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6928:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6928:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6899:39:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6899:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"6899:41:3"},{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":665,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6954:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"6954:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6977:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6977:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6954:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":671,"nodeType":"ExpressionStatement","src":"6954:32:3"},{"eventCall":{"arguments":[{"expression":{"id":673,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7024:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7024:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7005:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7005:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"EmitStatement","src":"7000:45:3"}]}},{"body":{"id":901,"nodeType":"Block","src":"7111:2087:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7176:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":692,"indexExpression":{"id":691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7184:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7176:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7190:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"7190:7:3","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7190:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7176:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":755,"nodeType":"IfStatement","src":"7172:536:3","trueBody":{"id":754,"nodeType":"Block","src":"7202:506:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":698,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7224:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7224:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7247:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":702,"indexExpression":{"id":701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7254:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7247:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"7220:154:3","trueBody":{"id":713,"nodeType":"Block","src":"7258:116:3","statements":[{"eventCall":{"arguments":[{"expression":{"id":705,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7296:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7296:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7318:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":709,"indexExpression":{"id":708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7325:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7318:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"BadRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"7285:10:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7285:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"EmitStatement","src":"7280:48:3"},{"id":712,"nodeType":"Break","src":"7350:5:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":715,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7395:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":717,"indexExpression":{"id":716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7402:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7395:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7407:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7395:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"7391:277:3","trueBody":{"id":751,"nodeType":"Block","src":"7410:258:3","statements":[{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":720,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7432:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7432:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7456:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":725,"indexExpression":{"id":724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7463:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7456:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7432:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"nodeType":"ExpressionStatement","src":"7432:33:3"},{"expression":{"arguments":[{"baseExpression":{"id":733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7510:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":735,"indexExpression":{"id":734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7517:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7510:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":728,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7487:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":304,"src":"7487:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":226,"src":"7487:22:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"7487:33:3"},{"expression":{"arguments":[{"baseExpression":{"id":739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7554:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":741,"indexExpression":{"id":740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7561:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7554:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":742,"name":"setDestination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7565:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7565:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":738,"name":"transferEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"7542:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7542:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"7542:40:3"},{"eventCall":{"arguments":[{"expression":{"id":747,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7628:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7628:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7609:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"EmitStatement","src":"7604:45:3"}]}},{"id":753,"nodeType":"Continue","src":"7685:8:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":756,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"7813:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":758,"indexExpression":{"id":757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7823:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7813:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":759,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7829:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":304,"src":"7829:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"7813:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":817,"nodeType":"Block","src":"8259:70:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":809,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"8290:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":811,"indexExpression":{"id":810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8300:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8290:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":812,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8304:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":814,"indexExpression":{"id":813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8311:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8304:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":808,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8277:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8277:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"ExpressionStatement","src":"8277:37:3"}]},"id":818,"nodeType":"IfStatement","src":"7809:520:3","trueBody":{"id":807,"nodeType":"Block","src":"7844:409:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":762,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"7866:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":764,"indexExpression":{"id":763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7876:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7866:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":765,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7882:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":767,"indexExpression":{"id":766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7891:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7882:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"7866:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"7862:263:3","trueBody":{"id":792,"nodeType":"Block","src":"7895:230:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":770,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"7930:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":772,"indexExpression":{"id":771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7940:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7930:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7944:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":775,"indexExpression":{"id":774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7951:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":769,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7917:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7917:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"7917:37:3"},{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":778,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7976:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"7976:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8000:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":783,"indexExpression":{"id":782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8007:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8000:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7976:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"7976:33:3"},{"eventCall":{"arguments":[{"expression":{"id":787,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8055:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8055:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"8036:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8036:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"EmitStatement","src":"8031:45:3"},{"id":791,"nodeType":"Continue","src":"8098:8:3"}]}},{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":794,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8142:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8142:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8166:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":799,"indexExpression":{"id":798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8173:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8166:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8142:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ExpressionStatement","src":"8142:33:3"},{"eventCall":{"arguments":[{"expression":{"id":803,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8217:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8217:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"8198:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8198:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"EmitStatement","src":"8193:45:3"}]}},{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"boughtAmount","nameLocation":"8412:12:3","nodeType":"VariableDeclaration","scope":901,"src":"8404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"8404:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"baseExpression":{"id":822,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8454:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":824,"indexExpression":{"id":823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8463:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8454:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":825,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"8483:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":827,"indexExpression":{"id":826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8493:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8483:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":828,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"8513:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":830,"indexExpression":{"id":829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8521:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8513:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":831,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8541:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":833,"indexExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8552:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8541:13:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":834,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"8572:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":836,"indexExpression":{"id":835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8585:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8572:15:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":821,"name":"fillQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8427:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,address,address,bytes calldata) returns (uint256)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8427:174:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8404:197:3"},{"assignments":[840],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"feeOfSwap","nameLocation":"8620:9:3","nodeType":"VariableDeclaration","scope":901,"src":"8615:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint","nodeType":"ElementaryTypeName","src":"8615:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":847,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"8633:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":842,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8639:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8633:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8632:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8655:5:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8632:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8615:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":848,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8678:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":850,"indexExpression":{"id":849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8687:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8678:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":851,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8693:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":304,"src":"8693:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},"src":"8678:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":899,"nodeType":"Block","src":"8986:202:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":877,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9018:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":879,"indexExpression":{"id":878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9027:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9018:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9031:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":881,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"9046:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9031:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"9004:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9004:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"9004:52:3"},{"expression":{"arguments":[{"baseExpression":{"id":886,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9086:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":888,"indexExpression":{"id":887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9086:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":889,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"9099:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":885,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"9074:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9074:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"9074:35:3"},{"eventCall":{"arguments":[{"baseExpression":{"id":893,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9147:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":895,"indexExpression":{"id":894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9156:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9147:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":896,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9160:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"WithdrawTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9132:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9132:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"EmitStatement","src":"9127:46:3"}]},"id":900,"nodeType":"IfStatement","src":"8674:514:3","trueBody":{"id":875,"nodeType":"Block","src":"8708:272:3","statements":[{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":854,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8726:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8726:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":857,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8769:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8769:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":859,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8812:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8769:55:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":861,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"8847:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8769:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8726:130:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"8726:130:3"},{"expression":{"arguments":[{"id":866,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"8886:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},{"id":867,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"8892:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"8874:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8874:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"8874:28:3"},{"eventCall":{"arguments":[{"expression":{"id":871,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8944:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"8944:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"8925:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8925:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"EmitStatement","src":"8920:45:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7086:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7090:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7090:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7086:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"initializationExpression":{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"i","nameLocation":"7079:1:3","nodeType":"VariableDeclaration","scope":902,"src":"7071:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":682,"initialValue":{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7083:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7071:13:3"},"loopExpression":{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7106:3:3","subExpression":{"id":687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"7106:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"7106:3:3"},"nodeType":"ForStatement","src":"7066:2132:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":903,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"9211:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"9211:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9211:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"9207:145:3","trueBody":{"id":918,"nodeType":"Block","src":"9237:115:3","statements":[{"expression":{"arguments":[{"expression":{"id":908,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"9265:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":304,"src":"9265:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"}},{"expression":{"id":910,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"9280:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$305_memory_ptr","typeString":"struct AlphaVaultSwapETH.wethInfo memory"}},"id":911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":301,"src":"9280:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$227","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"9251:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9251:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"9251:50:3"},{"eventCall":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9339:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"9320:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9320:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"EmitStatement","src":"9315:26:3"}]}}]},"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"5777:478:3","text":" @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\n @param sellToken addresses of sell tokens\n @param buyToken addresses of sell tokens\n @param spender The address approved for spending the sellToken.\n @param swapTarget The target contract to execute the swap.\n @param swapCallData The data to call the swap function on the swapTarget.\n @param amount amount of sell token to swap."},"functionSelector":"6ca591a7","id":921,"implemented":true,"kind":"function","modifiers":[],"name":"multiSwap","nameLocation":"6269:9:3","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"sellToken","nameLocation":"6306:9:3","nodeType":"VariableDeclaration","scope":921,"src":"6288:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":594,"nodeType":"UserDefinedTypeName","pathNode":{"id":593,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"6288:6:3"},"referencedDeclaration":190,"src":"6288:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":595,"nodeType":"ArrayTypeName","src":"6288:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"buyToken","nameLocation":"6343:8:3","nodeType":"VariableDeclaration","scope":921,"src":"6325:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":598,"nodeType":"UserDefinedTypeName","pathNode":{"id":597,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"6325:6:3"},"referencedDeclaration":190,"src":"6325:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":599,"nodeType":"ArrayTypeName","src":"6325:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"spender","nameLocation":"6380:7:3","nodeType":"VariableDeclaration","scope":921,"src":"6361:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"6361:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":602,"nodeType":"ArrayTypeName","src":"6361:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"swapTarget","nameLocation":"6424:10:3","nodeType":"VariableDeclaration","scope":921,"src":"6397:37:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6397:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":605,"nodeType":"ArrayTypeName","src":"6397:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"swapCallData","nameLocation":"6461:12:3","nodeType":"VariableDeclaration","scope":921,"src":"6444:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"6444:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":608,"nodeType":"ArrayTypeName","src":"6444:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"amount","nameLocation":"6500:6:3","nodeType":"VariableDeclaration","scope":921,"src":"6483:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"6483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":611,"nodeType":"ArrayTypeName","src":"6483:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6278:234:3"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"6530:0:3"},"scope":922,"src":"6260:3098:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":923,"src":"568:8792:3","usedErrors":[289,291,299]}],"src":"32:9329:3"},"id":3},"contracts/AlphaVaultSwap.sol":{"ast":{"absolutePath":"contracts/AlphaVaultSwap.sol","exportedSymbols":{"AlphaVaultSwap":[1577],"Context":[212],"IERC20":[190],"IWETH":[937],"Ownable":[112]},"id":1578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":924,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":113,"src":"56:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":191,"src":"109:56:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":927,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"186:6:4"},"id":928,"nodeType":"InheritanceSpecifier","src":"186:6:4"}],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":937,"linearizedBaseContracts":[937,190],"name":"IWETH","nameLocation":"177:5:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":931,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"208:7:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"215:2:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"234:0:4"},"scope":937,"src":"199:36:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"250:8:4","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"wad","nameLocation":"267:3:4","nodeType":"VariableDeclaration","scope":936,"src":"259:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"259:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:13:4"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"280:0:4"},"scope":937,"src":"241:40:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1578,"src":"167:116:4","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":939,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"443:7:4"},"id":940,"nodeType":"InheritanceSpecifier","src":"443:7:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"285:129:4","text":" @title AlphaVaultSwap\n @author Chitranshu Varshney\n @dev A contract for swapping ERC20 tokens using 0x-API quotes."},"fullyImplemented":true,"id":1577,"linearizedBaseContracts":[1577,112,212],"name":"AlphaVaultSwap","nameLocation":"425:14:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":947,"name":"WithdrawTokens","nameLocation":"495:14:4","nodeType":"EventDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"indexed":false,"mutability":"mutable","name":"buyToken","nameLocation":"517:8:4","nodeType":"VariableDeclaration","scope":947,"src":"510:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":942,"nodeType":"UserDefinedTypeName","pathNode":{"id":941,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"510:6:4"},"referencedDeclaration":190,"src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":945,"indexed":false,"mutability":"mutable","name":"boughtAmount_","nameLocation":"535:13:4","nodeType":"VariableDeclaration","scope":947,"src":"527:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"509:40:4"},"src":"489:61:4"},{"anonymous":false,"id":951,"name":"EtherBalanceChange","nameLocation":"561:18:4","nodeType":"EventDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"588:8:4","nodeType":"VariableDeclaration","scope":951,"src":"580:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:18:4"},"src":"555:43:4"},{"anonymous":false,"id":957,"name":"BadRequest","nameLocation":"609:10:4","nodeType":"EventDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"indexed":false,"mutability":"mutable","name":"wethBal_","nameLocation":"628:8:4","nodeType":"VariableDeclaration","scope":957,"src":"620:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"620:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":955,"indexed":false,"mutability":"mutable","name":"reqAmount_","nameLocation":"646:10:4","nodeType":"VariableDeclaration","scope":957,"src":"638:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"619:38:4"},"src":"603:55:4"},{"anonymous":false,"id":963,"name":"ZeroXCallSuccess","nameLocation":"669:16:4","nodeType":"EventDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"691:6:4","nodeType":"VariableDeclaration","scope":963,"src":"686:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":958,"name":"bool","nodeType":"ElementaryTypeName","src":"686:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":961,"indexed":false,"mutability":"mutable","name":"initialBuyTokenBalance","nameLocation":"707:22:4","nodeType":"VariableDeclaration","scope":963,"src":"699:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"685:45:4"},"src":"663:68:4"},{"anonymous":false,"id":967,"name":"buyTokenBought","nameLocation":"742:14:4","nodeType":"EventDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"indexed":false,"mutability":"mutable","name":"buTokenAmount","nameLocation":"765:13:4","nodeType":"VariableDeclaration","scope":967,"src":"757:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:23:4"},"src":"736:44:4"},{"anonymous":false,"id":971,"name":"maxTransactionsChange","nameLocation":"791:21:4","nodeType":"EventDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"indexed":false,"mutability":"mutable","name":"maxTransactions","nameLocation":"821:15:4","nodeType":"VariableDeclaration","scope":971,"src":"813:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"812:25:4"},"src":"785:53:4"},{"anonymous":false,"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"844:111:4","text":" @dev Event to notify if transfer successful or failed\n after account approval verified"},"id":980,"name":"TransferSuccessful","nameLocation":"966:18:4","nodeType":"EventDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"indexed":true,"mutability":"mutable","name":"from_","nameLocation":"1010:5:4","nodeType":"VariableDeclaration","scope":980,"src":"994:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"indexed":true,"mutability":"mutable","name":"to_","nameLocation":"1041:3:4","nodeType":"VariableDeclaration","scope":980,"src":"1025:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"1062:7:4","nodeType":"VariableDeclaration","scope":980,"src":"1054:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"984:91:4"},"src":"960:116:4"},{"id":982,"name":"InvalidAddress","nameLocation":"1088:14:4","nodeType":"ErrorDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1102:2:4"},"src":"1082:23:4"},{"id":984,"name":"Invalid_Multiswap_Data","nameLocation":"1116:22:4","nodeType":"ErrorDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"1138:2:4"},"src":"1110:31:4"},{"id":992,"name":"FillQuote_Swap_Failed","nameLocation":"1152:21:4","nodeType":"ErrorDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"buyToken","nameLocation":"1181:8:4","nodeType":"VariableDeclaration","scope":992,"src":"1174:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":986,"nodeType":"UserDefinedTypeName","pathNode":{"id":985,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1174:6:4"},"referencedDeclaration":190,"src":"1174:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"sellToken","nameLocation":"1198:9:4","nodeType":"VariableDeclaration","scope":992,"src":"1191:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":989,"nodeType":"UserDefinedTypeName","pathNode":{"id":988,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1191:6:4"},"referencedDeclaration":190,"src":"1191:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1173:35:4"},"src":"1146:63:4"},{"canonicalName":"AlphaVaultSwap.wethInfo","id":998,"members":[{"constant":false,"id":994,"mutability":"mutable","name":"eth_balance","nameLocation":"1249:11:4","nodeType":"VariableDeclaration","scope":998,"src":"1241:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"wETH","nameLocation":"1276:4:4","nodeType":"VariableDeclaration","scope":998,"src":"1270:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"},"typeName":{"id":996,"nodeType":"UserDefinedTypeName","pathNode":{"id":995,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":937,"src":"1270:5:4"},"referencedDeclaration":937,"src":"1270:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"visibility":"internal"}],"name":"wethInfo","nameLocation":"1222:8:4","nodeType":"StructDefinition","scope":1577,"src":"1215:72:4","visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":1001,"mutability":"immutable","name":"WETH","nameLocation":"1341:4:4","nodeType":"VariableDeclaration","scope":1577,"src":"1318:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"},"typeName":{"id":1000,"nodeType":"UserDefinedTypeName","pathNode":{"id":999,"name":"IWETH","nodeType":"IdentifierPath","referencedDeclaration":937,"src":"1318:5:4"},"referencedDeclaration":937,"src":"1318:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"visibility":"public"},{"constant":false,"functionSelector":"24e1c18d","id":1003,"mutability":"mutable","name":"maxTransactions","nameLocation":"1397:15:4","nodeType":"VariableDeclaration","scope":1577,"src":"1382:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":1005,"mutability":"mutable","name":"fee","nameLocation":"1433:3:4","nodeType":"VariableDeclaration","scope":1577,"src":"1418:18:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1024,"nodeType":"Block","src":"1507:83:4","statements":[{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1010,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1517:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1012,"name":"_WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"1530:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1011,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"1524:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$937_$","typeString":"type(contract IWETH)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"src":"1517:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"id":1015,"nodeType":"ExpressionStatement","src":"1517:19:4"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1016,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"1546:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1564:2:4","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1546:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ExpressionStatement","src":"1546:20:4"},{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1020,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1576:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1582:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1576:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"1576:7:4"}]},"id":1025,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"_WETH","nameLocation":"1500:5:4","nodeType":"VariableDeclaration","scope":1025,"src":"1492:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1491:15:4"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"1507:0:4"},"scope":1577,"src":"1480:110:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1056,"nodeType":"Block","src":"1819:143:4","statements":[{"expression":{"arguments":[{"expression":{"id":1037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1852:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1852:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1041,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1872:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"1879:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1034,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"1829:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"1829:22:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1829:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1045,"nodeType":"ExpressionStatement","src":"1829:57:4"},{"eventCall":{"arguments":[{"expression":{"id":1047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1921:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1921:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1051,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1941:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}],"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1933:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:4","typeDescriptions":{}}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1933:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"1948:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"TransferSuccessful","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"1902:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1902:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"EmitStatement","src":"1897:58:4"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"1596:154:4","text":" @dev Deposits ERC20 tokens into the contract.\n @param sellToken The token to deposit.\n @param amount The amount to deposit."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"1764:12:4","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"sellToken","nameLocation":"1784:9:4","nodeType":"VariableDeclaration","scope":1057,"src":"1777:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1028,"nodeType":"UserDefinedTypeName","pathNode":{"id":1027,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1777:6:4"},"referencedDeclaration":190,"src":"1777:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"amount","nameLocation":"1803:6:4","nodeType":"VariableDeclaration","scope":1057,"src":"1795:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1776:34:4"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"1819:0:4"},"scope":1577,"src":"1755:207:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1069,"nodeType":"Block","src":"2116:26:4","statements":[{"expression":{"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1065,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2126:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1066,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2132:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1068,"nodeType":"ExpressionStatement","src":"2126:9:4"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"1968:95:4","text":" @dev Sets the fee for the transactions.\n @param num The new fee value."},"functionSelector":"73fee090","id":1070,"implemented":true,"kind":"function","modifiers":[{"id":1063,"kind":"modifierInvocation","modifierName":{"id":1062,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2106:9:4"},"nodeType":"ModifierInvocation","src":"2106:9:4"}],"name":"setfee","nameLocation":"2077:6:4","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"num","nameLocation":"2092:3:4","nodeType":"VariableDeclaration","scope":1070,"src":"2084:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2083:13:4"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"2116:0:4"},"scope":1577,"src":"2068:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1086,"nodeType":"Block","src":"2329:91:4","statements":[{"expression":{"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1078,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2339:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1079,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2357:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2339:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1081,"nodeType":"ExpressionStatement","src":"2339:21:4"},{"eventCall":{"arguments":[{"id":1083,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2397:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1082,"name":"maxTransactionsChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2375:21:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"EmitStatement","src":"2370:43:4"}]},"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"2148:112:4","text":" @dev Sets the maximum transaction limit.\n @param num The new maximum transaction limit."},"functionSelector":"7a9d7c14","id":1087,"implemented":true,"kind":"function","modifiers":[{"id":1076,"kind":"modifierInvocation","modifierName":{"id":1075,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2319:9:4"},"nodeType":"ModifierInvocation","src":"2319:9:4"}],"name":"setMaxTransactionLimit","nameLocation":"2274:22:4","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"num","nameLocation":"2305:3:4","nodeType":"VariableDeclaration","scope":1087,"src":"2297:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2296:13:4"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"2329:0:4"},"scope":1577,"src":"2265:155:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1090,"nodeType":"Block","src":"2533:2:4","statements":[]},"id":1091,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"2513:2:4"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"2533:0:4"},"scope":1577,"src":"2506:29:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1094,"nodeType":"Block","src":"2569:2:4","statements":[]},"id":1095,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[],"src":"2549:2:4"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"2569:0:4"},"scope":1577,"src":"2541:30:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1111,"nodeType":"Block","src":"2704:51:4","statements":[{"expression":{"arguments":[{"expression":{"id":1106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2729:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2729:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2741:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1103,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2714:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"2714:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2714:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"ExpressionStatement","src":"2714:34:4"}]},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"2651:13:4","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"token","nameLocation":"2672:5:4","nodeType":"VariableDeclaration","scope":1112,"src":"2665:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1097,"nodeType":"UserDefinedTypeName","pathNode":{"id":1096,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2665:6:4"},"referencedDeclaration":190,"src":"2665:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"amount","nameLocation":"2687:6:4","nodeType":"VariableDeclaration","scope":1112,"src":"2679:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:30:4"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"2704:0:4"},"scope":1577,"src":"2642:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"2995:48:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1124,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"3020:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3020:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1126,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3029:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1121,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3005:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3005:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3005:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1128,"nodeType":"ExpressionStatement","src":"3005:31:4"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"2761:169:4","text":" @dev Transfers the fee amount of tokens to the owner.\n @param token The token to transfer as a fee.\n @param amount The amount to transfer."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFee","nameLocation":"2944:11:4","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"token","nameLocation":"2963:5:4","nodeType":"VariableDeclaration","scope":1130,"src":"2956:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1115,"nodeType":"UserDefinedTypeName","pathNode":{"id":1114,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2956:6:4"},"referencedDeclaration":190,"src":"2956:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"amount","nameLocation":"2978:6:4","nodeType":"VariableDeclaration","scope":1130,"src":"2970:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2955:30:4"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[],"src":"2995:0:4"},"scope":1577,"src":"2935:108:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"3152:71:4","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3206:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3206:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"3199:17:4"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"setDestination","nameLocation":"3103:14:4","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"3117:2:4"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"3143:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3142:9:4"},"scope":1577,"src":"3094:129:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"3477:52:4","statements":[{"expression":{"arguments":[{"id":1152,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3515:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1149,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3495:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3487:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"3487:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3487:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"3487:27:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3487:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"3487:35:4"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"3229:178:4","text":" @dev Transfers an amount of ETH to a given address.\n @param amount The amount of ETH to transfer.\n @param msgSender The address to receive the ETH."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"transferEth","nameLocation":"3421:11:4","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"amount","nameLocation":"3441:6:4","nodeType":"VariableDeclaration","scope":1156,"src":"3433:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"msgSender","nameLocation":"3457:9:4","nodeType":"VariableDeclaration","scope":1156,"src":"3449:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3432:35:4"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"3477:0:4"},"scope":1577,"src":"3412:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"4407:690:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4421:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4440:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4432:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"4432:7:4","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4432:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4421:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4417:50:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1180,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4451:14:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"RevertStatement","src":"4444:23:4"}},{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"boughtAmount","nameLocation":"4566:12:4","nodeType":"VariableDeclaration","scope":1245,"src":"4558:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4558:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"arguments":[{"id":1190,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4608:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4600:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"4600:7:4","typeDescriptions":{}}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4600:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1186,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4581:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"4581:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4558:56:4"},{"expression":{"arguments":[{"id":1197,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4642:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1199,"name":"uint128","nodeType":"ElementaryTypeName","src":"4656:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4651:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4651:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4651:17:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1194,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4624:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"4624:17:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4624:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"ExpressionStatement","src":"4624:45:4"},{"assignments":[1206,null],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"success","nameLocation":"4685:7:4","nodeType":"VariableDeclaration","scope":1245,"src":"4680:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1205,"name":"bool","nodeType":"ElementaryTypeName","src":"4680:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1213,"initialValue":{"arguments":[{"id":1211,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4724:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1207,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4698:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4698:15:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4721:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"src":"4698:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4698:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4679:58:4"},{"eventCall":{"arguments":[{"id":1215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4769:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1216,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4778:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"ZeroXCallSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4752:16:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4752:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"EmitStatement","src":"4747:44:4"},{"condition":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4805:8:4","subExpression":{"id":1219,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4806:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1226,"nodeType":"IfStatement","src":"4801:144:4","trueBody":{"errorCall":{"arguments":[{"id":1222,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4884:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":1223,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4921:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":1221,"name":"FillQuote_Swap_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4834:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$returns$__$","typeString":"function (contract IERC20,contract IERC20) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":["buyToken","sellToken"],"nodeType":"FunctionCall","src":"4834:111:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"RevertStatement","src":"4827:118:4"}},{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1227,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4955:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1232,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4997:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AlphaVaultSwap_$1577","typeString":"contract AlphaVaultSwap"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4989:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"4989:7:4","typeDescriptions":{}}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4989:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1228,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4970:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"4970:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4970:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1235,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5006:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4970:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4955:63:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"4955:63:4"},{"eventCall":{"arguments":[{"id":1240,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5048:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1239,"name":"buyTokenBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5033:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"EmitStatement","src":"5028:33:4"},{"expression":{"id":1243,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5078:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1173,"id":1244,"nodeType":"Return","src":"5071:19:4"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"3535:454:4","text":" @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\n @param buyToken The token to buy.\n @param sellToken The token to sell.\n @param spender The address approved for spending the sellToken.\n @param swapTarget The target contract to execute the swap.\n @param swapCallData The data to call the swap function on the swapTarget.\n @return boughtAmount The amount of buyToken bought."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"fillQuote","nameLocation":"3999:9:4","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"buyToken","nameLocation":"4087:8:4","nodeType":"VariableDeclaration","scope":1246,"src":"4080:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1159,"nodeType":"UserDefinedTypeName","pathNode":{"id":1158,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4080:6:4"},"referencedDeclaration":190,"src":"4080:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"sellToken","nameLocation":"4112:9:4","nodeType":"VariableDeclaration","scope":1246,"src":"4105:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":1162,"nodeType":"UserDefinedTypeName","pathNode":{"id":1161,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4105:6:4"},"referencedDeclaration":190,"src":"4105:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"spender","nameLocation":"4201:7:4","nodeType":"VariableDeclaration","scope":1246,"src":"4193:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"4193:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"swapTarget","nameLocation":"4275:10:4","nodeType":"VariableDeclaration","scope":1246,"src":"4267:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"4267:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"swapCallData","nameLocation":"4361:12:4","nodeType":"VariableDeclaration","scope":1246,"src":"4346:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4346:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4008:371:4"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"4398:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"4398:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4397:9:4"},"scope":1577,"src":"3990:1107:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"5856:2828:4","statements":[{"condition":{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5883:201:4","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1270,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"5885:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5885:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1272,"name":"maxTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5905:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5885:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1274,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"5940:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5940:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1276,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5960:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5960:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5885:90:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1280,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"5995:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5995:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1282,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6013:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6013:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5995:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5885:143:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1286,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6048:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6048:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1288,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6069:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6069:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6048:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5885:198:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5884:200:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"5866:260:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1294,"name":"Invalid_Multiswap_Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6102:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6102:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"RevertStatement","src":"6095:31:4"}},{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"WethInfo","nameLocation":"6153:8:4","nodeType":"VariableDeclaration","scope":1575,"src":"6137:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo"},"typeName":{"id":1299,"nodeType":"UserDefinedTypeName","pathNode":{"id":1298,"name":"wethInfo","nodeType":"IdentifierPath","referencedDeclaration":998,"src":"6137:8:4"},"referencedDeclaration":998,"src":"6137:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_storage_ptr","typeString":"struct AlphaVaultSwap.wethInfo"}},"visibility":"internal"}],"id":1305,"initialValue":{"arguments":[{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6173:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1303,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"6176:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}],"id":1301,"name":"wethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6164:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_wethInfo_$998_storage_ptr_$","typeString":"type(struct AlphaVaultSwap.wethInfo storage pointer)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6164:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"6137:44:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6196:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6196:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6208:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6196:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1333,"nodeType":"IfStatement","src":"6192:190:4","trueBody":{"id":1332,"nodeType":"Block","src":"6211:171:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1310,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6225:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":997,"src":"6225:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":931,"src":"6225:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6254:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6254:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6225:39:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6225:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"6225:41:4"},{"expression":{"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1320,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6280:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6280:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6303:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6303:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6280:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"nodeType":"ExpressionStatement","src":"6280:32:4"},{"eventCall":{"arguments":[{"expression":{"id":1328,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6350:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6350:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6331:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6331:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"EmitStatement","src":"6326:45:4"}]}},{"body":{"id":1556,"nodeType":"Block","src":"6437:2087:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6502:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1347,"indexExpression":{"id":1346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6510:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6502:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6524:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6516:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:4","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6516:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6502:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"6498:536:4","trueBody":{"id":1409,"nodeType":"Block","src":"6528:506:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1353,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6550:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6550:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":1355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6573:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1357,"indexExpression":{"id":1356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6580:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6573:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6550:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1369,"nodeType":"IfStatement","src":"6546:154:4","trueBody":{"id":1368,"nodeType":"Block","src":"6584:116:4","statements":[{"eventCall":{"arguments":[{"expression":{"id":1360,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6622:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6622:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1362,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6644:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1364,"indexExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6651:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6644:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1359,"name":"BadRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6611:10:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6611:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"EmitStatement","src":"6606:48:4"},{"id":1367,"nodeType":"Break","src":"6676:5:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6721:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1372,"indexExpression":{"id":1371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6728:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6733:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6721:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"IfStatement","src":"6717:277:4","trueBody":{"id":1406,"nodeType":"Block","src":"6736:258:4","statements":[{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1375,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6758:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6758:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":1378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6782:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1380,"indexExpression":{"id":1379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6789:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6782:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ExpressionStatement","src":"6758:33:4"},{"expression":{"arguments":[{"baseExpression":{"id":1388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6836:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1390,"indexExpression":{"id":1389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6843:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6836:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1383,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6813:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":997,"src":"6813:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":936,"src":"6813:22:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6813:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"6813:33:4"},{"expression":{"arguments":[{"baseExpression":{"id":1394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6880:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1396,"indexExpression":{"id":1395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6887:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6880:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1397,"name":"setDestination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6891:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6891:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"transferEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"6868:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6868:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"6868:40:4"},{"eventCall":{"arguments":[{"expression":{"id":1402,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6954:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"6954:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1401,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6935:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6935:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1405,"nodeType":"EmitStatement","src":"6930:45:4"}]}},{"id":1408,"nodeType":"Continue","src":"7011:8:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1411,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7139:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1413,"indexExpression":{"id":1412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7149:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7139:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1414,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7155:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":997,"src":"7155:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"src":"7139:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"7585:70:4","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1464,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7616:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1466,"indexExpression":{"id":1465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7626:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7616:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":1467,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7630:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1469,"indexExpression":{"id":1468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7637:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7630:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7603:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7603:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1471,"nodeType":"ExpressionStatement","src":"7603:37:4"}]},"id":1473,"nodeType":"IfStatement","src":"7135:520:4","trueBody":{"id":1462,"nodeType":"Block","src":"7170:409:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1417,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7192:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1419,"indexExpression":{"id":1418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7202:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7192:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1420,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7208:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1422,"indexExpression":{"id":1421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7217:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7208:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"7192:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1448,"nodeType":"IfStatement","src":"7188:263:4","trueBody":{"id":1447,"nodeType":"Block","src":"7221:230:4","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1425,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7256:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1427,"indexExpression":{"id":1426,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7266:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7256:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":1428,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7270:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1430,"indexExpression":{"id":1429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7277:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7270:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1424,"name":"depositToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7243:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7243:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"ExpressionStatement","src":"7243:37:4"},{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1433,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7302:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"7302:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1436,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7326:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1438,"indexExpression":{"id":1437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7333:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7326:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7302:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ExpressionStatement","src":"7302:33:4"},{"eventCall":{"arguments":[{"expression":{"id":1442,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7381:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"7381:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1441,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7362:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7362:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"EmitStatement","src":"7357:45:4"},{"id":1446,"nodeType":"Continue","src":"7424:8:4"}]}},{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1449,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7468:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"7468:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":1452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7492:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1454,"indexExpression":{"id":1453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7499:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7492:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7468:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1456,"nodeType":"ExpressionStatement","src":"7468:33:4"},{"eventCall":{"arguments":[{"expression":{"id":1458,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7543:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"7543:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1457,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7524:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7524:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"EmitStatement","src":"7519:45:4"}]}},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"boughtAmount","nameLocation":"7738:12:4","nodeType":"VariableDeclaration","scope":1556,"src":"7730:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"7730:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[{"baseExpression":{"id":1477,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7780:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1479,"indexExpression":{"id":1478,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7789:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7780:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":1480,"name":"sellToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7809:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1482,"indexExpression":{"id":1481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7819:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7809:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"baseExpression":{"id":1483,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"7839:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1485,"indexExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7847:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7839:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1486,"name":"swapTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"7867:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[] calldata"}},"id":1488,"indexExpression":{"id":1487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7878:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7867:13:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":1489,"name":"swapCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"7898:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1491,"indexExpression":{"id":1490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7911:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7898:15:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1476,"name":"fillQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"7753:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,address,address,bytes calldata) returns (uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7753:174:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7730:197:4"},{"assignments":[1495],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"feeOfSwap","nameLocation":"7946:9:4","nodeType":"VariableDeclaration","scope":1556,"src":"7941:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint","nodeType":"ElementaryTypeName","src":"7941:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7959:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1497,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7965:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7958:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7981:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7958:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7941:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1503,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8004:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1505,"indexExpression":{"id":1504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8013:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8004:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1506,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8019:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":997,"src":"8019:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},"src":"8004:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1554,"nodeType":"Block","src":"8312:202:4","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1532,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8344:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1534,"indexExpression":{"id":1533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8353:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8344:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8357:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1536,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8372:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8357:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1531,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8330:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8330:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"8330:52:4"},{"expression":{"arguments":[{"baseExpression":{"id":1541,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8412:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1543,"indexExpression":{"id":1542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8421:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8412:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":1544,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8425:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1540,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8400:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8400:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"ExpressionStatement","src":"8400:35:4"},{"eventCall":{"arguments":[{"baseExpression":{"id":1548,"name":"buyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8473:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":1550,"indexExpression":{"id":1549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8482:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8473:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":1551,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8486:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1547,"name":"WithdrawTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8458:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8458:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"EmitStatement","src":"8453:46:4"}]},"id":1555,"nodeType":"IfStatement","src":"8000:514:4","trueBody":{"id":1530,"nodeType":"Block","src":"8034:272:4","statements":[{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1509,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8052:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8052:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1512,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8095:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8095:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1514,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8138:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:55:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1516,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8173:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:87:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8052:130:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"8052:130:4"},{"expression":{"arguments":[{"id":1521,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8212:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},{"id":1522,"name":"feeOfSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8218:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8200:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"ExpressionStatement","src":"8200:28:4"},{"eventCall":{"arguments":[{"expression":{"id":1526,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8270:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8270:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1525,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"8251:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8251:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"EmitStatement","src":"8246:45:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6412:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1339,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"6416:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6416:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6412:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"initializationExpression":{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"i","nameLocation":"6405:1:4","nodeType":"VariableDeclaration","scope":1557,"src":"6397:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"6397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1337,"initialValue":{"hexValue":"30","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6409:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6397:13:4"},"loopExpression":{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6432:3:4","subExpression":{"id":1342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"6432:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ExpressionStatement","src":"6432:3:4"},"nodeType":"ForStatement","src":"6392:2132:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1558,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8537:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8537:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8560:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8537:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1574,"nodeType":"IfStatement","src":"8533:145:4","trueBody":{"id":1573,"nodeType":"Block","src":"8563:115:4","statements":[{"expression":{"arguments":[{"expression":{"id":1563,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8591:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wETH","nodeType":"MemberAccess","referencedDeclaration":997,"src":"8591:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"}},{"expression":{"id":1565,"name":"WethInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8606:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_wethInfo_$998_memory_ptr","typeString":"struct AlphaVaultSwap.wethInfo memory"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"eth_balance","nodeType":"MemberAccess","referencedDeclaration":994,"src":"8606:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$937","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"name":"withdrawToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8577:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8577:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"8577:50:4"},{"eventCall":{"arguments":[{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8665:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1569,"name":"EtherBalanceChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"8646:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8646:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"EmitStatement","src":"8641:26:4"}]}}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"5103:478:4","text":" @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\n @param sellToken addresses of sell tokens\n @param buyToken addresses of sell tokens\n @param spender The address approved for spending the sellToken.\n @param swapTarget The target contract to execute the swap.\n @param swapCallData The data to call the swap function on the swapTarget.\n @param amount amount of sell token to swap."},"functionSelector":"6ca591a7","id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"multiSwap","nameLocation":"5595:9:4","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"sellToken","nameLocation":"5632:9:4","nodeType":"VariableDeclaration","scope":1576,"src":"5614:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1249,"nodeType":"UserDefinedTypeName","pathNode":{"id":1248,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"5614:6:4"},"referencedDeclaration":190,"src":"5614:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1250,"nodeType":"ArrayTypeName","src":"5614:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"buyToken","nameLocation":"5669:8:4","nodeType":"VariableDeclaration","scope":1576,"src":"5651:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1253,"nodeType":"UserDefinedTypeName","pathNode":{"id":1252,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"5651:6:4"},"referencedDeclaration":190,"src":"5651:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1254,"nodeType":"ArrayTypeName","src":"5651:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$190_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"spender","nameLocation":"5706:7:4","nodeType":"VariableDeclaration","scope":1576,"src":"5687:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1257,"nodeType":"ArrayTypeName","src":"5687:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"swapTarget","nameLocation":"5750:10:4","nodeType":"VariableDeclaration","scope":1576,"src":"5723:37:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_calldata_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"5723:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1260,"nodeType":"ArrayTypeName","src":"5723:17:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"swapCallData","nameLocation":"5787:12:4","nodeType":"VariableDeclaration","scope":1576,"src":"5770:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"5770:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1263,"nodeType":"ArrayTypeName","src":"5770:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"amount","nameLocation":"5826:6:4","nodeType":"VariableDeclaration","scope":1576,"src":"5809:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"5809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1266,"nodeType":"ArrayTypeName","src":"5809:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5604:234:4"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"5856:0:4"},"scope":1577,"src":"5586:3098:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1578,"src":"416:8270:4","usedErrors":[982,984,992]}],"src":"32:8655:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AlphaVaultETH.sol":{"AlphaVaultSwapETH":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"contract IERC20","name":"sellToken","type":"address"}],"name":"FillQuote_Swap_Failed","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"Invalid_Multiswap_Data","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reqAmount_","type":"uint256"}],"name":"BadRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"}],"name":"EtherBalanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from_","type":"address"},{"indexed":true,"internalType":"address","name":"to_","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"TransferSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IERC20","name":"buyToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"boughtAmount_","type":"uint256"}],"name":"WithdrawTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"status","type":"bool"},{"indexed":false,"internalType":"uint256","name":"initialBuyTokenBalance","type":"uint256"}],"name":"ZeroXCallSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"buTokenAmount","type":"uint256"}],"name":"buyTokenBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxTransactions","type":"uint256"}],"name":"maxTransactionsChange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransactions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"sellToken","type":"address[]"},{"internalType":"contract IERC20[]","name":"buyToken","type":"address[]"},{"internalType":"address[]","name":"spender","type":"address[]"},{"internalType":"address payable[]","name":"swapTarget","type":"address[]"},{"internalType":"bytes[]","name":"swapCallData","type":"bytes[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"name":"multiSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setMaxTransactionLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setfee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Chitranshu Varshney","details":"A contract for swapping ERC20 tokens using 0x-API quotes.","events":{"TransferSuccessful(address,address,uint256)":{"details":"Event to notify if transfer successful or failed after account approval verified"}},"kind":"dev","methods":{"multiSwap(address[],address[],address[],address[],bytes[],uint256[])":{"details":"Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.","params":{"amount":"amount of sell token to swap.","buyToken":"addresses of sell tokens","sellToken":"addresses of sell tokens","spender":"The address approved for spending the sellToken.","swapCallData":"The data to call the swap function on the swapTarget.","swapTarget":"The target contract to execute the swap."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMaxTransactionLimit(uint256)":{"details":"Sets the maximum transaction limit.","params":{"num":"The new maximum transaction limit."}},"setfee(uint256)":{"details":"Sets the fee for the transactions.","params":{"num":"The new fee value."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AlphaVaultSwap","version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_330":{"entryPoint":null,"id":330,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":141,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":149,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5061002d61002261008d60201b60201c565b61009560201b60201c565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060196001819055506000600281905550610159565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60805160601c612276620001866000396000818161027b015281816109760152610bc201526122766000f3fe60806040526004361061008a5760003560e01c80637a9d7c14116100595780637a9d7c141461011a5780638da5cb5b14610143578063ad5c46481461016e578063ddca3f4314610199578063f2fde38b146101c457610091565b806324e1c18d146100935780636ca591a7146100be578063715018a6146100da57806373fee090146100f157610091565b3661009157005b005b34801561009f57600080fd5b506100a86101ed565b6040516100b59190611545565b60405180910390f35b6100d860048036038101906100d39190611856565b6101f3565b005b3480156100e657600080fd5b506100ef610b26565b005b3480156100fd57600080fd5b50610118600480360381019061011391906119a3565b610b3a565b005b34801561012657600080fd5b50610141600480360381019061013c91906119a3565b610b4c565b005b34801561014f57600080fd5b50610158610b97565b6040516101659190611a11565b60405180910390f35b34801561017a57600080fd5b50610183610bc0565b6040516101909190611a8b565b60405180910390f35b3480156101a557600080fd5b506101ae610be4565b6040516101bb9190611545565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190611ad2565b610bea565b005b60015481565b6001548b8b90501115801561020d5750888890508b8b9050145b801561021e57508888905087879050145b801561022f57508686905085859050145b610265576040517f90b42d6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060400160405280600081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152509050600034111561036957806020015173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b5050505050348160000181815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1681600001516040516103609190611545565b60405180910390a15b60005b88889050811015610abf57600073ffffffffffffffffffffffffffffffffffffffff168989838181106103a2576103a1611aff565b5b90506020020160208101906103b79190611ad2565b73ffffffffffffffffffffffffffffffffffffffff1614156105a0578281815181106103e6576103e5611aff565b5b602002602001015182600001511015610455577f0b74b0798ec89f7cf91b1446e01c1bb75b7d55c45b104edfb364a46a074e2f56826000015184838151811061043257610431611aff565b5b6020026020010151604051610448929190611b2e565b60405180910390a1610abf565b600083828151811061046a57610469611aff565b5b6020026020010151111561059b5782818151811061048b5761048a611aff565b5b6020026020010151826000018181516104a49190611b86565b91508181525050816020015173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8483815181106104de576104dd611aff565b5b60200260200101516040518263ffffffff1660e01b81526004016105029190611545565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b5050505061055f83828151811061054a57610549611aff565b5b602002602001015161055a610c6e565b610c76565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516105929190611545565b60405180910390a15b610aac565b816020015173ffffffffffffffffffffffffffffffffffffffff168d8d838181106105ce576105cd611aff565b5b90506020020160208101906105e39190611bf8565b73ffffffffffffffffffffffffffffffffffffffff1614156107b2578a8a8281811061061257610611611aff565b5b90506020020160208101906106279190611bf8565b73ffffffffffffffffffffffffffffffffffffffff168d8d838181106106505761064f611aff565b5b90506020020160208101906106659190611bf8565b73ffffffffffffffffffffffffffffffffffffffff16141561073f576106cc8d8d8381811061069757610696611aff565b5b90506020020160208101906106ac9190611bf8565b8483815181106106bf576106be611aff565b5b6020026020010151610cc1565b8281815181106106df576106de611aff565b5b6020026020010151826000018181516106f89190611c25565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107329190611545565b60405180910390a1610aac565b82818151811061075257610751611aff565b5b60200260200101518260000181815161076b9190611b86565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107a59190611545565b60405180910390a16107fe565b6107fd8d8d838181106107c8576107c7611aff565b5b90506020020160208101906107dd9190611bf8565b8483815181106107f0576107ef611aff565b5b6020026020010151610cc1565b5b60006108cd8c8c8481811061081657610815611aff565b5b905060200201602081019061082b9190611bf8565b8f8f8581811061083e5761083d611aff565b5b90506020020160208101906108539190611bf8565b8c8c8681811061086657610865611aff565b5b905060200201602081019061087b9190611ad2565b8b8b8781811061088e5761088d611aff565b5b90506020020160208101906108a39190611cb9565b8a8a888181106108b6576108b5611aff565b5b90506020028101906108c89190611cf5565b610e8b565b90506000612710826002546108e29190611d58565b6108ec9190611de1565b9050836020015173ffffffffffffffffffffffffffffffffffffffff168d8d8581811061091c5761091b611aff565b5b90506020020160208101906109319190611bf8565b73ffffffffffffffffffffffffffffffffffffffff1614156109db578082856000015161095e9190611c25565b6109689190611b86565b84600001818152505061099b7f0000000000000000000000000000000000000000000000000000000000000000826111e8565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1684600001516040516109ce9190611545565b60405180910390a1610aa9565b610a178d8d858181106109f1576109f0611aff565b5b9050602002016020810190610a069190611bf8565b8284610a129190611b86565b611281565b610a488d8d85818110610a2d57610a2c611aff565b5b9050602002016020810190610a429190611bf8565b826111e8565b7f680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c8d8d85818110610a7c57610a7b611aff565b5b9050602002016020810190610a919190611bf8565b83604051610aa0929190611e33565b60405180910390a15b50505b8080610ab790611e5c565b91505061036c565b50600081600001511115610b1857610adf81602001518260000151611281565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed166000604051610b0f9190611ee0565b60405180910390a15b505050505050505050505050565b610b2e6113e2565b610b386000611460565b565b610b426113e2565b8060028190555050565b610b546113e2565b806001819055507f5091ccfe22ca8f99d8f1f07c6ae3a61daf990d74ef229d46898624ff3977238c600154604051610b8c9190611545565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610bf26113e2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611f7e565b60405180910390fd5b610c6b81611460565b50565b600033905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610cbc573d6000803e3d6000fd5b505050565b73dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d915773dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610d5a93929190611f9e565b600060405180830381600087803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b50505050610e22565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610dce93929190611f9e565b602060405180830381600087803b158015610de857600080fd5b505af1158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e20919061200d565b505b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee83604051610e7f9190611545565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ef3576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f2e9190611a11565b60206040518083038186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e919061204f565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3876fffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610fcb9291906120c9565b602060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d919061200d565b5060008573ffffffffffffffffffffffffffffffffffffffff1660008686604051611049929190612131565b60006040518083038185875af1925050503d8060008114611086576040519150601f19603f3d011682016040523d82523d6000602084013e61108b565b606091505b505090507fb1bbdf0cbdd013d8d322184c42c16dafe4b2b3b66c3d60f46874b6c78b9a87f681836040516110c0929190612159565b60405180910390a18061110c5788886040517f7155081c000000000000000000000000000000000000000000000000000000008152600401611103929190612182565b60405180910390fd5b818973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111469190611a11565b60206040518083038186803b15801561115e57600080fd5b505afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611196919061204f565b6111a09190611b86565b91507f74496fce2cdc392d99808924e4161c005195a64fee4c166b02c2b716db28abb0826040516111d19190611545565b60405180910390a181925050509695505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61120c610b97565b836040518363ffffffff1660e01b815260040161122a9291906121ab565b602060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c919061200d565b505050565b73dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561134f5773dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016113189291906121ab565b600060405180830381600087803b15801561133257600080fd5b505af1158015611346573d6000803e3d6000fd5b505050506113de565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161138a9291906121ab565b602060405180830381600087803b1580156113a457600080fd5b505af11580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc919061200d565b505b5050565b6113ea611524565b73ffffffffffffffffffffffffffffffffffffffff16611408610b97565b73ffffffffffffffffffffffffffffffffffffffff161461145e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145590612220565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61153f8161152c565b82525050565b600060208201905061155a6000830184611536565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261159957611598611574565b5b8235905067ffffffffffffffff8111156115b6576115b5611579565b5b6020830191508360208202830111156115d2576115d161157e565b5b9250929050565b60008083601f8401126115ef576115ee611574565b5b8235905067ffffffffffffffff81111561160c5761160b611579565b5b6020830191508360208202830111156116285761162761157e565b5b9250929050565b60008083601f84011261164557611644611574565b5b8235905067ffffffffffffffff81111561166257611661611579565b5b60208301915083602082028301111561167e5761167d61157e565b5b9250929050565b60008083601f84011261169b5761169a611574565b5b8235905067ffffffffffffffff8111156116b8576116b7611579565b5b6020830191508360208202830111156116d4576116d361157e565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611724826116db565b810181811067ffffffffffffffff82111715611743576117426116ec565b5b80604052505050565b6000611756611560565b9050611762828261171b565b919050565b600067ffffffffffffffff821115611782576117816116ec565b5b602082029050602081019050919050565b61179c8161152c565b81146117a757600080fd5b50565b6000813590506117b981611793565b92915050565b60006117d26117cd84611767565b61174c565b905080838252602082019050602084028301858111156117f5576117f461157e565b5b835b8181101561181e578061180a88826117aa565b8452602084019350506020810190506117f7565b5050509392505050565b600082601f83011261183d5761183c611574565b5b813561184d8482602086016117bf565b91505092915050565b600080600080600080600080600080600060c08c8e03121561187b5761187a61156a565b5b60008c013567ffffffffffffffff8111156118995761189861156f565b5b6118a58e828f01611583565b9b509b505060208c013567ffffffffffffffff8111156118c8576118c761156f565b5b6118d48e828f01611583565b995099505060408c013567ffffffffffffffff8111156118f7576118f661156f565b5b6119038e828f016115d9565b975097505060608c013567ffffffffffffffff8111156119265761192561156f565b5b6119328e828f0161162f565b955095505060808c013567ffffffffffffffff8111156119555761195461156f565b5b6119618e828f01611685565b935093505060a08c013567ffffffffffffffff8111156119845761198361156f565b5b6119908e828f01611828565b9150509295989b509295989b9093969950565b6000602082840312156119b9576119b861156a565b5b60006119c7848285016117aa565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119fb826119d0565b9050919050565b611a0b816119f0565b82525050565b6000602082019050611a266000830184611a02565b92915050565b6000819050919050565b6000611a51611a4c611a47846119d0565b611a2c565b6119d0565b9050919050565b6000611a6382611a36565b9050919050565b6000611a7582611a58565b9050919050565b611a8581611a6a565b82525050565b6000602082019050611aa06000830184611a7c565b92915050565b611aaf816119f0565b8114611aba57600080fd5b50565b600081359050611acc81611aa6565b92915050565b600060208284031215611ae857611ae761156a565b5b6000611af684828501611abd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050611b436000830185611536565b611b506020830184611536565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b918261152c565b9150611b9c8361152c565b925082821015611baf57611bae611b57565b5b828203905092915050565b6000611bc5826119f0565b9050919050565b611bd581611bba565b8114611be057600080fd5b50565b600081359050611bf281611bcc565b92915050565b600060208284031215611c0e57611c0d61156a565b5b6000611c1c84828501611be3565b91505092915050565b6000611c308261152c565b9150611c3b8361152c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c7057611c6f611b57565b5b828201905092915050565b6000611c86826119d0565b9050919050565b611c9681611c7b565b8114611ca157600080fd5b50565b600081359050611cb381611c8d565b92915050565b600060208284031215611ccf57611cce61156a565b5b6000611cdd84828501611ca4565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611d1257611d11611ce6565b5b80840192508235915067ffffffffffffffff821115611d3457611d33611ceb565b5b602083019250600182023603831315611d5057611d4f611cf0565b5b509250929050565b6000611d638261152c565b9150611d6e8361152c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da757611da6611b57565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dec8261152c565b9150611df78361152c565b925082611e0757611e06611db2565b5b828204905092915050565b6000611e1d82611a58565b9050919050565b611e2d81611e12565b82525050565b6000604082019050611e486000830185611e24565b611e556020830184611536565b9392505050565b6000611e678261152c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e9a57611e99611b57565b5b600182019050919050565b6000819050919050565b6000611eca611ec5611ec084611ea5565b611a2c565b61152c565b9050919050565b611eda81611eaf565b82525050565b6000602082019050611ef56000830184611ed1565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f68602683611efb565b9150611f7382611f0c565b604082019050919050565b60006020820190508181036000830152611f9781611f5b565b9050919050565b6000606082019050611fb36000830186611a02565b611fc06020830185611a02565b611fcd6040830184611536565b949350505050565b60008115159050919050565b611fea81611fd5565b8114611ff557600080fd5b50565b60008151905061200781611fe1565b92915050565b6000602082840312156120235761202261156a565b5b600061203184828501611ff8565b91505092915050565b60008151905061204981611793565b92915050565b6000602082840312156120655761206461156a565b5b60006120738482850161203a565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b60006120b36120ae6120a98461207c565b611a2c565b61152c565b9050919050565b6120c381612098565b82525050565b60006040820190506120de6000830185611a02565b6120eb60208301846120ba565b9392505050565b600081905092915050565b82818337600083830152505050565b600061211883856120f2565b93506121258385846120fd565b82840190509392505050565b600061213e82848661210c565b91508190509392505050565b61215381611fd5565b82525050565b600060408201905061216e600083018561214a565b61217b6020830184611536565b9392505050565b60006040820190506121976000830185611e24565b6121a46020830184611e24565b9392505050565b60006040820190506121c06000830185611a02565b6121cd6020830184611536565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061220a602083611efb565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b905091905056fea2646970667358221220db8a2c4d5b60916ec16c88e99bec5aa80186b392ddfddad95890200c887a746a64736f6c63430008080033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x8D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x19 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2276 PUSH3 0x186 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x27B ADD MSTORE DUP2 DUP2 PUSH2 0x976 ADD MSTORE PUSH2 0xBC2 ADD MSTORE PUSH2 0x2276 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9D7C14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xF1 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x22F JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLVALUE DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x455 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x448 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x59B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x55F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x54A JUMPI PUSH2 0x549 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x55A PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAAC JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B2 JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73F JUMPI PUSH2 0x6CC DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAAC JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x7FD DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C7 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x2 SLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x99B PUSH32 0x0 DUP3 PUSH2 0x11E8 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xA17 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP3 DUP5 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xA48 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP3 PUSH2 0x11E8 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAB7 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xADF DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1281 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2E PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x0 PUSH2 0x1460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x13E2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x13E2 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP2 PUSH2 0x1460 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD91 JUMPI PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xE22 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE7F SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x204F JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCB SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1049 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C0 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x110C JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1103 SWAP3 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x204F JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x120C PUSH2 0xB97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x134F JUMPI PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x13DE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x1524 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1408 PUSH2 0xB97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1455 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153F DUP2 PUSH2 0x152C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x167E JUMPI PUSH2 0x167D PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1724 DUP3 PUSH2 0x16DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1742 PUSH2 0x16EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1756 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP PUSH2 0x1762 DUP3 DUP3 PUSH2 0x171B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x16EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x152C JUMP JUMPDEST DUP2 EQ PUSH2 0x17A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B9 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D2 PUSH2 0x17CD DUP5 PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17F5 JUMPI PUSH2 0x17F4 PUSH2 0x157E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x181E JUMPI DUP1 PUSH2 0x180A DUP9 DUP3 PUSH2 0x17AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183D JUMPI PUSH2 0x183C PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x18A5 DUP15 DUP3 DUP16 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x18D4 DUP15 DUP3 DUP16 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1903 DUP15 DUP3 DUP16 ADD PUSH2 0x15D9 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1932 DUP15 DUP3 DUP16 ADD PUSH2 0x162F JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1961 DUP15 DUP3 DUP16 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1983 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1990 DUP15 DUP3 DUP16 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C7 DUP5 DUP3 DUP6 ADD PUSH2 0x17AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0B DUP2 PUSH2 0x19F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A51 PUSH2 0x1A4C PUSH2 0x1A47 DUP5 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A75 DUP3 PUSH2 0x1A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAF DUP2 PUSH2 0x19F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACC DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9C DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BAF JUMPI PUSH2 0x1BAE PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC5 DUP3 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD5 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF2 DUP2 PUSH2 0x1BCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C30 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C86 DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C96 DUP2 PUSH2 0x1C7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB3 DUP2 PUSH2 0x1C8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDD DUP5 DUP3 DUP6 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D4F PUSH2 0x1CF0 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D DUP3 PUSH2 0x1A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2D DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0x1E55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E67 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECA PUSH2 0x1EC5 PUSH2 0x1EC0 DUP5 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDA DUP2 PUSH2 0x1EAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x26 DUP4 PUSH2 0x1EFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1FCD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEA DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2031 DUP5 DUP3 DUP6 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2049 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2065 JUMPI PUSH2 0x2064 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2073 DUP5 DUP3 DUP6 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 PUSH2 0x20AE PUSH2 0x20A9 DUP5 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C3 DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x20EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP4 DUP6 PUSH2 0x20F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2125 DUP4 DUP6 DUP5 PUSH2 0x20FD JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213E DUP3 DUP5 DUP7 PUSH2 0x210C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2153 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x217B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0x21A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x21CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220A PUSH1 0x20 DUP4 PUSH2 0x1EFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2215 DUP3 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2239 DUP2 PUSH2 0x21FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP11 0x2C 0x4D JUMPDEST PUSH1 0x91 PUSH15 0xC16C88E99BEC5AA80186B392DDFDDA 0xD9 PC SWAP1 KECCAK256 0xC DUP9 PUSH27 0x746A64736F6C634300080800330000000000000000000000000000 ","sourceMap":"568:8792:3:-:0;;;1635:134;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1672:42:3;1659:56;;;;;;;;;;;;1743:2;1725:15;:20;;;;1761:1;1755:3;:7;;;;568:8792;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;568:8792:3:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_308":{"entryPoint":3008,"id":308,"parameterSlots":0,"returnSlots":0},"@_418":{"entryPoint":null,"id":418,"parameterSlots":0,"returnSlots":0},"@_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5090,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":5412,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":5216,"id":111,"parameterSlots":1,"returnSlots":0},"@depositToken_384":{"entryPoint":3265,"id":384,"parameterSlots":2,"returnSlots":0},"@fee_312":{"entryPoint":3044,"id":312,"parameterSlots":0,"returnSlots":0},"@fillQuote_591":{"entryPoint":3723,"id":591,"parameterSlots":6,"returnSlots":1},"@maxTransactions_310":{"entryPoint":493,"id":310,"parameterSlots":0,"returnSlots":0},"@multiSwap_921":{"entryPoint":499,"id":921,"parameterSlots":11,"returnSlots":0},"@owner_40":{"entryPoint":2967,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2854,"id":68,"parameterSlots":0,"returnSlots":0},"@setDestination_484":{"entryPoint":3182,"id":484,"parameterSlots":0,"returnSlots":1},"@setMaxTransactionLimit_414":{"entryPoint":2892,"id":414,"parameterSlots":1,"returnSlots":0},"@setfee_397":{"entryPoint":2874,"id":397,"parameterSlots":1,"returnSlots":0},"@transferEth_501":{"entryPoint":3190,"id":501,"parameterSlots":2,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3050,"id":91,"parameterSlots":1,"returnSlots":0},"@withdrawFee_475":{"entryPoint":4584,"id":475,"parameterSlots":2,"returnSlots":0},"@withdrawToken_457":{"entryPoint":4737,"id":457,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6079,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":7332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":5593,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr":{"entryPoint":5679,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5765,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr":{"entryPoint":5507,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":8184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$190":{"entryPoint":7139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":8250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6866,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":7353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6230,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$190":{"entryPoint":7160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8522,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8460,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack":{"entryPoint":7716,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack":{"entryPoint":6780,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":7889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8701,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint128_to_t_uint256_fromStack":{"entryPoint":8378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5430,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8094,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8393,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8619,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":8537,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed":{"entryPoint":8578,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7731,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed":{"entryPoint":6795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":7904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6958,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":7413,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":5964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5472,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5991,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8434,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7205,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7649,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7512,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7046,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":7291,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8149,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$190":{"entryPoint":7098,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":7845,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint128":{"entryPoint":8316,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6608,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5420,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$190_to_t_address":{"entryPoint":7698,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IWETH_$227_to_t_address":{"entryPoint":6762,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":7855,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint128_to_t_uint256":{"entryPoint":8344,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6744,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6710,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8445,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5915,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6700,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7772,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6999,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7602,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6911,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5868,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5497,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5492,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":7403,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":7398,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5502,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":7408,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5487,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5482,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5851,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":7948,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8660,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6822,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":7309,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8161,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$190":{"entryPoint":7116,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6035,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23850:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:5","statements":[{"nodeType":"YulAssignment","src":"62:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:77:5"},{"body":{"nodeType":"YulBlock","src":"155:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:5"},"nodeType":"YulFunctionCall","src":"177:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:5"},"nodeType":"YulFunctionCall","src":"165:37:5"},"nodeType":"YulExpressionStatement","src":"165:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:5","type":""}],"src":"90:118:5"},{"body":{"nodeType":"YulBlock","src":"312:124:5","statements":[{"nodeType":"YulAssignment","src":"322:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:5"},"nodeType":"YulFunctionCall","src":"330:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:5"},"nodeType":"YulFunctionCall","src":"411:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:5"},"nodeType":"YulFunctionCall","src":"358:71:5"},"nodeType":"YulExpressionStatement","src":"358:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:5","type":""}],"src":"214:222:5"},{"body":{"nodeType":"YulBlock","src":"482:35:5","statements":[{"nodeType":"YulAssignment","src":"492:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:5"},"nodeType":"YulFunctionCall","src":"502:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:5","type":""}],"src":"442:75:5"},{"body":{"nodeType":"YulBlock","src":"612:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:5"},"nodeType":"YulFunctionCall","src":"622:12:5"},"nodeType":"YulExpressionStatement","src":"622:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:5"},{"body":{"nodeType":"YulBlock","src":"735:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:5"},"nodeType":"YulFunctionCall","src":"745:12:5"},"nodeType":"YulExpressionStatement","src":"745:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:5"},{"body":{"nodeType":"YulBlock","src":"858:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:5"},"nodeType":"YulFunctionCall","src":"868:12:5"},"nodeType":"YulExpressionStatement","src":"868:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:5"},{"body":{"nodeType":"YulBlock","src":"981:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:5"},"nodeType":"YulFunctionCall","src":"991:12:5"},"nodeType":"YulExpressionStatement","src":"991:12:5"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"892:117:5"},{"body":{"nodeType":"YulBlock","src":"1104:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1114:6:5"},"nodeType":"YulFunctionCall","src":"1114:12:5"},"nodeType":"YulExpressionStatement","src":"1114:12:5"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1015:117:5"},{"body":{"nodeType":"YulBlock","src":"1267:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"1316:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1318:77:5"},"nodeType":"YulFunctionCall","src":"1318:79:5"},"nodeType":"YulExpressionStatement","src":"1318:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1295:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1303:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1291:3:5"},"nodeType":"YulFunctionCall","src":"1291:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"1310:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1287:3:5"},"nodeType":"YulFunctionCall","src":"1287:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1280:6:5"},"nodeType":"YulFunctionCall","src":"1280:35:5"},"nodeType":"YulIf","src":"1277:122:5"},{"nodeType":"YulAssignment","src":"1408:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1431:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1418:12:5"},"nodeType":"YulFunctionCall","src":"1418:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1408:6:5"}]},{"body":{"nodeType":"YulBlock","src":"1481:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1483:77:5"},"nodeType":"YulFunctionCall","src":"1483:79:5"},"nodeType":"YulExpressionStatement","src":"1483:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1453:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1461:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1450:2:5"},"nodeType":"YulFunctionCall","src":"1450:30:5"},"nodeType":"YulIf","src":"1447:117:5"},{"nodeType":"YulAssignment","src":"1573:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1589:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:5"},"nodeType":"YulFunctionCall","src":"1585:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1573:8:5"}]},{"body":{"nodeType":"YulBlock","src":"1656:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1658:77:5"},"nodeType":"YulFunctionCall","src":"1658:79:5"},"nodeType":"YulExpressionStatement","src":"1658:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1621:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1635:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1643:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1631:3:5"},"nodeType":"YulFunctionCall","src":"1631:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1617:3:5"},"nodeType":"YulFunctionCall","src":"1617:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"1651:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1614:2:5"},"nodeType":"YulFunctionCall","src":"1614:41:5"},"nodeType":"YulIf","src":"1611:128:5"}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1234:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1242:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1250:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1260:6:5","type":""}],"src":"1163:582:5"},{"body":{"nodeType":"YulBlock","src":"1858:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"1907:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1909:77:5"},"nodeType":"YulFunctionCall","src":"1909:79:5"},"nodeType":"YulExpressionStatement","src":"1909:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1886:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1894:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1882:3:5"},"nodeType":"YulFunctionCall","src":"1882:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"1901:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1878:3:5"},"nodeType":"YulFunctionCall","src":"1878:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1871:6:5"},"nodeType":"YulFunctionCall","src":"1871:35:5"},"nodeType":"YulIf","src":"1868:122:5"},{"nodeType":"YulAssignment","src":"1999:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2022:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2009:12:5"},"nodeType":"YulFunctionCall","src":"2009:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1999:6:5"}]},{"body":{"nodeType":"YulBlock","src":"2072:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2074:77:5"},"nodeType":"YulFunctionCall","src":"2074:79:5"},"nodeType":"YulExpressionStatement","src":"2074:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2044:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2052:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2041:2:5"},"nodeType":"YulFunctionCall","src":"2041:30:5"},"nodeType":"YulIf","src":"2038:117:5"},{"nodeType":"YulAssignment","src":"2164:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2180:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:5"},"nodeType":"YulFunctionCall","src":"2176:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2164:8:5"}]},{"body":{"nodeType":"YulBlock","src":"2247:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2249:77:5"},"nodeType":"YulFunctionCall","src":"2249:79:5"},"nodeType":"YulExpressionStatement","src":"2249:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2212:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2226:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2234:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2222:3:5"},"nodeType":"YulFunctionCall","src":"2222:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:5"},"nodeType":"YulFunctionCall","src":"2208:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"2242:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2205:2:5"},"nodeType":"YulFunctionCall","src":"2205:41:5"},"nodeType":"YulIf","src":"2202:128:5"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1825:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1833:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1841:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1851:6:5","type":""}],"src":"1768:568:5"},{"body":{"nodeType":"YulBlock","src":"2465:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"2514:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2516:77:5"},"nodeType":"YulFunctionCall","src":"2516:79:5"},"nodeType":"YulExpressionStatement","src":"2516:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2493:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2501:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2489:3:5"},"nodeType":"YulFunctionCall","src":"2489:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2508:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2485:3:5"},"nodeType":"YulFunctionCall","src":"2485:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2478:6:5"},"nodeType":"YulFunctionCall","src":"2478:35:5"},"nodeType":"YulIf","src":"2475:122:5"},{"nodeType":"YulAssignment","src":"2606:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2629:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2616:12:5"},"nodeType":"YulFunctionCall","src":"2616:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:5"}]},{"body":{"nodeType":"YulBlock","src":"2679:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2681:77:5"},"nodeType":"YulFunctionCall","src":"2681:79:5"},"nodeType":"YulExpressionStatement","src":"2681:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2651:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2659:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2648:2:5"},"nodeType":"YulFunctionCall","src":"2648:30:5"},"nodeType":"YulIf","src":"2645:117:5"},{"nodeType":"YulAssignment","src":"2771:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2787:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2795:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:5"},"nodeType":"YulFunctionCall","src":"2783:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2771:8:5"}]},{"body":{"nodeType":"YulBlock","src":"2854:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2856:77:5"},"nodeType":"YulFunctionCall","src":"2856:79:5"},"nodeType":"YulExpressionStatement","src":"2856:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2819:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2833:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2841:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2829:3:5"},"nodeType":"YulFunctionCall","src":"2829:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:5"},"nodeType":"YulFunctionCall","src":"2815:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"2849:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2812:2:5"},"nodeType":"YulFunctionCall","src":"2812:41:5"},"nodeType":"YulIf","src":"2809:128:5"}]},"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2432:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2440:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2448:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"2458:6:5","type":""}],"src":"2367:576:5"},{"body":{"nodeType":"YulBlock","src":"3065:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"3114:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3116:77:5"},"nodeType":"YulFunctionCall","src":"3116:79:5"},"nodeType":"YulExpressionStatement","src":"3116:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3093:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3101:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:5"},"nodeType":"YulFunctionCall","src":"3089:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"3108:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3085:3:5"},"nodeType":"YulFunctionCall","src":"3085:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3078:6:5"},"nodeType":"YulFunctionCall","src":"3078:35:5"},"nodeType":"YulIf","src":"3075:122:5"},{"nodeType":"YulAssignment","src":"3206:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3229:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3216:12:5"},"nodeType":"YulFunctionCall","src":"3216:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3206:6:5"}]},{"body":{"nodeType":"YulBlock","src":"3279:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3281:77:5"},"nodeType":"YulFunctionCall","src":"3281:79:5"},"nodeType":"YulExpressionStatement","src":"3281:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3251:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3259:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3248:2:5"},"nodeType":"YulFunctionCall","src":"3248:30:5"},"nodeType":"YulIf","src":"3245:117:5"},{"nodeType":"YulAssignment","src":"3371:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3387:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3395:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3383:3:5"},"nodeType":"YulFunctionCall","src":"3383:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3371:8:5"}]},{"body":{"nodeType":"YulBlock","src":"3454:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3456:77:5"},"nodeType":"YulFunctionCall","src":"3456:79:5"},"nodeType":"YulExpressionStatement","src":"3456:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3419:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3433:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3441:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3429:3:5"},"nodeType":"YulFunctionCall","src":"3429:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:5"},"nodeType":"YulFunctionCall","src":"3415:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"3449:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3412:2:5"},"nodeType":"YulFunctionCall","src":"3412:41:5"},"nodeType":"YulIf","src":"3409:128:5"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3032:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"3040:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3048:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3058:6:5","type":""}],"src":"2964:579:5"},{"body":{"nodeType":"YulBlock","src":"3597:54:5","statements":[{"nodeType":"YulAssignment","src":"3607:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3625:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3632:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:5"},"nodeType":"YulFunctionCall","src":"3621:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3641:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3637:3:5"},"nodeType":"YulFunctionCall","src":"3637:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:5"},"nodeType":"YulFunctionCall","src":"3617:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3607:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3580:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3590:6:5","type":""}],"src":"3549:102:5"},{"body":{"nodeType":"YulBlock","src":"3685:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3702:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3705:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:5"},"nodeType":"YulFunctionCall","src":"3695:88:5"},"nodeType":"YulExpressionStatement","src":"3695:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3799:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3792:6:5"},"nodeType":"YulFunctionCall","src":"3792:15:5"},"nodeType":"YulExpressionStatement","src":"3792:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3823:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3826:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3816:6:5"},"nodeType":"YulFunctionCall","src":"3816:15:5"},"nodeType":"YulExpressionStatement","src":"3816:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3657:180:5"},{"body":{"nodeType":"YulBlock","src":"3886:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3896:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3918:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3948:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3926:21:5"},"nodeType":"YulFunctionCall","src":"3926:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:5"},"nodeType":"YulFunctionCall","src":"3914:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3900:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"4065:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4067:16:5"},"nodeType":"YulFunctionCall","src":"4067:18:5"},"nodeType":"YulExpressionStatement","src":"4067:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4008:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"4020:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4005:2:5"},"nodeType":"YulFunctionCall","src":"4005:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4044:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4056:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4041:2:5"},"nodeType":"YulFunctionCall","src":"4041:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4002:2:5"},"nodeType":"YulFunctionCall","src":"4002:62:5"},"nodeType":"YulIf","src":"3999:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4103:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4107:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:5"},"nodeType":"YulFunctionCall","src":"4096:22:5"},"nodeType":"YulExpressionStatement","src":"4096:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3872:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"3880:4:5","type":""}],"src":"3843:281:5"},{"body":{"nodeType":"YulBlock","src":"4171:88:5","statements":[{"nodeType":"YulAssignment","src":"4181:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4191:18:5"},"nodeType":"YulFunctionCall","src":"4191:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4181:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4240:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"4248:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4220:19:5"},"nodeType":"YulFunctionCall","src":"4220:33:5"},"nodeType":"YulExpressionStatement","src":"4220:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4155:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4164:6:5","type":""}],"src":"4130:129:5"},{"body":{"nodeType":"YulBlock","src":"4347:229:5","statements":[{"body":{"nodeType":"YulBlock","src":"4452:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4454:16:5"},"nodeType":"YulFunctionCall","src":"4454:18:5"},"nodeType":"YulExpressionStatement","src":"4454:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4424:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4432:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4421:2:5"},"nodeType":"YulFunctionCall","src":"4421:30:5"},"nodeType":"YulIf","src":"4418:56:5"},{"nodeType":"YulAssignment","src":"4484:25:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4496:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4504:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4492:3:5"},"nodeType":"YulFunctionCall","src":"4492:17:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4484:4:5"}]},{"nodeType":"YulAssignment","src":"4546:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4558:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"4564:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:5"},"nodeType":"YulFunctionCall","src":"4554:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4546:4:5"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4331:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4342:4:5","type":""}],"src":"4265:311:5"},{"body":{"nodeType":"YulBlock","src":"4625:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"4682:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4691:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4694:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4684:6:5"},"nodeType":"YulFunctionCall","src":"4684:12:5"},"nodeType":"YulExpressionStatement","src":"4684:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4648:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4673:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4655:17:5"},"nodeType":"YulFunctionCall","src":"4655:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4645:2:5"},"nodeType":"YulFunctionCall","src":"4645:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4638:6:5"},"nodeType":"YulFunctionCall","src":"4638:43:5"},"nodeType":"YulIf","src":"4635:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4618:5:5","type":""}],"src":"4582:122:5"},{"body":{"nodeType":"YulBlock","src":"4762:87:5","statements":[{"nodeType":"YulAssignment","src":"4772:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4794:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4781:12:5"},"nodeType":"YulFunctionCall","src":"4781:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4772:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4837:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4810:26:5"},"nodeType":"YulFunctionCall","src":"4810:33:5"},"nodeType":"YulExpressionStatement","src":"4810:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4740:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4748:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4756:5:5","type":""}],"src":"4710:139:5"},{"body":{"nodeType":"YulBlock","src":"4974:608:5","statements":[{"nodeType":"YulAssignment","src":"4984:90:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5066:6:5"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5009:56:5"},"nodeType":"YulFunctionCall","src":"5009:64:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4993:15:5"},"nodeType":"YulFunctionCall","src":"4993:81:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4984:5:5"}]},{"nodeType":"YulVariableDeclaration","src":"5083:16:5","value":{"name":"array","nodeType":"YulIdentifier","src":"5094:5:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5087:3:5","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5116:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"5123:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5109:6:5"},"nodeType":"YulFunctionCall","src":"5109:21:5"},"nodeType":"YulExpressionStatement","src":"5109:21:5"},{"nodeType":"YulAssignment","src":"5139:23:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5150:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5157:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:5"},"nodeType":"YulFunctionCall","src":"5146:16:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5139:3:5"}]},{"nodeType":"YulVariableDeclaration","src":"5172:44:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5190:6:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5202:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5210:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5198:3:5"},"nodeType":"YulFunctionCall","src":"5198:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5186:3:5"},"nodeType":"YulFunctionCall","src":"5186:30:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5176:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"5244:103:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5258:77:5"},"nodeType":"YulFunctionCall","src":"5258:79:5"},"nodeType":"YulExpressionStatement","src":"5258:79:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5231:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5239:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5228:2:5"},"nodeType":"YulFunctionCall","src":"5228:15:5"},"nodeType":"YulIf","src":"5225:122:5"},{"body":{"nodeType":"YulBlock","src":"5432:144:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:21:5","value":{"name":"src","nodeType":"YulIdentifier","src":"5465:3:5"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5451:10:5","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5489:3:5"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5515:10:5"},{"name":"end","nodeType":"YulIdentifier","src":"5527:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5494:20:5"},"nodeType":"YulFunctionCall","src":"5494:37:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5482:6:5"},"nodeType":"YulFunctionCall","src":"5482:50:5"},"nodeType":"YulExpressionStatement","src":"5482:50:5"},{"nodeType":"YulAssignment","src":"5545:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5556:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5561:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:5"},"nodeType":"YulFunctionCall","src":"5552:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5545:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5385:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5390:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5382:2:5"},"nodeType":"YulFunctionCall","src":"5382:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5398:25:5","statements":[{"nodeType":"YulAssignment","src":"5400:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5411:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5416:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:5"},"nodeType":"YulFunctionCall","src":"5407:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5400:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"5360:21:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5362:17:5","value":{"name":"offset","nodeType":"YulIdentifier","src":"5373:6:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5366:3:5","type":""}]}]},"src":"5356:220:5"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4944:6:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4952:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4960:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4968:5:5","type":""}],"src":"4872:710:5"},{"body":{"nodeType":"YulBlock","src":"5682:293:5","statements":[{"body":{"nodeType":"YulBlock","src":"5731:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5733:77:5"},"nodeType":"YulFunctionCall","src":"5733:79:5"},"nodeType":"YulExpressionStatement","src":"5733:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5710:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5718:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5706:3:5"},"nodeType":"YulFunctionCall","src":"5706:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"5725:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5702:3:5"},"nodeType":"YulFunctionCall","src":"5702:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5695:6:5"},"nodeType":"YulFunctionCall","src":"5695:35:5"},"nodeType":"YulIf","src":"5692:122:5"},{"nodeType":"YulVariableDeclaration","src":"5823:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5850:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5837:12:5"},"nodeType":"YulFunctionCall","src":"5837:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5827:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5866:103:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5942:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5938:3:5"},"nodeType":"YulFunctionCall","src":"5938:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"5957:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5965:3:5"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5875:62:5"},"nodeType":"YulFunctionCall","src":"5875:94:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5866:5:5"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5660:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"5668:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5676:5:5","type":""}],"src":"5605:370:5"},{"body":{"nodeType":"YulBlock","src":"6380:2114:5","statements":[{"body":{"nodeType":"YulBlock","src":"6427:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6429:77:5"},"nodeType":"YulFunctionCall","src":"6429:79:5"},"nodeType":"YulExpressionStatement","src":"6429:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6401:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6397:3:5"},"nodeType":"YulFunctionCall","src":"6397:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"6422:3:5","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6393:3:5"},"nodeType":"YulFunctionCall","src":"6393:33:5"},"nodeType":"YulIf","src":"6390:120:5"},{"nodeType":"YulBlock","src":"6520:326:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6535:45:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6566:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6577:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6562:3:5"},"nodeType":"YulFunctionCall","src":"6562:17:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6549:12:5"},"nodeType":"YulFunctionCall","src":"6549:31:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6539:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6627:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6629:77:5"},"nodeType":"YulFunctionCall","src":"6629:79:5"},"nodeType":"YulExpressionStatement","src":"6629:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6599:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6607:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6596:2:5"},"nodeType":"YulFunctionCall","src":"6596:30:5"},"nodeType":"YulIf","src":"6593:117:5"},{"nodeType":"YulAssignment","src":"6724:112:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6808:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6819:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6804:3:5"},"nodeType":"YulFunctionCall","src":"6804:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6828:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"6742:61:5"},"nodeType":"YulFunctionCall","src":"6742:94:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6724:6:5"},{"name":"value1","nodeType":"YulIdentifier","src":"6732:6:5"}]}]},{"nodeType":"YulBlock","src":"6856:327:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6871:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6913:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:5"},"nodeType":"YulFunctionCall","src":"6898:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6885:12:5"},"nodeType":"YulFunctionCall","src":"6885:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6875:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6964:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6966:77:5"},"nodeType":"YulFunctionCall","src":"6966:79:5"},"nodeType":"YulExpressionStatement","src":"6966:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6936:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6944:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6933:2:5"},"nodeType":"YulFunctionCall","src":"6933:30:5"},"nodeType":"YulIf","src":"6930:117:5"},{"nodeType":"YulAssignment","src":"7061:112:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7145:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7156:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:5"},"nodeType":"YulFunctionCall","src":"7141:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7165:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7079:61:5"},"nodeType":"YulFunctionCall","src":"7079:94:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7061:6:5"},{"name":"value3","nodeType":"YulIdentifier","src":"7069:6:5"}]}]},{"nodeType":"YulBlock","src":"7193:313:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7208:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7239:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7250:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7235:3:5"},"nodeType":"YulFunctionCall","src":"7235:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7222:12:5"},"nodeType":"YulFunctionCall","src":"7222:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7212:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7301:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7303:77:5"},"nodeType":"YulFunctionCall","src":"7303:79:5"},"nodeType":"YulExpressionStatement","src":"7303:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7273:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7281:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7270:2:5"},"nodeType":"YulFunctionCall","src":"7270:30:5"},"nodeType":"YulIf","src":"7267:117:5"},{"nodeType":"YulAssignment","src":"7398:98:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7479:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:5"},"nodeType":"YulFunctionCall","src":"7464:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7488:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7416:47:5"},"nodeType":"YulFunctionCall","src":"7416:80:5"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7398:6:5"},{"name":"value5","nodeType":"YulIdentifier","src":"7406:6:5"}]}]},{"nodeType":"YulBlock","src":"7516:321:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7531:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7562:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7573:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7558:3:5"},"nodeType":"YulFunctionCall","src":"7558:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7545:12:5"},"nodeType":"YulFunctionCall","src":"7545:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7535:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7624:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7626:77:5"},"nodeType":"YulFunctionCall","src":"7626:79:5"},"nodeType":"YulExpressionStatement","src":"7626:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7596:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7604:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7593:2:5"},"nodeType":"YulFunctionCall","src":"7593:30:5"},"nodeType":"YulIf","src":"7590:117:5"},{"nodeType":"YulAssignment","src":"7721:106:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7799:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7810:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7795:3:5"},"nodeType":"YulFunctionCall","src":"7795:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7819:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7739:55:5"},"nodeType":"YulFunctionCall","src":"7739:88:5"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7721:6:5"},{"name":"value7","nodeType":"YulIdentifier","src":"7729:6:5"}]}]},{"nodeType":"YulBlock","src":"7847:325:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7862:47:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7904:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:5"},"nodeType":"YulFunctionCall","src":"7889:19:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7876:12:5"},"nodeType":"YulFunctionCall","src":"7876:33:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7866:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7956:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7958:77:5"},"nodeType":"YulFunctionCall","src":"7958:79:5"},"nodeType":"YulExpressionStatement","src":"7958:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7928:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7936:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7925:2:5"},"nodeType":"YulFunctionCall","src":"7925:30:5"},"nodeType":"YulIf","src":"7922:117:5"},{"nodeType":"YulAssignment","src":"8053:109:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8134:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8145:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8130:3:5"},"nodeType":"YulFunctionCall","src":"8130:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8154:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8071:58:5"},"nodeType":"YulFunctionCall","src":"8071:91:5"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"8053:6:5"},{"name":"value9","nodeType":"YulIdentifier","src":"8061:6:5"}]}]},{"nodeType":"YulBlock","src":"8182:305:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8197:47:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8239:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:5"},"nodeType":"YulFunctionCall","src":"8224:19:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8211:12:5"},"nodeType":"YulFunctionCall","src":"8211:33:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8201:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8291:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8293:77:5"},"nodeType":"YulFunctionCall","src":"8293:79:5"},"nodeType":"YulExpressionStatement","src":"8293:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8271:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8260:2:5"},"nodeType":"YulFunctionCall","src":"8260:30:5"},"nodeType":"YulIf","src":"8257:117:5"},{"nodeType":"YulAssignment","src":"8388:89:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8449:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8460:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:5"},"nodeType":"YulFunctionCall","src":"8445:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8469:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8399:45:5"},"nodeType":"YulFunctionCall","src":"8399:78:5"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"8388:7:5"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6269:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6280:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6292:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6300:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6308:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6316:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6324:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6332:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6340:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6348:6:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"6356:6:5","type":""},{"name":"value9","nodeType":"YulTypedName","src":"6364:6:5","type":""},{"name":"value10","nodeType":"YulTypedName","src":"6372:7:5","type":""}],"src":"5981:2513:5"},{"body":{"nodeType":"YulBlock","src":"8566:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"8612:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8614:77:5"},"nodeType":"YulFunctionCall","src":"8614:79:5"},"nodeType":"YulExpressionStatement","src":"8614:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8587:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8583:3:5"},"nodeType":"YulFunctionCall","src":"8583:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"8608:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8579:3:5"},"nodeType":"YulFunctionCall","src":"8579:32:5"},"nodeType":"YulIf","src":"8576:119:5"},{"nodeType":"YulBlock","src":"8705:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8720:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8734:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8724:6:5","type":""}]},{"nodeType":"YulAssignment","src":"8749:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8795:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:5"},"nodeType":"YulFunctionCall","src":"8780:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8804:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8759:20:5"},"nodeType":"YulFunctionCall","src":"8759:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8749:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8536:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8547:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8559:6:5","type":""}],"src":"8500:329:5"},{"body":{"nodeType":"YulBlock","src":"8880:81:5","statements":[{"nodeType":"YulAssignment","src":"8890:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8905:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8912:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8901:3:5"},"nodeType":"YulFunctionCall","src":"8901:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8890:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8872:7:5","type":""}],"src":"8835:126:5"},{"body":{"nodeType":"YulBlock","src":"9012:51:5","statements":[{"nodeType":"YulAssignment","src":"9022:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9051:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9033:17:5"},"nodeType":"YulFunctionCall","src":"9033:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9022:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8994:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9004:7:5","type":""}],"src":"8967:96:5"},{"body":{"nodeType":"YulBlock","src":"9134:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9151:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9174:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9156:17:5"},"nodeType":"YulFunctionCall","src":"9156:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9144:6:5"},"nodeType":"YulFunctionCall","src":"9144:37:5"},"nodeType":"YulExpressionStatement","src":"9144:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9122:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9129:3:5","type":""}],"src":"9069:118:5"},{"body":{"nodeType":"YulBlock","src":"9291:124:5","statements":[{"nodeType":"YulAssignment","src":"9301:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9313:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9324:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:5"},"nodeType":"YulFunctionCall","src":"9309:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9301:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9381:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9394:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9405:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9390:3:5"},"nodeType":"YulFunctionCall","src":"9390:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9337:43:5"},"nodeType":"YulFunctionCall","src":"9337:71:5"},"nodeType":"YulExpressionStatement","src":"9337:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9263:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9275:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9286:4:5","type":""}],"src":"9193:222:5"},{"body":{"nodeType":"YulBlock","src":"9453:28:5","statements":[{"nodeType":"YulAssignment","src":"9463:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"9470:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9463:3:5"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9439:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9449:3:5","type":""}],"src":"9421:60:5"},{"body":{"nodeType":"YulBlock","src":"9547:82:5","statements":[{"nodeType":"YulAssignment","src":"9557:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9615:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9597:17:5"},"nodeType":"YulFunctionCall","src":"9597:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9588:8:5"},"nodeType":"YulFunctionCall","src":"9588:34:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9570:17:5"},"nodeType":"YulFunctionCall","src":"9570:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9557:9:5"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9527:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9537:9:5","type":""}],"src":"9487:142:5"},{"body":{"nodeType":"YulBlock","src":"9695:66:5","statements":[{"nodeType":"YulAssignment","src":"9705:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9749:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9718:30:5"},"nodeType":"YulFunctionCall","src":"9718:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9705:9:5"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9675:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9685:9:5","type":""}],"src":"9635:126:5"},{"body":{"nodeType":"YulBlock","src":"9840:66:5","statements":[{"nodeType":"YulAssignment","src":"9850:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9894:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9863:30:5"},"nodeType":"YulFunctionCall","src":"9863:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9850:9:5"}]}]},"name":"convert_t_contract$_IWETH_$227_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9830:9:5","type":""}],"src":"9767:139:5"},{"body":{"nodeType":"YulBlock","src":"9990:79:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10007:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10056:5:5"}],"functionName":{"name":"convert_t_contract$_IWETH_$227_to_t_address","nodeType":"YulIdentifier","src":"10012:43:5"},"nodeType":"YulFunctionCall","src":"10012:50:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10000:6:5"},"nodeType":"YulFunctionCall","src":"10000:63:5"},"nodeType":"YulExpressionStatement","src":"10000:63:5"}]},"name":"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9978:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9985:3:5","type":""}],"src":"9912:157:5"},{"body":{"nodeType":"YulBlock","src":"10186:137:5","statements":[{"nodeType":"YulAssignment","src":"10196:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10208:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10219:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10204:3:5"},"nodeType":"YulFunctionCall","src":"10204:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10196:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10289:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10313:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:5"},"nodeType":"YulFunctionCall","src":"10298:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10232:56:5"},"nodeType":"YulFunctionCall","src":"10232:84:5"},"nodeType":"YulExpressionStatement","src":"10232:84:5"}]},"name":"abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10158:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10170:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10181:4:5","type":""}],"src":"10075:248:5"},{"body":{"nodeType":"YulBlock","src":"10372:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:5"},"nodeType":"YulFunctionCall","src":"10431:12:5"},"nodeType":"YulExpressionStatement","src":"10431:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10395:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10402:17:5"},"nodeType":"YulFunctionCall","src":"10402:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10392:2:5"},"nodeType":"YulFunctionCall","src":"10392:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10385:6:5"},"nodeType":"YulFunctionCall","src":"10385:43:5"},"nodeType":"YulIf","src":"10382:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10365:5:5","type":""}],"src":"10329:122:5"},{"body":{"nodeType":"YulBlock","src":"10509:87:5","statements":[{"nodeType":"YulAssignment","src":"10519:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10541:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10528:12:5"},"nodeType":"YulFunctionCall","src":"10528:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10519:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10584:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10557:26:5"},"nodeType":"YulFunctionCall","src":"10557:33:5"},"nodeType":"YulExpressionStatement","src":"10557:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10487:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"10495:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10503:5:5","type":""}],"src":"10457:139:5"},{"body":{"nodeType":"YulBlock","src":"10668:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"10714:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10716:77:5"},"nodeType":"YulFunctionCall","src":"10716:79:5"},"nodeType":"YulExpressionStatement","src":"10716:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10689:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"10698:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10685:3:5"},"nodeType":"YulFunctionCall","src":"10685:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"10710:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10681:3:5"},"nodeType":"YulFunctionCall","src":"10681:32:5"},"nodeType":"YulIf","src":"10678:119:5"},{"nodeType":"YulBlock","src":"10807:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10822:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10836:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10826:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10851:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10897:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:5"},"nodeType":"YulFunctionCall","src":"10882:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10906:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10861:20:5"},"nodeType":"YulFunctionCall","src":"10861:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:5"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10638:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10649:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10661:6:5","type":""}],"src":"10602:329:5"},{"body":{"nodeType":"YulBlock","src":"10965:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10982:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10985:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10975:6:5"},"nodeType":"YulFunctionCall","src":"10975:88:5"},"nodeType":"YulExpressionStatement","src":"10975:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11079:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11082:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11072:6:5"},"nodeType":"YulFunctionCall","src":"11072:15:5"},"nodeType":"YulExpressionStatement","src":"11072:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11103:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11106:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11096:6:5"},"nodeType":"YulFunctionCall","src":"11096:15:5"},"nodeType":"YulExpressionStatement","src":"11096:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10937:180:5"},{"body":{"nodeType":"YulBlock","src":"11249:206:5","statements":[{"nodeType":"YulAssignment","src":"11259:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11271:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11282:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:5"},"nodeType":"YulFunctionCall","src":"11267:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11259:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11339:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11363:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:5"},"nodeType":"YulFunctionCall","src":"11348:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11295:43:5"},"nodeType":"YulFunctionCall","src":"11295:71:5"},"nodeType":"YulExpressionStatement","src":"11295:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11420:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11433:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11444:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11429:3:5"},"nodeType":"YulFunctionCall","src":"11429:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11376:43:5"},"nodeType":"YulFunctionCall","src":"11376:72:5"},"nodeType":"YulExpressionStatement","src":"11376:72:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11213:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11225:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11233:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11244:4:5","type":""}],"src":"11123:332:5"},{"body":{"nodeType":"YulBlock","src":"11489:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11506:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11509:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11499:6:5"},"nodeType":"YulFunctionCall","src":"11499:88:5"},"nodeType":"YulExpressionStatement","src":"11499:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11603:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11606:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:5"},"nodeType":"YulFunctionCall","src":"11596:15:5"},"nodeType":"YulExpressionStatement","src":"11596:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11627:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11630:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11620:6:5"},"nodeType":"YulFunctionCall","src":"11620:15:5"},"nodeType":"YulExpressionStatement","src":"11620:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11461:180:5"},{"body":{"nodeType":"YulBlock","src":"11692:146:5","statements":[{"nodeType":"YulAssignment","src":"11702:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11725:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11707:17:5"},"nodeType":"YulFunctionCall","src":"11707:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11702:1:5"}]},{"nodeType":"YulAssignment","src":"11736:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11759:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11741:17:5"},"nodeType":"YulFunctionCall","src":"11741:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11736:1:5"}]},{"body":{"nodeType":"YulBlock","src":"11783:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11785:16:5"},"nodeType":"YulFunctionCall","src":"11785:18:5"},"nodeType":"YulExpressionStatement","src":"11785:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11777:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"11780:1:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11774:2:5"},"nodeType":"YulFunctionCall","src":"11774:8:5"},"nodeType":"YulIf","src":"11771:34:5"},{"nodeType":"YulAssignment","src":"11815:17:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11827:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"11830:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11823:3:5"},"nodeType":"YulFunctionCall","src":"11823:9:5"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11815:4:5"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11678:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"11681:1:5","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11687:4:5","type":""}],"src":"11647:191:5"},{"body":{"nodeType":"YulBlock","src":"11903:51:5","statements":[{"nodeType":"YulAssignment","src":"11913:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11942:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11924:17:5"},"nodeType":"YulFunctionCall","src":"11924:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11913:7:5"}]}]},"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11885:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11895:7:5","type":""}],"src":"11844:110:5"},{"body":{"nodeType":"YulBlock","src":"12017:93:5","statements":[{"body":{"nodeType":"YulBlock","src":"12088:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12097:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12100:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12090:6:5"},"nodeType":"YulFunctionCall","src":"12090:12:5"},"nodeType":"YulExpressionStatement","src":"12090:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12040:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12079:5:5"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12047:31:5"},"nodeType":"YulFunctionCall","src":"12047:38:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12037:2:5"},"nodeType":"YulFunctionCall","src":"12037:49:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12030:6:5"},"nodeType":"YulFunctionCall","src":"12030:57:5"},"nodeType":"YulIf","src":"12027:77:5"}]},"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12010:5:5","type":""}],"src":"11960:150:5"},{"body":{"nodeType":"YulBlock","src":"12182:101:5","statements":[{"nodeType":"YulAssignment","src":"12192:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12214:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12201:12:5"},"nodeType":"YulFunctionCall","src":"12201:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12192:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12271:5:5"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12230:40:5"},"nodeType":"YulFunctionCall","src":"12230:47:5"},"nodeType":"YulExpressionStatement","src":"12230:47:5"}]},"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12160:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"12168:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12176:5:5","type":""}],"src":"12116:167:5"},{"body":{"nodeType":"YulBlock","src":"12369:277:5","statements":[{"body":{"nodeType":"YulBlock","src":"12415:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12417:77:5"},"nodeType":"YulFunctionCall","src":"12417:79:5"},"nodeType":"YulExpressionStatement","src":"12417:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12390:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"12399:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12386:3:5"},"nodeType":"YulFunctionCall","src":"12386:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"12411:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12382:3:5"},"nodeType":"YulFunctionCall","src":"12382:32:5"},"nodeType":"YulIf","src":"12379:119:5"},{"nodeType":"YulBlock","src":"12508:131:5","statements":[{"nodeType":"YulVariableDeclaration","src":"12523:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"12537:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12527:6:5","type":""}]},{"nodeType":"YulAssignment","src":"12552:77:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12601:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"12612:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12597:3:5"},"nodeType":"YulFunctionCall","src":"12597:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12621:7:5"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12562:34:5"},"nodeType":"YulFunctionCall","src":"12562:67:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12552:6:5"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12339:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12350:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12362:6:5","type":""}],"src":"12289:357:5"},{"body":{"nodeType":"YulBlock","src":"12696:261:5","statements":[{"nodeType":"YulAssignment","src":"12706:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12729:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12711:17:5"},"nodeType":"YulFunctionCall","src":"12711:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12706:1:5"}]},{"nodeType":"YulAssignment","src":"12740:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12763:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12745:17:5"},"nodeType":"YulFunctionCall","src":"12745:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12740:1:5"}]},{"body":{"nodeType":"YulBlock","src":"12903:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12905:16:5"},"nodeType":"YulFunctionCall","src":"12905:18:5"},"nodeType":"YulExpressionStatement","src":"12905:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12824:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12831:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"12899:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12827:3:5"},"nodeType":"YulFunctionCall","src":"12827:74:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12821:2:5"},"nodeType":"YulFunctionCall","src":"12821:81:5"},"nodeType":"YulIf","src":"12818:107:5"},{"nodeType":"YulAssignment","src":"12935:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12946:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"12949:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12942:3:5"},"nodeType":"YulFunctionCall","src":"12942:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12935:3:5"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12683:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"12686:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12692:3:5","type":""}],"src":"12652:305:5"},{"body":{"nodeType":"YulBlock","src":"13016:51:5","statements":[{"nodeType":"YulAssignment","src":"13026:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13055:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"13037:17:5"},"nodeType":"YulFunctionCall","src":"13037:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13026:7:5"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12998:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13008:7:5","type":""}],"src":"12963:104:5"},{"body":{"nodeType":"YulBlock","src":"13124:87:5","statements":[{"body":{"nodeType":"YulBlock","src":"13189:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13198:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13201:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13191:6:5"},"nodeType":"YulFunctionCall","src":"13191:12:5"},"nodeType":"YulExpressionStatement","src":"13191:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13147:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13180:5:5"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"13154:25:5"},"nodeType":"YulFunctionCall","src":"13154:32:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13144:2:5"},"nodeType":"YulFunctionCall","src":"13144:43:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13137:6:5"},"nodeType":"YulFunctionCall","src":"13137:51:5"},"nodeType":"YulIf","src":"13134:71:5"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13117:5:5","type":""}],"src":"13073:138:5"},{"body":{"nodeType":"YulBlock","src":"13277:95:5","statements":[{"nodeType":"YulAssignment","src":"13287:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13309:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13296:12:5"},"nodeType":"YulFunctionCall","src":"13296:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13287:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13360:5:5"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"13325:34:5"},"nodeType":"YulFunctionCall","src":"13325:41:5"},"nodeType":"YulExpressionStatement","src":"13325:41:5"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13255:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"13263:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13271:5:5","type":""}],"src":"13217:155:5"},{"body":{"nodeType":"YulBlock","src":"13452:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"13498:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13500:77:5"},"nodeType":"YulFunctionCall","src":"13500:79:5"},"nodeType":"YulExpressionStatement","src":"13500:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13473:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"13482:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13469:3:5"},"nodeType":"YulFunctionCall","src":"13469:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13465:3:5"},"nodeType":"YulFunctionCall","src":"13465:32:5"},"nodeType":"YulIf","src":"13462:119:5"},{"nodeType":"YulBlock","src":"13591:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13606:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"13620:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13610:6:5","type":""}]},{"nodeType":"YulAssignment","src":"13635:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13678:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"13689:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13674:3:5"},"nodeType":"YulFunctionCall","src":"13674:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13698:7:5"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"13645:28:5"},"nodeType":"YulFunctionCall","src":"13645:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13635:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13422:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13433:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13445:6:5","type":""}],"src":"13378:345:5"},{"body":{"nodeType":"YulBlock","src":"13818:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13835:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13838:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13828:6:5"},"nodeType":"YulFunctionCall","src":"13828:12:5"},"nodeType":"YulExpressionStatement","src":"13828:12:5"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"13729:117:5"},{"body":{"nodeType":"YulBlock","src":"13941:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13958:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13961:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13951:6:5"},"nodeType":"YulFunctionCall","src":"13951:12:5"},"nodeType":"YulExpressionStatement","src":"13951:12:5"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"13852:117:5"},{"body":{"nodeType":"YulBlock","src":"14064:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14081:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14084:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14074:6:5"},"nodeType":"YulFunctionCall","src":"14074:12:5"},"nodeType":"YulExpressionStatement","src":"14074:12:5"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"13975:117:5"},{"body":{"nodeType":"YulBlock","src":"14188:634:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14198:51:5","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"14237:11:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14224:12:5"},"nodeType":"YulFunctionCall","src":"14224:25:5"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"14202:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"14343:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"14345:77:5"},"nodeType":"YulFunctionCall","src":"14345:79:5"},"nodeType":"YulExpressionStatement","src":"14345:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14272:18:5"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14300:12:5"},"nodeType":"YulFunctionCall","src":"14300:14:5"},{"name":"base_ref","nodeType":"YulIdentifier","src":"14316:8:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14296:3:5"},"nodeType":"YulFunctionCall","src":"14296:29:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14331:4:5","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14327:3:5"},"nodeType":"YulFunctionCall","src":"14327:12:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14292:3:5"},"nodeType":"YulFunctionCall","src":"14292:48:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14268:3:5"},"nodeType":"YulFunctionCall","src":"14268:73:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14261:6:5"},"nodeType":"YulFunctionCall","src":"14261:81:5"},"nodeType":"YulIf","src":"14258:168:5"},{"nodeType":"YulAssignment","src":"14435:41:5","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"14447:8:5"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14457:18:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14443:3:5"},"nodeType":"YulFunctionCall","src":"14443:33:5"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"14435:4:5"}]},{"nodeType":"YulAssignment","src":"14486:28:5","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14509:4:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14496:12:5"},"nodeType":"YulFunctionCall","src":"14496:18:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14486:6:5"}]},{"body":{"nodeType":"YulBlock","src":"14557:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"14559:77:5"},"nodeType":"YulFunctionCall","src":"14559:79:5"},"nodeType":"YulExpressionStatement","src":"14559:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14529:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14537:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14526:2:5"},"nodeType":"YulFunctionCall","src":"14526:30:5"},"nodeType":"YulIf","src":"14523:117:5"},{"nodeType":"YulAssignment","src":"14649:21:5","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14661:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"14667:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14657:3:5"},"nodeType":"YulFunctionCall","src":"14657:13:5"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"14649:4:5"}]},{"body":{"nodeType":"YulBlock","src":"14732:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"14734:77:5"},"nodeType":"YulFunctionCall","src":"14734:79:5"},"nodeType":"YulExpressionStatement","src":"14734:79:5"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14686:4:5"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14696:12:5"},"nodeType":"YulFunctionCall","src":"14696:14:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14716:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14724:4:5","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14712:3:5"},"nodeType":"YulFunctionCall","src":"14712:17:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14692:3:5"},"nodeType":"YulFunctionCall","src":"14692:38:5"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"14682:3:5"},"nodeType":"YulFunctionCall","src":"14682:49:5"},"nodeType":"YulIf","src":"14679:136:5"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"14149:8:5","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"14159:11:5","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"14175:4:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"14181:6:5","type":""}],"src":"14098:724:5"},{"body":{"nodeType":"YulBlock","src":"14876:300:5","statements":[{"nodeType":"YulAssignment","src":"14886:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14909:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14891:17:5"},"nodeType":"YulFunctionCall","src":"14891:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14886:1:5"}]},{"nodeType":"YulAssignment","src":"14920:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14943:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14925:17:5"},"nodeType":"YulFunctionCall","src":"14925:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14920:1:5"}]},{"body":{"nodeType":"YulBlock","src":"15118:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15120:16:5"},"nodeType":"YulFunctionCall","src":"15120:18:5"},"nodeType":"YulExpressionStatement","src":"15120:18:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15030:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15023:6:5"},"nodeType":"YulFunctionCall","src":"15023:9:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15016:6:5"},"nodeType":"YulFunctionCall","src":"15016:17:5"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15038:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15045:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"15113:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15041:3:5"},"nodeType":"YulFunctionCall","src":"15041:74:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15035:2:5"},"nodeType":"YulFunctionCall","src":"15035:81:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15012:3:5"},"nodeType":"YulFunctionCall","src":"15012:105:5"},"nodeType":"YulIf","src":"15009:131:5"},{"nodeType":"YulAssignment","src":"15150:20:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15165:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"15168:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15161:3:5"},"nodeType":"YulFunctionCall","src":"15161:9:5"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15150:7:5"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14859:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"14862:1:5","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14868:7:5","type":""}],"src":"14828:348:5"},{"body":{"nodeType":"YulBlock","src":"15210:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15227:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15230:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15220:6:5"},"nodeType":"YulFunctionCall","src":"15220:88:5"},"nodeType":"YulExpressionStatement","src":"15220:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15324:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15327:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15317:6:5"},"nodeType":"YulFunctionCall","src":"15317:15:5"},"nodeType":"YulExpressionStatement","src":"15317:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15348:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15351:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15341:6:5"},"nodeType":"YulFunctionCall","src":"15341:15:5"},"nodeType":"YulExpressionStatement","src":"15341:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15182:180:5"},{"body":{"nodeType":"YulBlock","src":"15410:143:5","statements":[{"nodeType":"YulAssignment","src":"15420:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15443:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15425:17:5"},"nodeType":"YulFunctionCall","src":"15425:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15420:1:5"}]},{"nodeType":"YulAssignment","src":"15454:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15477:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15459:17:5"},"nodeType":"YulFunctionCall","src":"15459:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15454:1:5"}]},{"body":{"nodeType":"YulBlock","src":"15501:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15503:16:5"},"nodeType":"YulFunctionCall","src":"15503:18:5"},"nodeType":"YulExpressionStatement","src":"15503:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15498:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15491:6:5"},"nodeType":"YulFunctionCall","src":"15491:9:5"},"nodeType":"YulIf","src":"15488:35:5"},{"nodeType":"YulAssignment","src":"15533:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15542:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"15545:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15538:3:5"},"nodeType":"YulFunctionCall","src":"15538:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15533:1:5"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15399:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"15402:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15408:1:5","type":""}],"src":"15368:185:5"},{"body":{"nodeType":"YulBlock","src":"15633:66:5","statements":[{"nodeType":"YulAssignment","src":"15643:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15687:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"15656:30:5"},"nodeType":"YulFunctionCall","src":"15656:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15643:9:5"}]}]},"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15613:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15623:9:5","type":""}],"src":"15559:140:5"},{"body":{"nodeType":"YulBlock","src":"15784:80:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15801:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15851:5:5"}],"functionName":{"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulIdentifier","src":"15806:44:5"},"nodeType":"YulFunctionCall","src":"15806:51:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15794:6:5"},"nodeType":"YulFunctionCall","src":"15794:64:5"},"nodeType":"YulExpressionStatement","src":"15794:64:5"}]},"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15772:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15779:3:5","type":""}],"src":"15705:159:5"},{"body":{"nodeType":"YulBlock","src":"16010:220:5","statements":[{"nodeType":"YulAssignment","src":"16020:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16032:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16043:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16028:3:5"},"nodeType":"YulFunctionCall","src":"16028:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16020:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16114:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16127:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16138:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:5"},"nodeType":"YulFunctionCall","src":"16123:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16056:57:5"},"nodeType":"YulFunctionCall","src":"16056:85:5"},"nodeType":"YulExpressionStatement","src":"16056:85:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16195:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16208:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16219:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16204:3:5"},"nodeType":"YulFunctionCall","src":"16204:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16151:43:5"},"nodeType":"YulFunctionCall","src":"16151:72:5"},"nodeType":"YulExpressionStatement","src":"16151:72:5"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15974:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15986:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15994:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16005:4:5","type":""}],"src":"15870:360:5"},{"body":{"nodeType":"YulBlock","src":"16279:190:5","statements":[{"nodeType":"YulAssignment","src":"16289:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16316:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16298:17:5"},"nodeType":"YulFunctionCall","src":"16298:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16289:5:5"}]},{"body":{"nodeType":"YulBlock","src":"16412:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16414:16:5"},"nodeType":"YulFunctionCall","src":"16414:18:5"},"nodeType":"YulExpressionStatement","src":"16414:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16337:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"16344:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16334:2:5"},"nodeType":"YulFunctionCall","src":"16334:77:5"},"nodeType":"YulIf","src":"16331:103:5"},{"nodeType":"YulAssignment","src":"16443:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16454:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"16461:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16450:3:5"},"nodeType":"YulFunctionCall","src":"16450:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16443:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16265:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16275:3:5","type":""}],"src":"16236:233:5"},{"body":{"nodeType":"YulBlock","src":"16528:32:5","statements":[{"nodeType":"YulAssignment","src":"16538:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"16549:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16538:7:5"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16510:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16520:7:5","type":""}],"src":"16475:85:5"},{"body":{"nodeType":"YulBlock","src":"16634:90:5","statements":[{"nodeType":"YulAssignment","src":"16644:74:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16710:5:5"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"16684:25:5"},"nodeType":"YulFunctionCall","src":"16684:32:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16675:8:5"},"nodeType":"YulFunctionCall","src":"16675:42:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16657:17:5"},"nodeType":"YulFunctionCall","src":"16657:61:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16644:9:5"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16614:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16624:9:5","type":""}],"src":"16566:158:5"},{"body":{"nodeType":"YulBlock","src":"16803:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16820:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16864:5:5"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"16825:38:5"},"nodeType":"YulFunctionCall","src":"16825:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16813:6:5"},"nodeType":"YulFunctionCall","src":"16813:58:5"},"nodeType":"YulExpressionStatement","src":"16813:58:5"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16791:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16798:3:5","type":""}],"src":"16730:147:5"},{"body":{"nodeType":"YulBlock","src":"16989:132:5","statements":[{"nodeType":"YulAssignment","src":"16999:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17011:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17022:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17007:3:5"},"nodeType":"YulFunctionCall","src":"17007:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16999:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17087:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17100:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17111:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17096:3:5"},"nodeType":"YulFunctionCall","src":"17096:17:5"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17035:51:5"},"nodeType":"YulFunctionCall","src":"17035:79:5"},"nodeType":"YulExpressionStatement","src":"17035:79:5"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16961:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16973:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16984:4:5","type":""}],"src":"16883:238:5"},{"body":{"nodeType":"YulBlock","src":"17223:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17240:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17245:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17233:6:5"},"nodeType":"YulFunctionCall","src":"17233:19:5"},"nodeType":"YulExpressionStatement","src":"17233:19:5"},{"nodeType":"YulAssignment","src":"17261:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17280:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17285:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:5"},"nodeType":"YulFunctionCall","src":"17276:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17261:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17195:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"17200:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17211:11:5","type":""}],"src":"17127:169:5"},{"body":{"nodeType":"YulBlock","src":"17408:119:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17430:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17438:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17426:3:5"},"nodeType":"YulFunctionCall","src":"17426:14:5"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"17442:34:5","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17419:6:5"},"nodeType":"YulFunctionCall","src":"17419:58:5"},"nodeType":"YulExpressionStatement","src":"17419:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17498:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17506:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:5"},"nodeType":"YulFunctionCall","src":"17494:15:5"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"17511:8:5","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17487:6:5"},"nodeType":"YulFunctionCall","src":"17487:33:5"},"nodeType":"YulExpressionStatement","src":"17487:33:5"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17400:6:5","type":""}],"src":"17302:225:5"},{"body":{"nodeType":"YulBlock","src":"17679:220:5","statements":[{"nodeType":"YulAssignment","src":"17689:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17755:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17760:2:5","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17696:58:5"},"nodeType":"YulFunctionCall","src":"17696:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17689:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17861:3:5"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"17772:88:5"},"nodeType":"YulFunctionCall","src":"17772:93:5"},"nodeType":"YulExpressionStatement","src":"17772:93:5"},{"nodeType":"YulAssignment","src":"17874:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17885:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17890:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17881:3:5"},"nodeType":"YulFunctionCall","src":"17881:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17874:3:5"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17667:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17675:3:5","type":""}],"src":"17533:366:5"},{"body":{"nodeType":"YulBlock","src":"18076:248:5","statements":[{"nodeType":"YulAssignment","src":"18086:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18098:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18109:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18094:3:5"},"nodeType":"YulFunctionCall","src":"18094:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18086:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18133:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18144:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:5"},"nodeType":"YulFunctionCall","src":"18129:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18152:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"18158:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18148:3:5"},"nodeType":"YulFunctionCall","src":"18148:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18122:6:5"},"nodeType":"YulFunctionCall","src":"18122:47:5"},"nodeType":"YulExpressionStatement","src":"18122:47:5"},{"nodeType":"YulAssignment","src":"18178:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18312:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18186:124:5"},"nodeType":"YulFunctionCall","src":"18186:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18178:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18056:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18071:4:5","type":""}],"src":"17905:419:5"},{"body":{"nodeType":"YulBlock","src":"18484:288:5","statements":[{"nodeType":"YulAssignment","src":"18494:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18506:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18517:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18502:3:5"},"nodeType":"YulFunctionCall","src":"18502:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18494:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18574:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18587:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18598:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18583:3:5"},"nodeType":"YulFunctionCall","src":"18583:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18530:43:5"},"nodeType":"YulFunctionCall","src":"18530:71:5"},"nodeType":"YulExpressionStatement","src":"18530:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18655:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18668:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18679:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18664:3:5"},"nodeType":"YulFunctionCall","src":"18664:18:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18611:43:5"},"nodeType":"YulFunctionCall","src":"18611:72:5"},"nodeType":"YulExpressionStatement","src":"18611:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18737:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18750:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18761:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18746:3:5"},"nodeType":"YulFunctionCall","src":"18746:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18693:43:5"},"nodeType":"YulFunctionCall","src":"18693:72:5"},"nodeType":"YulExpressionStatement","src":"18693:72:5"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18440:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18452:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18460:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18468:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18479:4:5","type":""}],"src":"18330:442:5"},{"body":{"nodeType":"YulBlock","src":"18820:48:5","statements":[{"nodeType":"YulAssignment","src":"18830:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18855:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18848:6:5"},"nodeType":"YulFunctionCall","src":"18848:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18841:6:5"},"nodeType":"YulFunctionCall","src":"18841:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18830:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18802:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18812:7:5","type":""}],"src":"18778:90:5"},{"body":{"nodeType":"YulBlock","src":"18914:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"18968:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18977:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18980:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18970:6:5"},"nodeType":"YulFunctionCall","src":"18970:12:5"},"nodeType":"YulExpressionStatement","src":"18970:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18937:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18959:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"18944:14:5"},"nodeType":"YulFunctionCall","src":"18944:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18934:2:5"},"nodeType":"YulFunctionCall","src":"18934:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18927:6:5"},"nodeType":"YulFunctionCall","src":"18927:40:5"},"nodeType":"YulIf","src":"18924:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18907:5:5","type":""}],"src":"18874:116:5"},{"body":{"nodeType":"YulBlock","src":"19056:77:5","statements":[{"nodeType":"YulAssignment","src":"19066:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19081:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19075:5:5"},"nodeType":"YulFunctionCall","src":"19075:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19066:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19121:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19097:23:5"},"nodeType":"YulFunctionCall","src":"19097:30:5"},"nodeType":"YulExpressionStatement","src":"19097:30:5"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19034:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"19042:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19050:5:5","type":""}],"src":"18996:137:5"},{"body":{"nodeType":"YulBlock","src":"19213:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"19259:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19261:77:5"},"nodeType":"YulFunctionCall","src":"19261:79:5"},"nodeType":"YulExpressionStatement","src":"19261:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19234:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"19243:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19230:3:5"},"nodeType":"YulFunctionCall","src":"19230:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"19255:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19226:3:5"},"nodeType":"YulFunctionCall","src":"19226:32:5"},"nodeType":"YulIf","src":"19223:119:5"},{"nodeType":"YulBlock","src":"19352:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19367:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"19381:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19371:6:5","type":""}]},{"nodeType":"YulAssignment","src":"19396:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19439:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19450:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19435:3:5"},"nodeType":"YulFunctionCall","src":"19435:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19459:7:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"19406:28:5"},"nodeType":"YulFunctionCall","src":"19406:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19396:6:5"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19183:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19194:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19206:6:5","type":""}],"src":"19139:345:5"},{"body":{"nodeType":"YulBlock","src":"19553:80:5","statements":[{"nodeType":"YulAssignment","src":"19563:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19578:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19572:5:5"},"nodeType":"YulFunctionCall","src":"19572:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19563:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19621:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19594:26:5"},"nodeType":"YulFunctionCall","src":"19594:33:5"},"nodeType":"YulExpressionStatement","src":"19594:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19531:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"19539:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19547:5:5","type":""}],"src":"19490:143:5"},{"body":{"nodeType":"YulBlock","src":"19716:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"19762:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19764:77:5"},"nodeType":"YulFunctionCall","src":"19764:79:5"},"nodeType":"YulExpressionStatement","src":"19764:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19737:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"19746:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19733:3:5"},"nodeType":"YulFunctionCall","src":"19733:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"19758:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19729:3:5"},"nodeType":"YulFunctionCall","src":"19729:32:5"},"nodeType":"YulIf","src":"19726:119:5"},{"nodeType":"YulBlock","src":"19855:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19870:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"19884:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19874:6:5","type":""}]},{"nodeType":"YulAssignment","src":"19899:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19945:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19956:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19941:3:5"},"nodeType":"YulFunctionCall","src":"19941:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19965:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19909:31:5"},"nodeType":"YulFunctionCall","src":"19909:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19899:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19686:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19697:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19709:6:5","type":""}],"src":"19639:351:5"},{"body":{"nodeType":"YulBlock","src":"20041:73:5","statements":[{"nodeType":"YulAssignment","src":"20051:57:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20066:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"20073:34:5","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20062:3:5"},"nodeType":"YulFunctionCall","src":"20062:46:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20051:7:5"}]}]},"name":"cleanup_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20023:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20033:7:5","type":""}],"src":"19996:118:5"},{"body":{"nodeType":"YulBlock","src":"20180:82:5","statements":[{"nodeType":"YulAssignment","src":"20190:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20248:5:5"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"20230:17:5"},"nodeType":"YulFunctionCall","src":"20230:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"20221:8:5"},"nodeType":"YulFunctionCall","src":"20221:34:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20203:17:5"},"nodeType":"YulFunctionCall","src":"20203:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"20190:9:5"}]}]},"name":"convert_t_uint128_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20160:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"20170:9:5","type":""}],"src":"20120:142:5"},{"body":{"nodeType":"YulBlock","src":"20333:66:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20350:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20386:5:5"}],"functionName":{"name":"convert_t_uint128_to_t_uint256","nodeType":"YulIdentifier","src":"20355:30:5"},"nodeType":"YulFunctionCall","src":"20355:37:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20343:6:5"},"nodeType":"YulFunctionCall","src":"20343:50:5"},"nodeType":"YulExpressionStatement","src":"20343:50:5"}]},"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20321:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20328:3:5","type":""}],"src":"20268:131:5"},{"body":{"nodeType":"YulBlock","src":"20531:206:5","statements":[{"nodeType":"YulAssignment","src":"20541:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20553:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20564:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20549:3:5"},"nodeType":"YulFunctionCall","src":"20549:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20541:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20621:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20634:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20645:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20630:3:5"},"nodeType":"YulFunctionCall","src":"20630:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20577:43:5"},"nodeType":"YulFunctionCall","src":"20577:71:5"},"nodeType":"YulExpressionStatement","src":"20577:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20702:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20715:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20726:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20711:3:5"},"nodeType":"YulFunctionCall","src":"20711:18:5"}],"functionName":{"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20658:43:5"},"nodeType":"YulFunctionCall","src":"20658:72:5"},"nodeType":"YulExpressionStatement","src":"20658:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20495:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20507:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20515:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20526:4:5","type":""}],"src":"20405:332:5"},{"body":{"nodeType":"YulBlock","src":"20856:34:5","statements":[{"nodeType":"YulAssignment","src":"20866:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"20881:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20866:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20828:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"20833:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20844:11:5","type":""}],"src":"20743:147:5"},{"body":{"nodeType":"YulBlock","src":"20947:103:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20970:3:5"},{"name":"src","nodeType":"YulIdentifier","src":"20975:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"20980:6:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20957:12:5"},"nodeType":"YulFunctionCall","src":"20957:30:5"},"nodeType":"YulExpressionStatement","src":"20957:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21028:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21033:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21024:3:5"},"nodeType":"YulFunctionCall","src":"21024:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"21042:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21017:6:5"},"nodeType":"YulFunctionCall","src":"21017:27:5"},"nodeType":"YulExpressionStatement","src":"21017:27:5"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20929:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20934:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"20939:6:5","type":""}],"src":"20896:154:5"},{"body":{"nodeType":"YulBlock","src":"21196:196:5","statements":[{"nodeType":"YulAssignment","src":"21206:95:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21289:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21294:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21213:75:5"},"nodeType":"YulFunctionCall","src":"21213:88:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21206:3:5"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21335:5:5"},{"name":"pos","nodeType":"YulIdentifier","src":"21342:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21347:6:5"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"21311:23:5"},"nodeType":"YulFunctionCall","src":"21311:43:5"},"nodeType":"YulExpressionStatement","src":"21311:43:5"},{"nodeType":"YulAssignment","src":"21363:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21374:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21379:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21370:3:5"},"nodeType":"YulFunctionCall","src":"21370:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21363:3:5"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"21169:5:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"21176:6:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21184:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21192:3:5","type":""}],"src":"21078:314:5"},{"body":{"nodeType":"YulBlock","src":"21542:147:5","statements":[{"nodeType":"YulAssignment","src":"21553:110:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21642:6:5"},{"name":"value1","nodeType":"YulIdentifier","src":"21650:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"21659:3:5"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21560:81:5"},"nodeType":"YulFunctionCall","src":"21560:103:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21553:3:5"}]},{"nodeType":"YulAssignment","src":"21673:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"21680:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21673:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21513:3:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21519:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21527:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21538:3:5","type":""}],"src":"21398:291:5"},{"body":{"nodeType":"YulBlock","src":"21754:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21771:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21791:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21776:14:5"},"nodeType":"YulFunctionCall","src":"21776:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21764:6:5"},"nodeType":"YulFunctionCall","src":"21764:34:5"},"nodeType":"YulExpressionStatement","src":"21764:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21742:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21749:3:5","type":""}],"src":"21695:109:5"},{"body":{"nodeType":"YulBlock","src":"21930:200:5","statements":[{"nodeType":"YulAssignment","src":"21940:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21952:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"21963:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21948:3:5"},"nodeType":"YulFunctionCall","src":"21948:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21940:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22014:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22027:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22038:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22023:3:5"},"nodeType":"YulFunctionCall","src":"22023:17:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21976:37:5"},"nodeType":"YulFunctionCall","src":"21976:65:5"},"nodeType":"YulExpressionStatement","src":"21976:65:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22095:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22108:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22119:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22104:3:5"},"nodeType":"YulFunctionCall","src":"22104:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22051:43:5"},"nodeType":"YulFunctionCall","src":"22051:72:5"},"nodeType":"YulExpressionStatement","src":"22051:72:5"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21894:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21906:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21914:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21925:4:5","type":""}],"src":"21810:320:5"},{"body":{"nodeType":"YulBlock","src":"22290:234:5","statements":[{"nodeType":"YulAssignment","src":"22300:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22312:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22323:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22308:3:5"},"nodeType":"YulFunctionCall","src":"22308:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22300:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22394:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22407:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22418:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22403:3:5"},"nodeType":"YulFunctionCall","src":"22403:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22336:57:5"},"nodeType":"YulFunctionCall","src":"22336:85:5"},"nodeType":"YulExpressionStatement","src":"22336:85:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22489:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22502:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22513:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22498:3:5"},"nodeType":"YulFunctionCall","src":"22498:18:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22431:57:5"},"nodeType":"YulFunctionCall","src":"22431:86:5"},"nodeType":"YulExpressionStatement","src":"22431:86:5"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22254:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22266:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22274:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22285:4:5","type":""}],"src":"22136:388:5"},{"body":{"nodeType":"YulBlock","src":"22656:206:5","statements":[{"nodeType":"YulAssignment","src":"22666:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22678:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22689:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22674:3:5"},"nodeType":"YulFunctionCall","src":"22674:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22666:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22746:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22759:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22770:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22755:3:5"},"nodeType":"YulFunctionCall","src":"22755:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22702:43:5"},"nodeType":"YulFunctionCall","src":"22702:71:5"},"nodeType":"YulExpressionStatement","src":"22702:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22827:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22840:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22851:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22836:3:5"},"nodeType":"YulFunctionCall","src":"22836:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22783:43:5"},"nodeType":"YulFunctionCall","src":"22783:72:5"},"nodeType":"YulExpressionStatement","src":"22783:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22620:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22632:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22640:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22651:4:5","type":""}],"src":"22530:332:5"},{"body":{"nodeType":"YulBlock","src":"22974:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22996:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"23004:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22992:3:5"},"nodeType":"YulFunctionCall","src":"22992:14:5"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23008:34:5","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22985:6:5"},"nodeType":"YulFunctionCall","src":"22985:58:5"},"nodeType":"YulExpressionStatement","src":"22985:58:5"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22966:6:5","type":""}],"src":"22868:182:5"},{"body":{"nodeType":"YulBlock","src":"23202:220:5","statements":[{"nodeType":"YulAssignment","src":"23212:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23278:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"23283:2:5","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23219:58:5"},"nodeType":"YulFunctionCall","src":"23219:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23212:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23384:3:5"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"23295:88:5"},"nodeType":"YulFunctionCall","src":"23295:93:5"},"nodeType":"YulExpressionStatement","src":"23295:93:5"},{"nodeType":"YulAssignment","src":"23397:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23408:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"23413:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23404:3:5"},"nodeType":"YulFunctionCall","src":"23404:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23397:3:5"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23190:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23198:3:5","type":""}],"src":"23056:366:5"},{"body":{"nodeType":"YulBlock","src":"23599:248:5","statements":[{"nodeType":"YulAssignment","src":"23609:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23621:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23632:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:5"},"nodeType":"YulFunctionCall","src":"23617:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23609:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23656:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23667:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23652:3:5"},"nodeType":"YulFunctionCall","src":"23652:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23675:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"23681:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23671:3:5"},"nodeType":"YulFunctionCall","src":"23671:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23645:6:5"},"nodeType":"YulFunctionCall","src":"23645:47:5"},"nodeType":"YulExpressionStatement","src":"23645:47:5"},{"nodeType":"YulAssignment","src":"23701:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23835:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23709:124:5"},"nodeType":"YulFunctionCall","src":"23709:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23701:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23579:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23594:4:5","type":""}],"src":"23428:419:5"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address payable[]\n    function abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value8, value9 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value10 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IWETH_$227_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWETH_$227_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IWETH_$227__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWETH_$227_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_contract$_IERC20_$190(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$190(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$190(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$190(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$190(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$190(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$190(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function convert_t_contract$_IERC20_$190_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$190_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint128(value)))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"308":[{"length":32,"start":635},{"length":32,"start":2422},{"length":32,"start":3010}]},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80637a9d7c14116100595780637a9d7c141461011a5780638da5cb5b14610143578063ad5c46481461016e578063ddca3f4314610199578063f2fde38b146101c457610091565b806324e1c18d146100935780636ca591a7146100be578063715018a6146100da57806373fee090146100f157610091565b3661009157005b005b34801561009f57600080fd5b506100a86101ed565b6040516100b59190611545565b60405180910390f35b6100d860048036038101906100d39190611856565b6101f3565b005b3480156100e657600080fd5b506100ef610b26565b005b3480156100fd57600080fd5b50610118600480360381019061011391906119a3565b610b3a565b005b34801561012657600080fd5b50610141600480360381019061013c91906119a3565b610b4c565b005b34801561014f57600080fd5b50610158610b97565b6040516101659190611a11565b60405180910390f35b34801561017a57600080fd5b50610183610bc0565b6040516101909190611a8b565b60405180910390f35b3480156101a557600080fd5b506101ae610be4565b6040516101bb9190611545565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190611ad2565b610bea565b005b60015481565b6001548b8b90501115801561020d5750888890508b8b9050145b801561021e57508888905087879050145b801561022f57508686905085859050145b610265576040517f90b42d6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060400160405280600081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152509050600034111561036957806020015173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b5050505050348160000181815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1681600001516040516103609190611545565b60405180910390a15b60005b88889050811015610abf57600073ffffffffffffffffffffffffffffffffffffffff168989838181106103a2576103a1611aff565b5b90506020020160208101906103b79190611ad2565b73ffffffffffffffffffffffffffffffffffffffff1614156105a0578281815181106103e6576103e5611aff565b5b602002602001015182600001511015610455577f0b74b0798ec89f7cf91b1446e01c1bb75b7d55c45b104edfb364a46a074e2f56826000015184838151811061043257610431611aff565b5b6020026020010151604051610448929190611b2e565b60405180910390a1610abf565b600083828151811061046a57610469611aff565b5b6020026020010151111561059b5782818151811061048b5761048a611aff565b5b6020026020010151826000018181516104a49190611b86565b91508181525050816020015173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8483815181106104de576104dd611aff565b5b60200260200101516040518263ffffffff1660e01b81526004016105029190611545565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b5050505061055f83828151811061054a57610549611aff565b5b602002602001015161055a610c6e565b610c76565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516105929190611545565b60405180910390a15b610aac565b816020015173ffffffffffffffffffffffffffffffffffffffff168d8d838181106105ce576105cd611aff565b5b90506020020160208101906105e39190611bf8565b73ffffffffffffffffffffffffffffffffffffffff1614156107b2578a8a8281811061061257610611611aff565b5b90506020020160208101906106279190611bf8565b73ffffffffffffffffffffffffffffffffffffffff168d8d838181106106505761064f611aff565b5b90506020020160208101906106659190611bf8565b73ffffffffffffffffffffffffffffffffffffffff16141561073f576106cc8d8d8381811061069757610696611aff565b5b90506020020160208101906106ac9190611bf8565b8483815181106106bf576106be611aff565b5b6020026020010151610cc1565b8281815181106106df576106de611aff565b5b6020026020010151826000018181516106f89190611c25565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107329190611545565b60405180910390a1610aac565b82818151811061075257610751611aff565b5b60200260200101518260000181815161076b9190611b86565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107a59190611545565b60405180910390a16107fe565b6107fd8d8d838181106107c8576107c7611aff565b5b90506020020160208101906107dd9190611bf8565b8483815181106107f0576107ef611aff565b5b6020026020010151610cc1565b5b60006108cd8c8c8481811061081657610815611aff565b5b905060200201602081019061082b9190611bf8565b8f8f8581811061083e5761083d611aff565b5b90506020020160208101906108539190611bf8565b8c8c8681811061086657610865611aff565b5b905060200201602081019061087b9190611ad2565b8b8b8781811061088e5761088d611aff565b5b90506020020160208101906108a39190611cb9565b8a8a888181106108b6576108b5611aff565b5b90506020028101906108c89190611cf5565b610e8b565b90506000612710826002546108e29190611d58565b6108ec9190611de1565b9050836020015173ffffffffffffffffffffffffffffffffffffffff168d8d8581811061091c5761091b611aff565b5b90506020020160208101906109319190611bf8565b73ffffffffffffffffffffffffffffffffffffffff1614156109db578082856000015161095e9190611c25565b6109689190611b86565b84600001818152505061099b7f0000000000000000000000000000000000000000000000000000000000000000826111e8565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1684600001516040516109ce9190611545565b60405180910390a1610aa9565b610a178d8d858181106109f1576109f0611aff565b5b9050602002016020810190610a069190611bf8565b8284610a129190611b86565b611281565b610a488d8d85818110610a2d57610a2c611aff565b5b9050602002016020810190610a429190611bf8565b826111e8565b7f680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c8d8d85818110610a7c57610a7b611aff565b5b9050602002016020810190610a919190611bf8565b83604051610aa0929190611e33565b60405180910390a15b50505b8080610ab790611e5c565b91505061036c565b50600081600001511115610b1857610adf81602001518260000151611281565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed166000604051610b0f9190611ee0565b60405180910390a15b505050505050505050505050565b610b2e6113e2565b610b386000611460565b565b610b426113e2565b8060028190555050565b610b546113e2565b806001819055507f5091ccfe22ca8f99d8f1f07c6ae3a61daf990d74ef229d46898624ff3977238c600154604051610b8c9190611545565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610bf26113e2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611f7e565b60405180910390fd5b610c6b81611460565b50565b600033905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610cbc573d6000803e3d6000fd5b505050565b73dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d915773dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610d5a93929190611f9e565b600060405180830381600087803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b50505050610e22565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610dce93929190611f9e565b602060405180830381600087803b158015610de857600080fd5b505af1158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e20919061200d565b505b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee83604051610e7f9190611545565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610ef3576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f2e9190611a11565b60206040518083038186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7e919061204f565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3876fffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610fcb9291906120c9565b602060405180830381600087803b158015610fe557600080fd5b505af1158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d919061200d565b5060008573ffffffffffffffffffffffffffffffffffffffff1660008686604051611049929190612131565b60006040518083038185875af1925050503d8060008114611086576040519150601f19603f3d011682016040523d82523d6000602084013e61108b565b606091505b505090507fb1bbdf0cbdd013d8d322184c42c16dafe4b2b3b66c3d60f46874b6c78b9a87f681836040516110c0929190612159565b60405180910390a18061110c5788886040517f7155081c000000000000000000000000000000000000000000000000000000008152600401611103929190612182565b60405180910390fd5b818973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111469190611a11565b60206040518083038186803b15801561115e57600080fd5b505afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611196919061204f565b6111a09190611b86565b91507f74496fce2cdc392d99808924e4161c005195a64fee4c166b02c2b716db28abb0826040516111d19190611545565b60405180910390a181925050509695505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61120c610b97565b836040518363ffffffff1660e01b815260040161122a9291906121ab565b602060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c919061200d565b505050565b73dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561134f5773dac17f958d2ee523a2206206994597c13d831ec773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016113189291906121ab565b600060405180830381600087803b15801561133257600080fd5b505af1158015611346573d6000803e3d6000fd5b505050506113de565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161138a9291906121ab565b602060405180830381600087803b1580156113a457600080fd5b505af11580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc919061200d565b505b5050565b6113ea611524565b73ffffffffffffffffffffffffffffffffffffffff16611408610b97565b73ffffffffffffffffffffffffffffffffffffffff161461145e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145590612220565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61153f8161152c565b82525050565b600060208201905061155a6000830184611536565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261159957611598611574565b5b8235905067ffffffffffffffff8111156115b6576115b5611579565b5b6020830191508360208202830111156115d2576115d161157e565b5b9250929050565b60008083601f8401126115ef576115ee611574565b5b8235905067ffffffffffffffff81111561160c5761160b611579565b5b6020830191508360208202830111156116285761162761157e565b5b9250929050565b60008083601f84011261164557611644611574565b5b8235905067ffffffffffffffff81111561166257611661611579565b5b60208301915083602082028301111561167e5761167d61157e565b5b9250929050565b60008083601f84011261169b5761169a611574565b5b8235905067ffffffffffffffff8111156116b8576116b7611579565b5b6020830191508360208202830111156116d4576116d361157e565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611724826116db565b810181811067ffffffffffffffff82111715611743576117426116ec565b5b80604052505050565b6000611756611560565b9050611762828261171b565b919050565b600067ffffffffffffffff821115611782576117816116ec565b5b602082029050602081019050919050565b61179c8161152c565b81146117a757600080fd5b50565b6000813590506117b981611793565b92915050565b60006117d26117cd84611767565b61174c565b905080838252602082019050602084028301858111156117f5576117f461157e565b5b835b8181101561181e578061180a88826117aa565b8452602084019350506020810190506117f7565b5050509392505050565b600082601f83011261183d5761183c611574565b5b813561184d8482602086016117bf565b91505092915050565b600080600080600080600080600080600060c08c8e03121561187b5761187a61156a565b5b60008c013567ffffffffffffffff8111156118995761189861156f565b5b6118a58e828f01611583565b9b509b505060208c013567ffffffffffffffff8111156118c8576118c761156f565b5b6118d48e828f01611583565b995099505060408c013567ffffffffffffffff8111156118f7576118f661156f565b5b6119038e828f016115d9565b975097505060608c013567ffffffffffffffff8111156119265761192561156f565b5b6119328e828f0161162f565b955095505060808c013567ffffffffffffffff8111156119555761195461156f565b5b6119618e828f01611685565b935093505060a08c013567ffffffffffffffff8111156119845761198361156f565b5b6119908e828f01611828565b9150509295989b509295989b9093969950565b6000602082840312156119b9576119b861156a565b5b60006119c7848285016117aa565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119fb826119d0565b9050919050565b611a0b816119f0565b82525050565b6000602082019050611a266000830184611a02565b92915050565b6000819050919050565b6000611a51611a4c611a47846119d0565b611a2c565b6119d0565b9050919050565b6000611a6382611a36565b9050919050565b6000611a7582611a58565b9050919050565b611a8581611a6a565b82525050565b6000602082019050611aa06000830184611a7c565b92915050565b611aaf816119f0565b8114611aba57600080fd5b50565b600081359050611acc81611aa6565b92915050565b600060208284031215611ae857611ae761156a565b5b6000611af684828501611abd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050611b436000830185611536565b611b506020830184611536565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b918261152c565b9150611b9c8361152c565b925082821015611baf57611bae611b57565b5b828203905092915050565b6000611bc5826119f0565b9050919050565b611bd581611bba565b8114611be057600080fd5b50565b600081359050611bf281611bcc565b92915050565b600060208284031215611c0e57611c0d61156a565b5b6000611c1c84828501611be3565b91505092915050565b6000611c308261152c565b9150611c3b8361152c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c7057611c6f611b57565b5b828201905092915050565b6000611c86826119d0565b9050919050565b611c9681611c7b565b8114611ca157600080fd5b50565b600081359050611cb381611c8d565b92915050565b600060208284031215611ccf57611cce61156a565b5b6000611cdd84828501611ca4565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611d1257611d11611ce6565b5b80840192508235915067ffffffffffffffff821115611d3457611d33611ceb565b5b602083019250600182023603831315611d5057611d4f611cf0565b5b509250929050565b6000611d638261152c565b9150611d6e8361152c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da757611da6611b57565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dec8261152c565b9150611df78361152c565b925082611e0757611e06611db2565b5b828204905092915050565b6000611e1d82611a58565b9050919050565b611e2d81611e12565b82525050565b6000604082019050611e486000830185611e24565b611e556020830184611536565b9392505050565b6000611e678261152c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e9a57611e99611b57565b5b600182019050919050565b6000819050919050565b6000611eca611ec5611ec084611ea5565b611a2c565b61152c565b9050919050565b611eda81611eaf565b82525050565b6000602082019050611ef56000830184611ed1565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f68602683611efb565b9150611f7382611f0c565b604082019050919050565b60006020820190508181036000830152611f9781611f5b565b9050919050565b6000606082019050611fb36000830186611a02565b611fc06020830185611a02565b611fcd6040830184611536565b949350505050565b60008115159050919050565b611fea81611fd5565b8114611ff557600080fd5b50565b60008151905061200781611fe1565b92915050565b6000602082840312156120235761202261156a565b5b600061203184828501611ff8565b91505092915050565b60008151905061204981611793565b92915050565b6000602082840312156120655761206461156a565b5b60006120738482850161203a565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b60006120b36120ae6120a98461207c565b611a2c565b61152c565b9050919050565b6120c381612098565b82525050565b60006040820190506120de6000830185611a02565b6120eb60208301846120ba565b9392505050565b600081905092915050565b82818337600083830152505050565b600061211883856120f2565b93506121258385846120fd565b82840190509392505050565b600061213e82848661210c565b91508190509392505050565b61215381611fd5565b82525050565b600060408201905061216e600083018561214a565b61217b6020830184611536565b9392505050565b60006040820190506121976000830185611e24565b6121a46020830184611e24565b9392505050565b60006040820190506121c06000830185611a02565b6121cd6020830184611536565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061220a602083611efb565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b905091905056fea2646970667358221220db8a2c4d5b60916ec16c88e99bec5aa80186b392ddfddad95890200c887a746a64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9D7C14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xF1 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x22F JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLVALUE DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x455 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x448 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x59B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x55F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x54A JUMPI PUSH2 0x549 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x55A PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAAC JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B2 JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73F JUMPI PUSH2 0x6CC DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAAC JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x7FD DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C7 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x2 SLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x99B PUSH32 0x0 DUP3 PUSH2 0x11E8 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xA17 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP3 DUP5 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xA48 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP3 PUSH2 0x11E8 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x1AFF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAB7 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xADF DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1281 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2E PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x0 PUSH2 0x1460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x13E2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x13E2 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP2 PUSH2 0x1460 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD91 JUMPI PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xE22 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xE7F SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7E SWAP2 SWAP1 PUSH2 0x204F JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCB SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1049 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C0 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x110C JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1103 SWAP3 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x204F JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x120C PUSH2 0xB97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x134F JUMPI PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x13DE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP3 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x1524 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1408 PUSH2 0xB97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1455 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153F DUP2 PUSH2 0x152C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x167E JUMPI PUSH2 0x167D PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16D4 JUMPI PUSH2 0x16D3 PUSH2 0x157E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1724 DUP3 PUSH2 0x16DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1742 PUSH2 0x16EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1756 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP PUSH2 0x1762 DUP3 DUP3 PUSH2 0x171B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x16EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x152C JUMP JUMPDEST DUP2 EQ PUSH2 0x17A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17B9 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D2 PUSH2 0x17CD DUP5 PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17F5 JUMPI PUSH2 0x17F4 PUSH2 0x157E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x181E JUMPI DUP1 PUSH2 0x180A DUP9 DUP3 PUSH2 0x17AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183D JUMPI PUSH2 0x183C PUSH2 0x1574 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x18A5 DUP15 DUP3 DUP16 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x18D4 DUP15 DUP3 DUP16 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1903 DUP15 DUP3 DUP16 ADD PUSH2 0x15D9 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1932 DUP15 DUP3 DUP16 ADD PUSH2 0x162F JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1961 DUP15 DUP3 DUP16 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1983 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH2 0x1990 DUP15 DUP3 DUP16 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C7 DUP5 DUP3 DUP6 ADD PUSH2 0x17AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FB DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0B DUP2 PUSH2 0x19F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A51 PUSH2 0x1A4C PUSH2 0x1A47 DUP5 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP3 PUSH2 0x1A36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A75 DUP3 PUSH2 0x1A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAF DUP2 PUSH2 0x19F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACC DUP2 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9C DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1BAF JUMPI PUSH2 0x1BAE PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC5 DUP3 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD5 DUP2 PUSH2 0x1BBA JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF2 DUP2 PUSH2 0x1BCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C30 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C86 DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C96 DUP2 PUSH2 0x1C7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB3 DUP2 PUSH2 0x1C8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDD DUP5 DUP3 DUP6 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D4F PUSH2 0x1CF0 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF7 DUP4 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D DUP3 PUSH2 0x1A58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2D DUP2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0x1E55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E67 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECA PUSH2 0x1EC5 PUSH2 0x1EC0 DUP5 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDA DUP2 PUSH2 0x1EAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x26 DUP4 PUSH2 0x1EFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1FCD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEA DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2031 DUP5 DUP3 DUP6 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2049 DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2065 JUMPI PUSH2 0x2064 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2073 DUP5 DUP3 DUP6 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 PUSH2 0x20AE PUSH2 0x20A9 DUP5 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C3 DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x20EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP4 DUP6 PUSH2 0x20F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2125 DUP4 DUP6 DUP5 PUSH2 0x20FD JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213E DUP3 DUP5 DUP7 PUSH2 0x210C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2153 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x217B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0x21A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x21CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220A PUSH1 0x20 DUP4 PUSH2 0x1EFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2215 DUP3 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2239 DUP2 PUSH2 0x21FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP11 0x2C 0x4D JUMPDEST PUSH1 0x91 PUSH15 0xC16C88E99BEC5AA80186B392DDFDDA 0xD9 PC SWAP1 KECCAK256 0xC DUP9 PUSH27 0x746A64736F6C634300080800330000000000000000000000000000 ","sourceMap":"568:8792:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6260:3098;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;2491:74:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1473:27:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1573:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1537:30:3;;;;:::o;6260:3098::-;6579:15;;6559:9;;:16;;:35;;:90;;;;;6634:8;;:15;;6614:9;;:16;;:35;6559:90;:143;;;;;6687:8;;:15;;6669:7;;:14;;:33;6559:143;:198;;;;;6743:7;;:14;;6722:10;;:17;;:35;6559:198;6540:260;;6776:24;;;;;;;;;;;;;;6540:260;6811:24;6838:17;;;;;;;;6847:1;6838:17;;;;6850:4;6838:17;;;;;6811:44;;6882:1;6870:9;:13;6866:190;;;6899:8;:13;;;:21;;;6928:9;6899:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6977:9;6954:8;:20;;:32;;;;;7005:40;7024:8;:20;;;7005:40;;;;;;:::i;:::-;;;;;;;;6866:190;7071:9;7066:2132;7090:7;;:14;;7086:1;:18;7066:2132;;;7198:1;7176:24;;:7;;7184:1;7176:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:24;;;7172:536;;;7247:6;7254:1;7247:9;;;;;;;;:::i;:::-;;;;;;;;7224:8;:20;;;:32;7220:154;;;7285:43;7296:8;:20;;;7318:6;7325:1;7318:9;;;;;;;;:::i;:::-;;;;;;;;7285:43;;;;;;;:::i;:::-;;;;;;;;7350:5;;7220:154;7407:1;7395:6;7402:1;7395:9;;;;;;;;:::i;:::-;;;;;;;;:13;7391:277;;;7456:6;7463:1;7456:9;;;;;;;;:::i;:::-;;;;;;;;7432:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;7487:8;:13;;;:22;;;7510:6;7517:1;7510:9;;;;;;;;:::i;:::-;;;;;;;;7487:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:40;7554:6;7561:1;7554:9;;;;;;;;:::i;:::-;;;;;;;;7565:16;:14;:16::i;:::-;7542:11;:40::i;:::-;7609;7628:8;:20;;;7609:40;;;;;;:::i;:::-;;;;;;;;7391:277;7685:8;;7172:536;7829:8;:13;;;7813:29;;:9;;7823:1;7813:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:29;;;7809:520;;;7882:8;;7891:1;7882:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7866:27;;:9;;7876:1;7866:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:27;;;7862:263;;;7917:37;7930:9;;7940:1;7930:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7944:6;7951:1;7944:9;;;;;;;;:::i;:::-;;;;;;;;7917:12;:37::i;:::-;8000:6;8007:1;8000:9;;;;;;;;:::i;:::-;;;;;;;;7976:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;8036:40;8055:8;:20;;;8036:40;;;;;;:::i;:::-;;;;;;;;8098:8;;7862:263;8166:6;8173:1;8166:9;;;;;;;;:::i;:::-;;;;;;;;8142:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;8198:40;8217:8;:20;;;8198:40;;;;;;:::i;:::-;;;;;;;;7809:520;;;8277:37;8290:9;;8300:1;8290:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8304:6;8311:1;8304:9;;;;;;;;:::i;:::-;;;;;;;;8277:12;:37::i;:::-;7809:520;8404:20;8427:174;8454:8;;8463:1;8454:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8483:9;;8493:1;8483:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8513:7;;8521:1;8513:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8541;;8552:1;8541:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8572:12;;8585:1;8572:15;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;8427:9;:174::i;:::-;8404:197;;8615:14;8655:5;8639:12;8633:3;;:18;;;;:::i;:::-;8632:28;;;;:::i;:::-;8615:45;;8693:8;:13;;;8678:28;;:8;;8687:1;8678:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:28;;;8674:514;;;8847:9;8812:12;8769:8;:20;;;:55;;;;:::i;:::-;:87;;;;:::i;:::-;8726:8;:20;;:130;;;;;8874:28;8886:4;8892:9;8874:11;:28::i;:::-;8925:40;8944:8;:20;;;8925:40;;;;;;:::i;:::-;;;;;;;;8674:514;;;9004:52;9018:8;;9027:1;9018:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;9046:9;9031:12;:24;;;;:::i;:::-;9004:13;:52::i;:::-;9074:35;9086:8;;9095:1;9086:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;9099:9;9074:11;:35::i;:::-;9132:41;9147:8;;9156:1;9147:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;9160:12;9132:41;;;;;;;:::i;:::-;;;;;;;;8674:514;7111:2087;;7066:2132;7106:3;;;;;:::i;:::-;;;;7066:2132;;;;9234:1;9211:8;:20;;;:24;9207:145;;;9251:50;9265:8;:13;;;9280:8;:20;;;9251:13;:50::i;:::-;9320:21;9339:1;9320:21;;;;;;:::i;:::-;;;;;;;;9207:145;6530:2828;6260:3098;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2491:74:3:-;1094:13:0;:11;:13::i;:::-;2555:3:3::1;2549;:9;;;;2491:74:::0;:::o;2688:155::-;1094:13:0;:11;:13::i;:::-;2780:3:3::1;2762:15;:21;;;;2798:38;2820:15;;2798:38;;;;;;:::i;:::-;;;;;;;;2688:155:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1473:27:3:-;;;:::o;1573:18::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3768:129:3:-;3817:7;3880:10;3873:17;;3768:129;:::o;4086:117::-;4169:9;4161:27;;:35;4189:6;4161:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4086:117;;:::o;1934:451::-;2034:42;2012:64;;2020:9;2012:64;;;2008:303;;;2104:42;2092:85;;;2178:10;2198:4;2205:6;2092:120;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:303;;;2243:9;:22;;;2266:10;2286:4;2293:6;2243:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2008:303;2364:4;2325:53;;2344:10;2325:53;;;2371:6;2325:53;;;;;;:::i;:::-;;;;;;;;1934:451;;:::o;4664:1107::-;5072:7;5114:1;5095:21;;:7;:21;;;5091:50;;;5125:16;;;;;;;;;;;;;;5091:50;5232:20;5255:8;:18;;;5282:4;5255:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5232:56;;5298:9;:17;;;5316:7;5325:17;5298:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5354:12;5372:10;:15;;5395:1;5398:12;;5372:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5353:58;;;5426:39;5443:7;5452:12;5426:39;;;;;;;:::i;:::-;;;;;;;;5480:7;5475:144;;5558:8;5595:9;5508:111;;;;;;;;;;;;:::i;:::-;;;;;;;;5475:144;5680:12;5644:8;:18;;;5671:4;5644:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;5629:63;;5707:28;5722:12;5707:28;;;;;;:::i;:::-;;;;;;;;5752:12;5745:19;;;;4664:1107;;;;;;;;:::o;3609:108::-;3679:5;:14;;;3694:7;:5;:7::i;:::-;3703:6;3679:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3609:108;;:::o;3065:364::-;3159:42;3141:60;;3149:5;3141:60;;;3137:286;;;3229:42;3217:64;;;3299:10;3327:6;3217:130;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3137:286;;;3378:5;:14;;;3393:10;3405:6;3378:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3137:286;3065:364;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1163:582;1250:8;1260:6;1310:3;1303:4;1295:6;1291:17;1287:27;1277:122;;1318:79;;:::i;:::-;1277:122;1431:6;1418:20;1408:30;;1461:18;1453:6;1450:30;1447:117;;;1483:79;;:::i;:::-;1447:117;1597:4;1589:6;1585:17;1573:29;;1651:3;1643:4;1635:6;1631:17;1621:8;1617:32;1614:41;1611:128;;;1658:79;;:::i;:::-;1611:128;1163:582;;;;;:::o;1768:568::-;1841:8;1851:6;1901:3;1894:4;1886:6;1882:17;1878:27;1868:122;;1909:79;;:::i;:::-;1868:122;2022:6;2009:20;1999:30;;2052:18;2044:6;2041:30;2038:117;;;2074:79;;:::i;:::-;2038:117;2188:4;2180:6;2176:17;2164:29;;2242:3;2234:4;2226:6;2222:17;2212:8;2208:32;2205:41;2202:128;;;2249:79;;:::i;:::-;2202:128;1768:568;;;;;:::o;2367:576::-;2448:8;2458:6;2508:3;2501:4;2493:6;2489:17;2485:27;2475:122;;2516:79;;:::i;:::-;2475:122;2629:6;2616:20;2606:30;;2659:18;2651:6;2648:30;2645:117;;;2681:79;;:::i;:::-;2645:117;2795:4;2787:6;2783:17;2771:29;;2849:3;2841:4;2833:6;2829:17;2819:8;2815:32;2812:41;2809:128;;;2856:79;;:::i;:::-;2809:128;2367:576;;;;;:::o;2964:579::-;3048:8;3058:6;3108:3;3101:4;3093:6;3089:17;3085:27;3075:122;;3116:79;;:::i;:::-;3075:122;3229:6;3216:20;3206:30;;3259:18;3251:6;3248:30;3245:117;;;3281:79;;:::i;:::-;3245:117;3395:4;3387:6;3383:17;3371:29;;3449:3;3441:4;3433:6;3429:17;3419:8;3415:32;3412:41;3409:128;;;3456:79;;:::i;:::-;3409:128;2964:579;;;;;:::o;3549:102::-;3590:6;3641:2;3637:7;3632:2;3625:5;3621:14;3617:28;3607:38;;3549:102;;;:::o;3657:180::-;3705:77;3702:1;3695:88;3802:4;3799:1;3792:15;3826:4;3823:1;3816:15;3843:281;3926:27;3948:4;3926:27;:::i;:::-;3918:6;3914:40;4056:6;4044:10;4041:22;4020:18;4008:10;4005:34;4002:62;3999:88;;;4067:18;;:::i;:::-;3999:88;4107:10;4103:2;4096:22;3886:238;3843:281;;:::o;4130:129::-;4164:6;4191:20;;:::i;:::-;4181:30;;4220:33;4248:4;4240:6;4220:33;:::i;:::-;4130:129;;;:::o;4265:311::-;4342:4;4432:18;4424:6;4421:30;4418:56;;;4454:18;;:::i;:::-;4418:56;4504:4;4496:6;4492:17;4484:25;;4564:4;4558;4554:15;4546:23;;4265:311;;;:::o;4582:122::-;4655:24;4673:5;4655:24;:::i;:::-;4648:5;4645:35;4635:63;;4694:1;4691;4684:12;4635:63;4582:122;:::o;4710:139::-;4756:5;4794:6;4781:20;4772:29;;4810:33;4837:5;4810:33;:::i;:::-;4710:139;;;;:::o;4872:710::-;4968:5;4993:81;5009:64;5066:6;5009:64;:::i;:::-;4993:81;:::i;:::-;4984:90;;5094:5;5123:6;5116:5;5109:21;5157:4;5150:5;5146:16;5139:23;;5210:4;5202:6;5198:17;5190:6;5186:30;5239:3;5231:6;5228:15;5225:122;;;5258:79;;:::i;:::-;5225:122;5373:6;5356:220;5390:6;5385:3;5382:15;5356:220;;;5465:3;5494:37;5527:3;5515:10;5494:37;:::i;:::-;5489:3;5482:50;5561:4;5556:3;5552:14;5545:21;;5432:144;5416:4;5411:3;5407:14;5400:21;;5356:220;;;5360:21;4974:608;;4872:710;;;;;:::o;5605:370::-;5676:5;5725:3;5718:4;5710:6;5706:17;5702:27;5692:122;;5733:79;;:::i;:::-;5692:122;5850:6;5837:20;5875:94;5965:3;5957:6;5950:4;5942:6;5938:17;5875:94;:::i;:::-;5866:103;;5682:293;5605:370;;;;:::o;5981:2513::-;6292:6;6300;6308;6316;6324;6332;6340;6348;6356;6364;6372:7;6422:3;6410:9;6401:7;6397:23;6393:33;6390:120;;;6429:79;;:::i;:::-;6390:120;6577:1;6566:9;6562:17;6549:31;6607:18;6599:6;6596:30;6593:117;;;6629:79;;:::i;:::-;6593:117;6742:94;6828:7;6819:6;6808:9;6804:22;6742:94;:::i;:::-;6724:112;;;;6520:326;6913:2;6902:9;6898:18;6885:32;6944:18;6936:6;6933:30;6930:117;;;6966:79;;:::i;:::-;6930:117;7079:94;7165:7;7156:6;7145:9;7141:22;7079:94;:::i;:::-;7061:112;;;;6856:327;7250:2;7239:9;7235:18;7222:32;7281:18;7273:6;7270:30;7267:117;;;7303:79;;:::i;:::-;7267:117;7416:80;7488:7;7479:6;7468:9;7464:22;7416:80;:::i;:::-;7398:98;;;;7193:313;7573:2;7562:9;7558:18;7545:32;7604:18;7596:6;7593:30;7590:117;;;7626:79;;:::i;:::-;7590:117;7739:88;7819:7;7810:6;7799:9;7795:22;7739:88;:::i;:::-;7721:106;;;;7516:321;7904:3;7893:9;7889:19;7876:33;7936:18;7928:6;7925:30;7922:117;;;7958:79;;:::i;:::-;7922:117;8071:91;8154:7;8145:6;8134:9;8130:22;8071:91;:::i;:::-;8053:109;;;;7847:325;8239:3;8228:9;8224:19;8211:33;8271:18;8263:6;8260:30;8257:117;;;8293:79;;:::i;:::-;8257:117;8399:78;8469:7;8460:6;8449:9;8445:22;8399:78;:::i;:::-;8388:89;;8182:305;5981:2513;;;;;;;;;;;;;;:::o;8500:329::-;8559:6;8608:2;8596:9;8587:7;8583:23;8579:32;8576:119;;;8614:79;;:::i;:::-;8576:119;8734:1;8759:53;8804:7;8795:6;8784:9;8780:22;8759:53;:::i;:::-;8749:63;;8705:117;8500:329;;;;:::o;8835:126::-;8872:7;8912:42;8905:5;8901:54;8890:65;;8835:126;;;:::o;8967:96::-;9004:7;9033:24;9051:5;9033:24;:::i;:::-;9022:35;;8967:96;;;:::o;9069:118::-;9156:24;9174:5;9156:24;:::i;:::-;9151:3;9144:37;9069:118;;:::o;9193:222::-;9286:4;9324:2;9313:9;9309:18;9301:26;;9337:71;9405:1;9394:9;9390:17;9381:6;9337:71;:::i;:::-;9193:222;;;;:::o;9421:60::-;9449:3;9470:5;9463:12;;9421:60;;;:::o;9487:142::-;9537:9;9570:53;9588:34;9597:24;9615:5;9597:24;:::i;:::-;9588:34;:::i;:::-;9570:53;:::i;:::-;9557:66;;9487:142;;;:::o;9635:126::-;9685:9;9718:37;9749:5;9718:37;:::i;:::-;9705:50;;9635:126;;;:::o;9767:139::-;9830:9;9863:37;9894:5;9863:37;:::i;:::-;9850:50;;9767:139;;;:::o;9912:157::-;10012:50;10056:5;10012:50;:::i;:::-;10007:3;10000:63;9912:157;;:::o;10075:248::-;10181:4;10219:2;10208:9;10204:18;10196:26;;10232:84;10313:1;10302:9;10298:17;10289:6;10232:84;:::i;:::-;10075:248;;;;:::o;10329:122::-;10402:24;10420:5;10402:24;:::i;:::-;10395:5;10392:35;10382:63;;10441:1;10438;10431:12;10382:63;10329:122;:::o;10457:139::-;10503:5;10541:6;10528:20;10519:29;;10557:33;10584:5;10557:33;:::i;:::-;10457:139;;;;:::o;10602:329::-;10661:6;10710:2;10698:9;10689:7;10685:23;10681:32;10678:119;;;10716:79;;:::i;:::-;10678:119;10836:1;10861:53;10906:7;10897:6;10886:9;10882:22;10861:53;:::i;:::-;10851:63;;10807:117;10602:329;;;;:::o;10937:180::-;10985:77;10982:1;10975:88;11082:4;11079:1;11072:15;11106:4;11103:1;11096:15;11123:332;11244:4;11282:2;11271:9;11267:18;11259:26;;11295:71;11363:1;11352:9;11348:17;11339:6;11295:71;:::i;:::-;11376:72;11444:2;11433:9;11429:18;11420:6;11376:72;:::i;:::-;11123:332;;;;;:::o;11461:180::-;11509:77;11506:1;11499:88;11606:4;11603:1;11596:15;11630:4;11627:1;11620:15;11647:191;11687:4;11707:20;11725:1;11707:20;:::i;:::-;11702:25;;11741:20;11759:1;11741:20;:::i;:::-;11736:25;;11780:1;11777;11774:8;11771:34;;;11785:18;;:::i;:::-;11771:34;11830:1;11827;11823:9;11815:17;;11647:191;;;;:::o;11844:110::-;11895:7;11924:24;11942:5;11924:24;:::i;:::-;11913:35;;11844:110;;;:::o;11960:150::-;12047:38;12079:5;12047:38;:::i;:::-;12040:5;12037:49;12027:77;;12100:1;12097;12090:12;12027:77;11960:150;:::o;12116:167::-;12176:5;12214:6;12201:20;12192:29;;12230:47;12271:5;12230:47;:::i;:::-;12116:167;;;;:::o;12289:357::-;12362:6;12411:2;12399:9;12390:7;12386:23;12382:32;12379:119;;;12417:79;;:::i;:::-;12379:119;12537:1;12562:67;12621:7;12612:6;12601:9;12597:22;12562:67;:::i;:::-;12552:77;;12508:131;12289:357;;;;:::o;12652:305::-;12692:3;12711:20;12729:1;12711:20;:::i;:::-;12706:25;;12745:20;12763:1;12745:20;:::i;:::-;12740:25;;12899:1;12831:66;12827:74;12824:1;12821:81;12818:107;;;12905:18;;:::i;:::-;12818:107;12949:1;12946;12942:9;12935:16;;12652:305;;;;:::o;12963:104::-;13008:7;13037:24;13055:5;13037:24;:::i;:::-;13026:35;;12963:104;;;:::o;13073:138::-;13154:32;13180:5;13154:32;:::i;:::-;13147:5;13144:43;13134:71;;13201:1;13198;13191:12;13134:71;13073:138;:::o;13217:155::-;13271:5;13309:6;13296:20;13287:29;;13325:41;13360:5;13325:41;:::i;:::-;13217:155;;;;:::o;13378:345::-;13445:6;13494:2;13482:9;13473:7;13469:23;13465:32;13462:119;;;13500:79;;:::i;:::-;13462:119;13620:1;13645:61;13698:7;13689:6;13678:9;13674:22;13645:61;:::i;:::-;13635:71;;13591:125;13378:345;;;;:::o;13729:117::-;13838:1;13835;13828:12;13852:117;13961:1;13958;13951:12;13975:117;14084:1;14081;14074:12;14098:724;14175:4;14181:6;14237:11;14224:25;14337:1;14331:4;14327:12;14316:8;14300:14;14296:29;14292:48;14272:18;14268:73;14258:168;;14345:79;;:::i;:::-;14258:168;14457:18;14447:8;14443:33;14435:41;;14509:4;14496:18;14486:28;;14537:18;14529:6;14526:30;14523:117;;;14559:79;;:::i;:::-;14523:117;14667:2;14661:4;14657:13;14649:21;;14724:4;14716:6;14712:17;14696:14;14692:38;14686:4;14682:49;14679:136;;;14734:79;;:::i;:::-;14679:136;14188:634;14098:724;;;;;:::o;14828:348::-;14868:7;14891:20;14909:1;14891:20;:::i;:::-;14886:25;;14925:20;14943:1;14925:20;:::i;:::-;14920:25;;15113:1;15045:66;15041:74;15038:1;15035:81;15030:1;15023:9;15016:17;15012:105;15009:131;;;15120:18;;:::i;:::-;15009:131;15168:1;15165;15161:9;15150:20;;14828:348;;;;:::o;15182:180::-;15230:77;15227:1;15220:88;15327:4;15324:1;15317:15;15351:4;15348:1;15341:15;15368:185;15408:1;15425:20;15443:1;15425:20;:::i;:::-;15420:25;;15459:20;15477:1;15459:20;:::i;:::-;15454:25;;15498:1;15488:35;;15503:18;;:::i;:::-;15488:35;15545:1;15542;15538:9;15533:14;;15368:185;;;;:::o;15559:140::-;15623:9;15656:37;15687:5;15656:37;:::i;:::-;15643:50;;15559:140;;;:::o;15705:159::-;15806:51;15851:5;15806:51;:::i;:::-;15801:3;15794:64;15705:159;;:::o;15870:360::-;16005:4;16043:2;16032:9;16028:18;16020:26;;16056:85;16138:1;16127:9;16123:17;16114:6;16056:85;:::i;:::-;16151:72;16219:2;16208:9;16204:18;16195:6;16151:72;:::i;:::-;15870:360;;;;;:::o;16236:233::-;16275:3;16298:24;16316:5;16298:24;:::i;:::-;16289:33;;16344:66;16337:5;16334:77;16331:103;;;16414:18;;:::i;:::-;16331:103;16461:1;16454:5;16450:13;16443:20;;16236:233;;;:::o;16475:85::-;16520:7;16549:5;16538:16;;16475:85;;;:::o;16566:158::-;16624:9;16657:61;16675:42;16684:32;16710:5;16684:32;:::i;:::-;16675:42;:::i;:::-;16657:61;:::i;:::-;16644:74;;16566:158;;;:::o;16730:147::-;16825:45;16864:5;16825:45;:::i;:::-;16820:3;16813:58;16730:147;;:::o;16883:238::-;16984:4;17022:2;17011:9;17007:18;16999:26;;17035:79;17111:1;17100:9;17096:17;17087:6;17035:79;:::i;:::-;16883:238;;;;:::o;17127:169::-;17211:11;17245:6;17240:3;17233:19;17285:4;17280:3;17276:14;17261:29;;17127:169;;;;:::o;17302:225::-;17442:34;17438:1;17430:6;17426:14;17419:58;17511:8;17506:2;17498:6;17494:15;17487:33;17302:225;:::o;17533:366::-;17675:3;17696:67;17760:2;17755:3;17696:67;:::i;:::-;17689:74;;17772:93;17861:3;17772:93;:::i;:::-;17890:2;17885:3;17881:12;17874:19;;17533:366;;;:::o;17905:419::-;18071:4;18109:2;18098:9;18094:18;18086:26;;18158:9;18152:4;18148:20;18144:1;18133:9;18129:17;18122:47;18186:131;18312:4;18186:131;:::i;:::-;18178:139;;17905:419;;;:::o;18330:442::-;18479:4;18517:2;18506:9;18502:18;18494:26;;18530:71;18598:1;18587:9;18583:17;18574:6;18530:71;:::i;:::-;18611:72;18679:2;18668:9;18664:18;18655:6;18611:72;:::i;:::-;18693;18761:2;18750:9;18746:18;18737:6;18693:72;:::i;:::-;18330:442;;;;;;:::o;18778:90::-;18812:7;18855:5;18848:13;18841:21;18830:32;;18778:90;;;:::o;18874:116::-;18944:21;18959:5;18944:21;:::i;:::-;18937:5;18934:32;18924:60;;18980:1;18977;18970:12;18924:60;18874:116;:::o;18996:137::-;19050:5;19081:6;19075:13;19066:22;;19097:30;19121:5;19097:30;:::i;:::-;18996:137;;;;:::o;19139:345::-;19206:6;19255:2;19243:9;19234:7;19230:23;19226:32;19223:119;;;19261:79;;:::i;:::-;19223:119;19381:1;19406:61;19459:7;19450:6;19439:9;19435:22;19406:61;:::i;:::-;19396:71;;19352:125;19139:345;;;;:::o;19490:143::-;19547:5;19578:6;19572:13;19563:22;;19594:33;19621:5;19594:33;:::i;:::-;19490:143;;;;:::o;19639:351::-;19709:6;19758:2;19746:9;19737:7;19733:23;19729:32;19726:119;;;19764:79;;:::i;:::-;19726:119;19884:1;19909:64;19965:7;19956:6;19945:9;19941:22;19909:64;:::i;:::-;19899:74;;19855:128;19639:351;;;;:::o;19996:118::-;20033:7;20073:34;20066:5;20062:46;20051:57;;19996:118;;;:::o;20120:142::-;20170:9;20203:53;20221:34;20230:24;20248:5;20230:24;:::i;:::-;20221:34;:::i;:::-;20203:53;:::i;:::-;20190:66;;20120:142;;;:::o;20268:131::-;20355:37;20386:5;20355:37;:::i;:::-;20350:3;20343:50;20268:131;;:::o;20405:332::-;20526:4;20564:2;20553:9;20549:18;20541:26;;20577:71;20645:1;20634:9;20630:17;20621:6;20577:71;:::i;:::-;20658:72;20726:2;20715:9;20711:18;20702:6;20658:72;:::i;:::-;20405:332;;;;;:::o;20743:147::-;20844:11;20881:3;20866:18;;20743:147;;;;:::o;20896:154::-;20980:6;20975:3;20970;20957:30;21042:1;21033:6;21028:3;21024:16;21017:27;20896:154;;;:::o;21078:314::-;21192:3;21213:88;21294:6;21289:3;21213:88;:::i;:::-;21206:95;;21311:43;21347:6;21342:3;21335:5;21311:43;:::i;:::-;21379:6;21374:3;21370:16;21363:23;;21078:314;;;;;:::o;21398:291::-;21538:3;21560:103;21659:3;21650:6;21642;21560:103;:::i;:::-;21553:110;;21680:3;21673:10;;21398:291;;;;;:::o;21695:109::-;21776:21;21791:5;21776:21;:::i;:::-;21771:3;21764:34;21695:109;;:::o;21810:320::-;21925:4;21963:2;21952:9;21948:18;21940:26;;21976:65;22038:1;22027:9;22023:17;22014:6;21976:65;:::i;:::-;22051:72;22119:2;22108:9;22104:18;22095:6;22051:72;:::i;:::-;21810:320;;;;;:::o;22136:388::-;22285:4;22323:2;22312:9;22308:18;22300:26;;22336:85;22418:1;22407:9;22403:17;22394:6;22336:85;:::i;:::-;22431:86;22513:2;22502:9;22498:18;22489:6;22431:86;:::i;:::-;22136:388;;;;;:::o;22530:332::-;22651:4;22689:2;22678:9;22674:18;22666:26;;22702:71;22770:1;22759:9;22755:17;22746:6;22702:71;:::i;:::-;22783:72;22851:2;22840:9;22836:18;22827:6;22783:72;:::i;:::-;22530:332;;;;;:::o;22868:182::-;23008:34;23004:1;22996:6;22992:14;22985:58;22868:182;:::o;23056:366::-;23198:3;23219:67;23283:2;23278:3;23219:67;:::i;:::-;23212:74;;23295:93;23384:3;23295:93;:::i;:::-;23413:2;23408:3;23404:12;23397:19;;23056:366;;;:::o;23428:419::-;23594:4;23632:2;23621:9;23617:18;23609:26;;23681:9;23675:4;23671:20;23667:1;23656:9;23652:17;23645:47;23709:131;23835:4;23709:131;:::i;:::-;23701:139;;23428:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1764400","executionCost":"infinite","totalCost":"infinite"},"external":{"":"174","WETH()":"infinite","fee()":"2495","maxTransactions()":"2430","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"infinite","owner()":"2544","renounceOwnership()":"30443","setMaxTransactionLimit(uint256)":"infinite","setfee(uint256)":"24851","transferOwnership(address)":"30835"},"internal":{"depositToken(contract IERC20,uint256)":"infinite","fillQuote(contract IERC20,contract IERC20,address,address,bytes calldata)":"infinite","setDestination()":"22","transferEth(uint256,address)":"infinite","withdrawFee(contract IERC20,uint256)":"infinite","withdrawToken(contract IERC20,uint256)":"infinite"}},"methodIdentifiers":{"WETH()":"ad5c4648","fee()":"ddca3f43","maxTransactions()":"24e1c18d","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"6ca591a7","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMaxTransactionLimit(uint256)":"7a9d7c14","setfee(uint256)":"73fee090","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"}],\"name\":\"FillQuote_Swap_Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid_Multiswap_Data\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reqAmount_\",\"type\":\"uint256\"}],\"name\":\"BadRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"}],\"name\":\"EtherBalanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"TransferSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boughtAmount_\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialBuyTokenBalance\",\"type\":\"uint256\"}],\"name\":\"ZeroXCallSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTransactions\",\"type\":\"uint256\"}],\"name\":\"maxTransactionsChange\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"sellToken\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"buyToken\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"spender\",\"type\":\"address[]\"},{\"internalType\":\"address payable[]\",\"name\":\"swapTarget\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"swapCallData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"multiSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setMaxTransactionLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Chitranshu Varshney\",\"details\":\"A contract for swapping ERC20 tokens using 0x-API quotes.\",\"events\":{\"TransferSuccessful(address,address,uint256)\":{\"details\":\"Event to notify if transfer successful or failed after account approval verified\"}},\"kind\":\"dev\",\"methods\":{\"multiSwap(address[],address[],address[],address[],bytes[],uint256[])\":{\"details\":\"Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\",\"params\":{\"amount\":\"amount of sell token to swap.\",\"buyToken\":\"addresses of sell tokens\",\"sellToken\":\"addresses of sell tokens\",\"spender\":\"The address approved for spending the sellToken.\",\"swapCallData\":\"The data to call the swap function on the swapTarget.\",\"swapTarget\":\"The target contract to execute the swap.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMaxTransactionLimit(uint256)\":{\"details\":\"Sets the maximum transaction limit.\",\"params\":{\"num\":\"The new maximum transaction limit.\"}},\"setfee(uint256)\":{\"details\":\"Sets the fee for the transactions.\",\"params\":{\"num\":\"The new fee value.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AlphaVaultSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVaultETH.sol\":\"AlphaVaultSwapETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVaultETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\ninterface TetherToken {\\n    function transfer(address, uint256) external;\\n\\n    function transferFrom(address from, address to, uint value) external;\\n}\\n\\n/**\\n * @title AlphaVaultSwap\\n * @author Chitranshu Varshney\\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\\n */\\n\\ncontract AlphaVaultSwapETH is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\\n\\n    struct wethInfo {\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n\\n    // address private destination;\\n\\n    constructor() {\\n        WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\\n        maxTransactions = 25;\\n        fee = 0;\\n    }\\n\\n    /**\\n     * @dev Deposits ERC20 tokens into the contract.\\n     * @param sellToken The token to deposit.\\n     * @param amount The amount to deposit.\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        if (address(sellToken) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7)\\n                .transferFrom(msg.sender, address(this), amount);\\n        } else {\\n            sellToken.transferFrom(msg.sender, address(this), amount);\\n        }\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Sets the fee for the transactions.\\n     * @param num The new fee value.\\n     */\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    /**\\n     * @dev Sets the maximum transaction limit.\\n     * @param num The new maximum transaction limit.\\n     */\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        if (address(token) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7).transfer(\\n                msg.sender,\\n                amount\\n            );\\n        } else {\\n            token.transfer(msg.sender, amount);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the fee amount of tokens to the owner.\\n     * @param token The token to transfer as a fee.\\n     * @param amount The amount to transfer.\\n     */\\n    function withdrawFee(IERC20 token, uint256 amount) internal {\\n        token.transfer(owner(), amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Transfers an amount of ETH to a given address.\\n     * @param amount The amount of ETH to transfer.\\n     * @param msgSender The address to receive the ETH.\\n     */\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param buyToken The token to buy.\\n     * @param sellToken The token to sell.\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @return boughtAmount The amount of buyToken bought.\\n     */ function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if (spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if (!success)\\n            revert FillQuote_Swap_Failed({\\n                buyToken: buyToken,\\n                sellToken: sellToken\\n            });\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @param amount amount of sell token to swap.\\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if (\\n            !(sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length)\\n        ) revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo = wethInfo(0, WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value;\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance =\\n                    WethInfo.eth_balance +\\n                    boughtAmount -\\n                    feeOfSwap;\\n                withdrawFee(WETH, feeOfSwap);\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\\n                withdrawFee(buyToken[i], feeOfSwap);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77498b24660dcc45be48883bfd5f6a0cb654eb463d029165ddf031a55b889904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/AlphaVaultETH.sol:AlphaVaultSwapETH","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":310,"contract":"contracts/AlphaVaultETH.sol:AlphaVaultSwapETH","label":"maxTransactions","offset":0,"slot":"1","type":"t_uint256"},{"astId":312,"contract":"contracts/AlphaVaultETH.sol:AlphaVaultSwapETH","label":"fee","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVaultETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVaultETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\ninterface TetherToken {\\n    function transfer(address, uint256) external;\\n\\n    function transferFrom(address from, address to, uint value) external;\\n}\\n\\n/**\\n * @title AlphaVaultSwap\\n * @author Chitranshu Varshney\\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\\n */\\n\\ncontract AlphaVaultSwapETH is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\\n\\n    struct wethInfo {\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n\\n    // address private destination;\\n\\n    constructor() {\\n        WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\\n        maxTransactions = 25;\\n        fee = 0;\\n    }\\n\\n    /**\\n     * @dev Deposits ERC20 tokens into the contract.\\n     * @param sellToken The token to deposit.\\n     * @param amount The amount to deposit.\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        if (address(sellToken) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7)\\n                .transferFrom(msg.sender, address(this), amount);\\n        } else {\\n            sellToken.transferFrom(msg.sender, address(this), amount);\\n        }\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Sets the fee for the transactions.\\n     * @param num The new fee value.\\n     */\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    /**\\n     * @dev Sets the maximum transaction limit.\\n     * @param num The new maximum transaction limit.\\n     */\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        if (address(token) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7).transfer(\\n                msg.sender,\\n                amount\\n            );\\n        } else {\\n            token.transfer(msg.sender, amount);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the fee amount of tokens to the owner.\\n     * @param token The token to transfer as a fee.\\n     * @param amount The amount to transfer.\\n     */\\n    function withdrawFee(IERC20 token, uint256 amount) internal {\\n        token.transfer(owner(), amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Transfers an amount of ETH to a given address.\\n     * @param amount The amount of ETH to transfer.\\n     * @param msgSender The address to receive the ETH.\\n     */\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param buyToken The token to buy.\\n     * @param sellToken The token to sell.\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @return boughtAmount The amount of buyToken bought.\\n     */ function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if (spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if (!success)\\n            revert FillQuote_Swap_Failed({\\n                buyToken: buyToken,\\n                sellToken: sellToken\\n            });\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @param amount amount of sell token to swap.\\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if (\\n            !(sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length)\\n        ) revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo = wethInfo(0, WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value;\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance =\\n                    WethInfo.eth_balance +\\n                    boughtAmount -\\n                    feeOfSwap;\\n                withdrawFee(WETH, feeOfSwap);\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\\n                withdrawFee(buyToken[i], feeOfSwap);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77498b24660dcc45be48883bfd5f6a0cb654eb463d029165ddf031a55b889904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"TetherToken":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVaultETH.sol\":\"TetherToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVaultETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\ninterface TetherToken {\\n    function transfer(address, uint256) external;\\n\\n    function transferFrom(address from, address to, uint value) external;\\n}\\n\\n/**\\n * @title AlphaVaultSwap\\n * @author Chitranshu Varshney\\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\\n */\\n\\ncontract AlphaVaultSwapETH is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\\n\\n    struct wethInfo {\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n\\n    // address private destination;\\n\\n    constructor() {\\n        WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\\n        maxTransactions = 25;\\n        fee = 0;\\n    }\\n\\n    /**\\n     * @dev Deposits ERC20 tokens into the contract.\\n     * @param sellToken The token to deposit.\\n     * @param amount The amount to deposit.\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        if (address(sellToken) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7)\\n                .transferFrom(msg.sender, address(this), amount);\\n        } else {\\n            sellToken.transferFrom(msg.sender, address(this), amount);\\n        }\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Sets the fee for the transactions.\\n     * @param num The new fee value.\\n     */\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    /**\\n     * @dev Sets the maximum transaction limit.\\n     * @param num The new maximum transaction limit.\\n     */\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        if (address(token) == 0xdAC17F958D2ee523a2206206994597C13D831ec7) {\\n            TetherToken(0xdAC17F958D2ee523a2206206994597C13D831ec7).transfer(\\n                msg.sender,\\n                amount\\n            );\\n        } else {\\n            token.transfer(msg.sender, amount);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the fee amount of tokens to the owner.\\n     * @param token The token to transfer as a fee.\\n     * @param amount The amount to transfer.\\n     */\\n    function withdrawFee(IERC20 token, uint256 amount) internal {\\n        token.transfer(owner(), amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Transfers an amount of ETH to a given address.\\n     * @param amount The amount of ETH to transfer.\\n     * @param msgSender The address to receive the ETH.\\n     */\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param buyToken The token to buy.\\n     * @param sellToken The token to sell.\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @return boughtAmount The amount of buyToken bought.\\n     */ function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if (spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if (!success)\\n            revert FillQuote_Swap_Failed({\\n                buyToken: buyToken,\\n                sellToken: sellToken\\n            });\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @param amount amount of sell token to swap.\\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if (\\n            !(sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length)\\n        ) revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo = wethInfo(0, WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value;\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance =\\n                    WethInfo.eth_balance +\\n                    boughtAmount -\\n                    feeOfSwap;\\n                withdrawFee(WETH, feeOfSwap);\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\\n                withdrawFee(buyToken[i], feeOfSwap);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77498b24660dcc45be48883bfd5f6a0cb654eb463d029165ddf031a55b889904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AlphaVaultSwap.sol":{"AlphaVaultSwap":{"abi":[{"inputs":[{"internalType":"address","name":"_WETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"contract IERC20","name":"sellToken","type":"address"}],"name":"FillQuote_Swap_Failed","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"Invalid_Multiswap_Data","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reqAmount_","type":"uint256"}],"name":"BadRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"wethBal_","type":"uint256"}],"name":"EtherBalanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from_","type":"address"},{"indexed":true,"internalType":"address","name":"to_","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"TransferSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IERC20","name":"buyToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"boughtAmount_","type":"uint256"}],"name":"WithdrawTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"status","type":"bool"},{"indexed":false,"internalType":"uint256","name":"initialBuyTokenBalance","type":"uint256"}],"name":"ZeroXCallSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"buTokenAmount","type":"uint256"}],"name":"buyTokenBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxTransactions","type":"uint256"}],"name":"maxTransactionsChange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransactions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"sellToken","type":"address[]"},{"internalType":"contract IERC20[]","name":"buyToken","type":"address[]"},{"internalType":"address[]","name":"spender","type":"address[]"},{"internalType":"address payable[]","name":"swapTarget","type":"address[]"},{"internalType":"bytes[]","name":"swapCallData","type":"bytes[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"name":"multiSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setMaxTransactionLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"setfee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Chitranshu Varshney","details":"A contract for swapping ERC20 tokens using 0x-API quotes.","events":{"TransferSuccessful(address,address,uint256)":{"details":"Event to notify if transfer successful or failed after account approval verified"}},"kind":"dev","methods":{"multiSwap(address[],address[],address[],address[],bytes[],uint256[])":{"details":"Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.","params":{"amount":"amount of sell token to swap.","buyToken":"addresses of sell tokens","sellToken":"addresses of sell tokens","spender":"The address approved for spending the sellToken.","swapCallData":"The data to call the swap function on the swapTarget.","swapTarget":"The target contract to execute the swap."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMaxTransactionLimit(uint256)":{"details":"Sets the maximum transaction limit.","params":{"num":"The new maximum transaction limit."}},"setfee(uint256)":{"details":"Sets the fee for the transactions.","params":{"num":"The new fee value."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"AlphaVaultSwap","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1025":{"entryPoint":null,"id":1025,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":165,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":173,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":406,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":369,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":426,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"379:81:5","statements":[{"nodeType":"YulAssignment","src":"389:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:5"},"nodeType":"YulFunctionCall","src":"400:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:5","type":""}],"src":"334:126:5"},{"body":{"nodeType":"YulBlock","src":"511:51:5","statements":[{"nodeType":"YulAssignment","src":"521:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:5"},"nodeType":"YulFunctionCall","src":"532:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:5","type":""}],"src":"466:96:5"},{"body":{"nodeType":"YulBlock","src":"611:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:5"},"nodeType":"YulFunctionCall","src":"670:12:5"},"nodeType":"YulExpressionStatement","src":"670:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:5"},"nodeType":"YulFunctionCall","src":"641:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:5"},"nodeType":"YulFunctionCall","src":"631:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:5"},"nodeType":"YulFunctionCall","src":"624:43:5"},"nodeType":"YulIf","src":"621:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:5","type":""}],"src":"568:122:5"},{"body":{"nodeType":"YulBlock","src":"759:80:5","statements":[{"nodeType":"YulAssignment","src":"769:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:5"},"nodeType":"YulFunctionCall","src":"778:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:5"},"nodeType":"YulFunctionCall","src":"800:33:5"},"nodeType":"YulExpressionStatement","src":"800:33:5"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:5","type":""}],"src":"696:143:5"},{"body":{"nodeType":"YulBlock","src":"922:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:5"},"nodeType":"YulFunctionCall","src":"970:79:5"},"nodeType":"YulExpressionStatement","src":"970:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:5"},"nodeType":"YulFunctionCall","src":"939:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:5"},"nodeType":"YulFunctionCall","src":"935:32:5"},"nodeType":"YulIf","src":"932:119:5"},{"nodeType":"YulBlock","src":"1061:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:5"},"nodeType":"YulFunctionCall","src":"1147:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:5"},"nodeType":"YulFunctionCall","src":"1115:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:5","type":""}],"src":"845:351:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162002310380380620023108339818101604052810190620000379190620001db565b620000576200004b620000a560201b60201c565b620000ad60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060196001819055506000600281905550506200020d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a38262000176565b9050919050565b620001b58162000196565b8114620001c157600080fd5b50565b600081519050620001d581620001aa565b92915050565b600060208284031215620001f457620001f362000171565b5b60006200020484828501620001c4565b91505092915050565b60805160601c6120d66200023a6000396000818161027b015281816109760152610bc201526120d66000f3fe60806040526004361061008a5760003560e01c80637a9d7c14116100595780637a9d7c141461011a5780638da5cb5b14610143578063ad5c46481461016e578063ddca3f4314610199578063f2fde38b146101c457610091565b806324e1c18d146100935780636ca591a7146100be578063715018a6146100da57806373fee090146100f157610091565b3661009157005b005b34801561009f57600080fd5b506100a86101ed565b6040516100b591906113a5565b60405180910390f35b6100d860048036038101906100d391906116b6565b6101f3565b005b3480156100e657600080fd5b506100ef610b26565b005b3480156100fd57600080fd5b5061011860048036038101906101139190611803565b610b3a565b005b34801561012657600080fd5b50610141600480360381019061013c9190611803565b610b4c565b005b34801561014f57600080fd5b50610158610b97565b6040516101659190611871565b60405180910390f35b34801561017a57600080fd5b50610183610bc0565b60405161019091906118eb565b60405180910390f35b3480156101a557600080fd5b506101ae610be4565b6040516101bb91906113a5565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190611932565b610bea565b005b60015481565b6001548b8b90501115801561020d5750888890508b8b9050145b801561021e57508888905087879050145b801561022f57508686905085859050145b610265576040517f90b42d6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060400160405280600081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152509050600034111561036957806020015173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b5050505050348160000181815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16816000015160405161036091906113a5565b60405180910390a15b60005b88889050811015610abf57600073ffffffffffffffffffffffffffffffffffffffff168989838181106103a2576103a161195f565b5b90506020020160208101906103b79190611932565b73ffffffffffffffffffffffffffffffffffffffff1614156105a0578281815181106103e6576103e561195f565b5b602002602001015182600001511015610455577f0b74b0798ec89f7cf91b1446e01c1bb75b7d55c45b104edfb364a46a074e2f5682600001518483815181106104325761043161195f565b5b602002602001015160405161044892919061198e565b60405180910390a1610abf565b600083828151811061046a5761046961195f565b5b6020026020010151111561059b5782818151811061048b5761048a61195f565b5b6020026020010151826000018181516104a491906119e6565b91508181525050816020015173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8483815181106104de576104dd61195f565b5b60200260200101516040518263ffffffff1660e01b815260040161050291906113a5565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b5050505061055f83828151811061054a5761054961195f565b5b602002602001015161055a610c6e565b610c76565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161059291906113a5565b60405180910390a15b610aac565b816020015173ffffffffffffffffffffffffffffffffffffffff168d8d838181106105ce576105cd61195f565b5b90506020020160208101906105e39190611a58565b73ffffffffffffffffffffffffffffffffffffffff1614156107b2578a8a828181106106125761061161195f565b5b90506020020160208101906106279190611a58565b73ffffffffffffffffffffffffffffffffffffffff168d8d838181106106505761064f61195f565b5b90506020020160208101906106659190611a58565b73ffffffffffffffffffffffffffffffffffffffff16141561073f576106cc8d8d838181106106975761069661195f565b5b90506020020160208101906106ac9190611a58565b8483815181106106bf576106be61195f565b5b6020026020010151610cc1565b8281815181106106df576106de61195f565b5b6020026020010151826000018181516106f89190611a85565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161073291906113a5565b60405180910390a1610aac565b8281815181106107525761075161195f565b5b60200260200101518260000181815161076b91906119e6565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107a591906113a5565b60405180910390a16107fe565b6107fd8d8d838181106107c8576107c761195f565b5b90506020020160208101906107dd9190611a58565b8483815181106107f0576107ef61195f565b5b6020026020010151610cc1565b5b60006108cd8c8c848181106108165761081561195f565b5b905060200201602081019061082b9190611a58565b8f8f8581811061083e5761083d61195f565b5b90506020020160208101906108539190611a58565b8c8c868181106108665761086561195f565b5b905060200201602081019061087b9190611932565b8b8b8781811061088e5761088d61195f565b5b90506020020160208101906108a39190611b19565b8a8a888181106108b6576108b561195f565b5b90506020028101906108c89190611b55565b610dba565b90506000612710826002546108e29190611bb8565b6108ec9190611c41565b9050836020015173ffffffffffffffffffffffffffffffffffffffff168d8d8581811061091c5761091b61195f565b5b90506020020160208101906109319190611a58565b73ffffffffffffffffffffffffffffffffffffffff1614156109db578082856000015161095e9190611a85565b61096891906119e6565b84600001818152505061099b7f000000000000000000000000000000000000000000000000000000000000000082611117565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1684600001516040516109ce91906113a5565b60405180910390a1610aa9565b610a178d8d858181106109f1576109f061195f565b5b9050602002016020810190610a069190611a58565b8284610a1291906119e6565b6111b0565b610a488d8d85818110610a2d57610a2c61195f565b5b9050602002016020810190610a429190611a58565b82611117565b7f680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c8d8d85818110610a7c57610a7b61195f565b5b9050602002016020810190610a919190611a58565b83604051610aa0929190611c93565b60405180910390a15b50505b8080610ab790611cbc565b91505061036c565b50600081600001511115610b1857610adf816020015182600001516111b0565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed166000604051610b0f9190611d40565b60405180910390a15b505050505050505050505050565b610b2e611242565b610b3860006112c0565b565b610b42611242565b8060028190555050565b610b54611242565b806001819055507f5091ccfe22ca8f99d8f1f07c6ae3a61daf990d74ef229d46898624ff3977238c600154604051610b8c91906113a5565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610bf2611242565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611dde565b60405180910390fd5b610c6b816112c0565b50565b600033905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610cbc573d6000803e3d6000fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cfe93929190611dfe565b602060405180830381600087803b158015610d1857600080fd5b505af1158015610d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d509190611e6d565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee83604051610dae91906113a5565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610e22576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e5d9190611871565b60206040518083038186803b158015610e7557600080fd5b505afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190611eaf565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3876fffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610efa929190611f29565b602060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4c9190611e6d565b5060008573ffffffffffffffffffffffffffffffffffffffff1660008686604051610f78929190611f91565b60006040518083038185875af1925050503d8060008114610fb5576040519150601f19603f3d011682016040523d82523d6000602084013e610fba565b606091505b505090507fb1bbdf0cbdd013d8d322184c42c16dafe4b2b3b66c3d60f46874b6c78b9a87f68183604051610fef929190611fb9565b60405180910390a18061103b5788886040517f7155081c000000000000000000000000000000000000000000000000000000008152600401611032929190611fe2565b60405180910390fd5b818973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110759190611871565b60206040518083038186803b15801561108d57600080fd5b505afa1580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190611eaf565b6110cf91906119e6565b91507f74496fce2cdc392d99808924e4161c005195a64fee4c166b02c2b716db28abb08260405161110091906113a5565b60405180910390a181925050509695505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61113b610b97565b836040518363ffffffff1660e01b815260040161115992919061200b565b602060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ab9190611e6d565b505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111eb92919061200b565b602060405180830381600087803b15801561120557600080fd5b505af1158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190611e6d565b505050565b61124a611384565b73ffffffffffffffffffffffffffffffffffffffff16611268610b97565b73ffffffffffffffffffffffffffffffffffffffff16146112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590612080565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61139f8161138c565b82525050565b60006020820190506113ba6000830184611396565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126113f9576113f86113d4565b5b8235905067ffffffffffffffff811115611416576114156113d9565b5b602083019150836020820283011115611432576114316113de565b5b9250929050565b60008083601f84011261144f5761144e6113d4565b5b8235905067ffffffffffffffff81111561146c5761146b6113d9565b5b602083019150836020820283011115611488576114876113de565b5b9250929050565b60008083601f8401126114a5576114a46113d4565b5b8235905067ffffffffffffffff8111156114c2576114c16113d9565b5b6020830191508360208202830111156114de576114dd6113de565b5b9250929050565b60008083601f8401126114fb576114fa6113d4565b5b8235905067ffffffffffffffff811115611518576115176113d9565b5b602083019150836020820283011115611534576115336113de565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115848261153b565b810181811067ffffffffffffffff821117156115a3576115a261154c565b5b80604052505050565b60006115b66113c0565b90506115c2828261157b565b919050565b600067ffffffffffffffff8211156115e2576115e161154c565b5b602082029050602081019050919050565b6115fc8161138c565b811461160757600080fd5b50565b600081359050611619816115f3565b92915050565b600061163261162d846115c7565b6115ac565b90508083825260208201905060208402830185811115611655576116546113de565b5b835b8181101561167e578061166a888261160a565b845260208401935050602081019050611657565b5050509392505050565b600082601f83011261169d5761169c6113d4565b5b81356116ad84826020860161161f565b91505092915050565b600080600080600080600080600080600060c08c8e0312156116db576116da6113ca565b5b60008c013567ffffffffffffffff8111156116f9576116f86113cf565b5b6117058e828f016113e3565b9b509b505060208c013567ffffffffffffffff811115611728576117276113cf565b5b6117348e828f016113e3565b995099505060408c013567ffffffffffffffff811115611757576117566113cf565b5b6117638e828f01611439565b975097505060608c013567ffffffffffffffff811115611786576117856113cf565b5b6117928e828f0161148f565b955095505060808c013567ffffffffffffffff8111156117b5576117b46113cf565b5b6117c18e828f016114e5565b935093505060a08c013567ffffffffffffffff8111156117e4576117e36113cf565b5b6117f08e828f01611688565b9150509295989b509295989b9093969950565b600060208284031215611819576118186113ca565b5b60006118278482850161160a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061185b82611830565b9050919050565b61186b81611850565b82525050565b60006020820190506118866000830184611862565b92915050565b6000819050919050565b60006118b16118ac6118a784611830565b61188c565b611830565b9050919050565b60006118c382611896565b9050919050565b60006118d5826118b8565b9050919050565b6118e5816118ca565b82525050565b600060208201905061190060008301846118dc565b92915050565b61190f81611850565b811461191a57600080fd5b50565b60008135905061192c81611906565b92915050565b600060208284031215611948576119476113ca565b5b60006119568482850161191d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506119a36000830185611396565b6119b06020830184611396565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f18261138c565b91506119fc8361138c565b925082821015611a0f57611a0e6119b7565b5b828203905092915050565b6000611a2582611850565b9050919050565b611a3581611a1a565b8114611a4057600080fd5b50565b600081359050611a5281611a2c565b92915050565b600060208284031215611a6e57611a6d6113ca565b5b6000611a7c84828501611a43565b91505092915050565b6000611a908261138c565b9150611a9b8361138c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ad057611acf6119b7565b5b828201905092915050565b6000611ae682611830565b9050919050565b611af681611adb565b8114611b0157600080fd5b50565b600081359050611b1381611aed565b92915050565b600060208284031215611b2f57611b2e6113ca565b5b6000611b3d84828501611b04565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611b7257611b71611b46565b5b80840192508235915067ffffffffffffffff821115611b9457611b93611b4b565b5b602083019250600182023603831315611bb057611baf611b50565b5b509250929050565b6000611bc38261138c565b9150611bce8361138c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c0757611c066119b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c4c8261138c565b9150611c578361138c565b925082611c6757611c66611c12565b5b828204905092915050565b6000611c7d826118b8565b9050919050565b611c8d81611c72565b82525050565b6000604082019050611ca86000830185611c84565b611cb56020830184611396565b9392505050565b6000611cc78261138c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cfa57611cf96119b7565b5b600182019050919050565b6000819050919050565b6000611d2a611d25611d2084611d05565b61188c565b61138c565b9050919050565b611d3a81611d0f565b82525050565b6000602082019050611d556000830184611d31565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dc8602683611d5b565b9150611dd382611d6c565b604082019050919050565b60006020820190508181036000830152611df781611dbb565b9050919050565b6000606082019050611e136000830186611862565b611e206020830185611862565b611e2d6040830184611396565b949350505050565b60008115159050919050565b611e4a81611e35565b8114611e5557600080fd5b50565b600081519050611e6781611e41565b92915050565b600060208284031215611e8357611e826113ca565b5b6000611e9184828501611e58565b91505092915050565b600081519050611ea9816115f3565b92915050565b600060208284031215611ec557611ec46113ca565b5b6000611ed384828501611e9a565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611f13611f0e611f0984611edc565b61188c565b61138c565b9050919050565b611f2381611ef8565b82525050565b6000604082019050611f3e6000830185611862565b611f4b6020830184611f1a565b9392505050565b600081905092915050565b82818337600083830152505050565b6000611f788385611f52565b9350611f85838584611f5d565b82840190509392505050565b6000611f9e828486611f6c565b91508190509392505050565b611fb381611e35565b82525050565b6000604082019050611fce6000830185611faa565b611fdb6020830184611396565b9392505050565b6000604082019050611ff76000830185611c84565b6120046020830184611c84565b9392505050565b60006040820190506120206000830185611862565b61202d6020830184611396565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061206a602083611d5b565b915061207582612034565b602082019050919050565b600060208201905081810360008301526120998161205d565b905091905056fea264697066735822122063d0dbee4619c9f11ba3f772102320ea2fbee16b97858046fa3e99ca34e3741164736f6c63430008080033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2310 CODESIZE SUB DUP1 PUSH3 0x2310 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1DB JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xA5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x19 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH3 0x20D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A3 DUP3 PUSH3 0x176 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B5 DUP2 PUSH3 0x196 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D5 DUP2 PUSH3 0x1AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F4 JUMPI PUSH3 0x1F3 PUSH3 0x171 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x204 DUP5 DUP3 DUP6 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x20D6 PUSH3 0x23A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x27B ADD MSTORE DUP2 DUP2 PUSH2 0x976 ADD MSTORE PUSH2 0xBC2 ADD MSTORE PUSH2 0x20D6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9D7C14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xF1 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x22F JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLVALUE DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x455 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x448 SWAP3 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x59B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x55F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x54A JUMPI PUSH2 0x549 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x55A PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAAC JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B2 JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73F JUMPI PUSH2 0x6CC DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAAC JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x7FD DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C7 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x2 SLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x99B PUSH32 0x0 DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xA17 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP3 DUP5 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0xA48 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAB7 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xADF DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x11B0 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2E PUSH2 0x1242 JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x0 PUSH2 0x12C0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP2 PUSH2 0x12C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF78 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEF SWAP3 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x103B JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x10CF SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x113B PUSH2 0xB97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP3 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1187 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EB SWAP3 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x124A PUSH2 0x1384 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1268 PUSH2 0xB97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139F DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1416 JUMPI PUSH2 0x1415 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1432 JUMPI PUSH2 0x1431 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x144F JUMPI PUSH2 0x144E PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C1 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1584 DUP3 PUSH2 0x153B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x154C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B6 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x157B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x154C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x138C JUMP JUMPDEST DUP2 EQ PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1619 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH2 0x162D DUP5 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x167E JUMPI DUP1 PUSH2 0x166A DUP9 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1657 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16DB JUMPI PUSH2 0x16DA PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1705 DUP15 DUP3 DUP16 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1734 DUP15 DUP3 DUP16 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH2 0x1756 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1763 DUP15 DUP3 DUP16 ADD PUSH2 0x1439 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1792 DUP15 DUP3 DUP16 ADD PUSH2 0x148F JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x17C1 DUP15 DUP3 DUP16 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x17F0 DUP15 DUP3 DUP16 ADD PUSH2 0x1688 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP5 DUP3 DUP6 ADD PUSH2 0x160A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185B DUP3 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186B DUP2 PUSH2 0x1850 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1886 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B1 PUSH2 0x18AC PUSH2 0x18A7 DUP5 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C3 DUP3 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D5 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x1850 JUMP JUMPDEST DUP2 EQ PUSH2 0x191A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x192C DUP2 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH2 0x1947 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP5 DUP3 DUP6 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x19B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F1 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x19FC DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A25 DUP3 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A52 DUP2 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP5 DUP3 DUP6 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9B DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x1ACF PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE6 DUP3 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B13 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3D DUP5 DUP3 DUP6 ADD PUSH2 0x1B04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1B46 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x1B4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x1B50 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC3 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCE DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1C06 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C57 DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x1C12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7D DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8D DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1CB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2A PUSH2 0x1D25 PUSH2 0x1D20 DUP5 PUSH2 0x1D05 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3A DUP2 PUSH2 0x1D0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 PUSH1 0x26 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF7 DUP2 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E13 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1E2D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E67 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E82 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E91 DUP5 DUP3 DUP6 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EA9 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F13 PUSH2 0x1F0E PUSH2 0x1F09 DUP5 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F23 DUP2 PUSH2 0x1EF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1F4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F78 DUP4 DUP6 PUSH2 0x1F52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F85 DUP4 DUP6 DUP5 PUSH2 0x1F5D JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E DUP3 DUP5 DUP7 PUSH2 0x1F6C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH2 0x1E35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1FDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FF7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2020 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x202D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206A PUSH1 0x20 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 DUP3 PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2099 DUP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xD0DBEE46 NOT 0xC9 CALL SHL LOG3 0xF7 PUSH19 0x102320EA2FBEE16B97858046FA3E99CA34E374 GT PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"416:8270:4:-:0;;;1480:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1530:5:4;1517:19;;;;;;;;;;;;1564:2;1546:15;:20;;;;1582:1;1576:3;:7;;;;1480:110;416:8270;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;416:8270:4:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_1001":{"entryPoint":3008,"id":1001,"parameterSlots":0,"returnSlots":0},"@_1091":{"entryPoint":null,"id":1091,"parameterSlots":0,"returnSlots":0},"@_1095":{"entryPoint":null,"id":1095,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":4674,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_202":{"entryPoint":4996,"id":202,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":4800,"id":111,"parameterSlots":1,"returnSlots":0},"@depositToken_1057":{"entryPoint":3265,"id":1057,"parameterSlots":2,"returnSlots":0},"@fee_1005":{"entryPoint":3044,"id":1005,"parameterSlots":0,"returnSlots":0},"@fillQuote_1246":{"entryPoint":3514,"id":1246,"parameterSlots":6,"returnSlots":1},"@maxTransactions_1003":{"entryPoint":493,"id":1003,"parameterSlots":0,"returnSlots":0},"@multiSwap_1576":{"entryPoint":499,"id":1576,"parameterSlots":11,"returnSlots":0},"@owner_40":{"entryPoint":2967,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2854,"id":68,"parameterSlots":0,"returnSlots":0},"@setDestination_1139":{"entryPoint":3182,"id":1139,"parameterSlots":0,"returnSlots":1},"@setMaxTransactionLimit_1087":{"entryPoint":2892,"id":1087,"parameterSlots":1,"returnSlots":0},"@setfee_1070":{"entryPoint":2874,"id":1070,"parameterSlots":1,"returnSlots":0},"@transferEth_1156":{"entryPoint":3190,"id":1156,"parameterSlots":2,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3050,"id":91,"parameterSlots":1,"returnSlots":0},"@withdrawFee_1130":{"entryPoint":4375,"id":1130,"parameterSlots":2,"returnSlots":0},"@withdrawToken_1112":{"entryPoint":4528,"id":1112,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5663,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":6916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":5177,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr":{"entryPoint":5263,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5349,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr":{"entryPoint":5091,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$190":{"entryPoint":6723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":6937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5814,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$190":{"entryPoint":6744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8106,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8044,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack":{"entryPoint":7300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IWETH_$937_to_t_address_fromStack":{"entryPoint":6364,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":7473,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":7611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint128_to_t_uint256_fromStack":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5014,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8081,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7678,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7977,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8203,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":8121,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed":{"entryPoint":8162,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7315,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IWETH_$937__to_t_address__fromStack_reversed":{"entryPoint":6379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":7488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6542,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":6997,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":5548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5056,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5575,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8018,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7515,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6789,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7233,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7096,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6630,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6224,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":6875,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7733,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$190":{"entryPoint":6682,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":7429,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint128":{"entryPoint":7900,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6192,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5004,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$190_to_t_address":{"entryPoint":7282,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IWETH_$937_to_t_address":{"entryPoint":6346,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":7439,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint128_to_t_uint256":{"entryPoint":7928,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6328,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6294,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8029,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5499,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6284,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7356,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6583,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7186,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6495,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5452,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5081,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5076,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":6987,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":6982,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5086,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":6992,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5071,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5066,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5435,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":7532,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8244,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6406,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":6893,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7745,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$190":{"entryPoint":6700,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5619,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23850:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:5","statements":[{"nodeType":"YulAssignment","src":"62:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:77:5"},{"body":{"nodeType":"YulBlock","src":"155:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:5"},"nodeType":"YulFunctionCall","src":"177:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:5"},"nodeType":"YulFunctionCall","src":"165:37:5"},"nodeType":"YulExpressionStatement","src":"165:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:5","type":""}],"src":"90:118:5"},{"body":{"nodeType":"YulBlock","src":"312:124:5","statements":[{"nodeType":"YulAssignment","src":"322:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:5"},"nodeType":"YulFunctionCall","src":"330:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:5"},"nodeType":"YulFunctionCall","src":"411:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:5"},"nodeType":"YulFunctionCall","src":"358:71:5"},"nodeType":"YulExpressionStatement","src":"358:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:5","type":""}],"src":"214:222:5"},{"body":{"nodeType":"YulBlock","src":"482:35:5","statements":[{"nodeType":"YulAssignment","src":"492:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:5"},"nodeType":"YulFunctionCall","src":"502:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:5","type":""}],"src":"442:75:5"},{"body":{"nodeType":"YulBlock","src":"612:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:5"},"nodeType":"YulFunctionCall","src":"622:12:5"},"nodeType":"YulExpressionStatement","src":"622:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:5"},{"body":{"nodeType":"YulBlock","src":"735:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:5"},"nodeType":"YulFunctionCall","src":"745:12:5"},"nodeType":"YulExpressionStatement","src":"745:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:5"},{"body":{"nodeType":"YulBlock","src":"858:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:5"},"nodeType":"YulFunctionCall","src":"868:12:5"},"nodeType":"YulExpressionStatement","src":"868:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:5"},{"body":{"nodeType":"YulBlock","src":"981:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:5"},"nodeType":"YulFunctionCall","src":"991:12:5"},"nodeType":"YulExpressionStatement","src":"991:12:5"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"892:117:5"},{"body":{"nodeType":"YulBlock","src":"1104:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1114:6:5"},"nodeType":"YulFunctionCall","src":"1114:12:5"},"nodeType":"YulExpressionStatement","src":"1114:12:5"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1015:117:5"},{"body":{"nodeType":"YulBlock","src":"1267:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"1316:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1318:77:5"},"nodeType":"YulFunctionCall","src":"1318:79:5"},"nodeType":"YulExpressionStatement","src":"1318:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1295:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1303:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1291:3:5"},"nodeType":"YulFunctionCall","src":"1291:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"1310:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1287:3:5"},"nodeType":"YulFunctionCall","src":"1287:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1280:6:5"},"nodeType":"YulFunctionCall","src":"1280:35:5"},"nodeType":"YulIf","src":"1277:122:5"},{"nodeType":"YulAssignment","src":"1408:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1431:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1418:12:5"},"nodeType":"YulFunctionCall","src":"1418:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1408:6:5"}]},{"body":{"nodeType":"YulBlock","src":"1481:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1483:77:5"},"nodeType":"YulFunctionCall","src":"1483:79:5"},"nodeType":"YulExpressionStatement","src":"1483:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1453:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1461:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1450:2:5"},"nodeType":"YulFunctionCall","src":"1450:30:5"},"nodeType":"YulIf","src":"1447:117:5"},{"nodeType":"YulAssignment","src":"1573:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1589:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:5"},"nodeType":"YulFunctionCall","src":"1585:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1573:8:5"}]},{"body":{"nodeType":"YulBlock","src":"1656:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1658:77:5"},"nodeType":"YulFunctionCall","src":"1658:79:5"},"nodeType":"YulExpressionStatement","src":"1658:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1621:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1635:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1643:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1631:3:5"},"nodeType":"YulFunctionCall","src":"1631:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1617:3:5"},"nodeType":"YulFunctionCall","src":"1617:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"1651:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1614:2:5"},"nodeType":"YulFunctionCall","src":"1614:41:5"},"nodeType":"YulIf","src":"1611:128:5"}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1234:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1242:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1250:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1260:6:5","type":""}],"src":"1163:582:5"},{"body":{"nodeType":"YulBlock","src":"1858:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"1907:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1909:77:5"},"nodeType":"YulFunctionCall","src":"1909:79:5"},"nodeType":"YulExpressionStatement","src":"1909:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1886:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1894:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1882:3:5"},"nodeType":"YulFunctionCall","src":"1882:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"1901:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1878:3:5"},"nodeType":"YulFunctionCall","src":"1878:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1871:6:5"},"nodeType":"YulFunctionCall","src":"1871:35:5"},"nodeType":"YulIf","src":"1868:122:5"},{"nodeType":"YulAssignment","src":"1999:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2022:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2009:12:5"},"nodeType":"YulFunctionCall","src":"2009:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1999:6:5"}]},{"body":{"nodeType":"YulBlock","src":"2072:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2074:77:5"},"nodeType":"YulFunctionCall","src":"2074:79:5"},"nodeType":"YulExpressionStatement","src":"2074:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2044:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2052:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2041:2:5"},"nodeType":"YulFunctionCall","src":"2041:30:5"},"nodeType":"YulIf","src":"2038:117:5"},{"nodeType":"YulAssignment","src":"2164:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2180:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:5"},"nodeType":"YulFunctionCall","src":"2176:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2164:8:5"}]},{"body":{"nodeType":"YulBlock","src":"2247:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2249:77:5"},"nodeType":"YulFunctionCall","src":"2249:79:5"},"nodeType":"YulExpressionStatement","src":"2249:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2212:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2226:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2234:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2222:3:5"},"nodeType":"YulFunctionCall","src":"2222:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:5"},"nodeType":"YulFunctionCall","src":"2208:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"2242:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2205:2:5"},"nodeType":"YulFunctionCall","src":"2205:41:5"},"nodeType":"YulIf","src":"2202:128:5"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1825:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1833:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1841:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1851:6:5","type":""}],"src":"1768:568:5"},{"body":{"nodeType":"YulBlock","src":"2465:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"2514:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2516:77:5"},"nodeType":"YulFunctionCall","src":"2516:79:5"},"nodeType":"YulExpressionStatement","src":"2516:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2493:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2501:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2489:3:5"},"nodeType":"YulFunctionCall","src":"2489:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2508:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2485:3:5"},"nodeType":"YulFunctionCall","src":"2485:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2478:6:5"},"nodeType":"YulFunctionCall","src":"2478:35:5"},"nodeType":"YulIf","src":"2475:122:5"},{"nodeType":"YulAssignment","src":"2606:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2629:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2616:12:5"},"nodeType":"YulFunctionCall","src":"2616:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:5"}]},{"body":{"nodeType":"YulBlock","src":"2679:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2681:77:5"},"nodeType":"YulFunctionCall","src":"2681:79:5"},"nodeType":"YulExpressionStatement","src":"2681:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2651:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2659:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2648:2:5"},"nodeType":"YulFunctionCall","src":"2648:30:5"},"nodeType":"YulIf","src":"2645:117:5"},{"nodeType":"YulAssignment","src":"2771:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2787:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2795:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:5"},"nodeType":"YulFunctionCall","src":"2783:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2771:8:5"}]},{"body":{"nodeType":"YulBlock","src":"2854:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2856:77:5"},"nodeType":"YulFunctionCall","src":"2856:79:5"},"nodeType":"YulExpressionStatement","src":"2856:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2819:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2833:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2841:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2829:3:5"},"nodeType":"YulFunctionCall","src":"2829:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:5"},"nodeType":"YulFunctionCall","src":"2815:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"2849:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2812:2:5"},"nodeType":"YulFunctionCall","src":"2812:41:5"},"nodeType":"YulIf","src":"2809:128:5"}]},"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2432:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2440:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2448:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"2458:6:5","type":""}],"src":"2367:576:5"},{"body":{"nodeType":"YulBlock","src":"3065:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"3114:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3116:77:5"},"nodeType":"YulFunctionCall","src":"3116:79:5"},"nodeType":"YulExpressionStatement","src":"3116:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3093:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3101:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:5"},"nodeType":"YulFunctionCall","src":"3089:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"3108:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3085:3:5"},"nodeType":"YulFunctionCall","src":"3085:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3078:6:5"},"nodeType":"YulFunctionCall","src":"3078:35:5"},"nodeType":"YulIf","src":"3075:122:5"},{"nodeType":"YulAssignment","src":"3206:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3229:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3216:12:5"},"nodeType":"YulFunctionCall","src":"3216:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3206:6:5"}]},{"body":{"nodeType":"YulBlock","src":"3279:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3281:77:5"},"nodeType":"YulFunctionCall","src":"3281:79:5"},"nodeType":"YulExpressionStatement","src":"3281:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3251:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3259:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3248:2:5"},"nodeType":"YulFunctionCall","src":"3248:30:5"},"nodeType":"YulIf","src":"3245:117:5"},{"nodeType":"YulAssignment","src":"3371:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3387:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3395:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3383:3:5"},"nodeType":"YulFunctionCall","src":"3383:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3371:8:5"}]},{"body":{"nodeType":"YulBlock","src":"3454:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3456:77:5"},"nodeType":"YulFunctionCall","src":"3456:79:5"},"nodeType":"YulExpressionStatement","src":"3456:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3419:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3433:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3441:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3429:3:5"},"nodeType":"YulFunctionCall","src":"3429:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:5"},"nodeType":"YulFunctionCall","src":"3415:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"3449:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3412:2:5"},"nodeType":"YulFunctionCall","src":"3412:41:5"},"nodeType":"YulIf","src":"3409:128:5"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3032:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"3040:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3048:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3058:6:5","type":""}],"src":"2964:579:5"},{"body":{"nodeType":"YulBlock","src":"3597:54:5","statements":[{"nodeType":"YulAssignment","src":"3607:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3625:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3632:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:5"},"nodeType":"YulFunctionCall","src":"3621:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3641:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3637:3:5"},"nodeType":"YulFunctionCall","src":"3637:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:5"},"nodeType":"YulFunctionCall","src":"3617:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3607:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3580:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3590:6:5","type":""}],"src":"3549:102:5"},{"body":{"nodeType":"YulBlock","src":"3685:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3702:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3705:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3695:6:5"},"nodeType":"YulFunctionCall","src":"3695:88:5"},"nodeType":"YulExpressionStatement","src":"3695:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3799:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3792:6:5"},"nodeType":"YulFunctionCall","src":"3792:15:5"},"nodeType":"YulExpressionStatement","src":"3792:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3823:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3826:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3816:6:5"},"nodeType":"YulFunctionCall","src":"3816:15:5"},"nodeType":"YulExpressionStatement","src":"3816:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3657:180:5"},{"body":{"nodeType":"YulBlock","src":"3886:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3896:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3918:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3948:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3926:21:5"},"nodeType":"YulFunctionCall","src":"3926:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:5"},"nodeType":"YulFunctionCall","src":"3914:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3900:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"4065:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4067:16:5"},"nodeType":"YulFunctionCall","src":"4067:18:5"},"nodeType":"YulExpressionStatement","src":"4067:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4008:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"4020:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4005:2:5"},"nodeType":"YulFunctionCall","src":"4005:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4044:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4056:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4041:2:5"},"nodeType":"YulFunctionCall","src":"4041:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4002:2:5"},"nodeType":"YulFunctionCall","src":"4002:62:5"},"nodeType":"YulIf","src":"3999:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4103:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4107:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:5"},"nodeType":"YulFunctionCall","src":"4096:22:5"},"nodeType":"YulExpressionStatement","src":"4096:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3872:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"3880:4:5","type":""}],"src":"3843:281:5"},{"body":{"nodeType":"YulBlock","src":"4171:88:5","statements":[{"nodeType":"YulAssignment","src":"4181:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4191:18:5"},"nodeType":"YulFunctionCall","src":"4191:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4181:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4240:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"4248:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4220:19:5"},"nodeType":"YulFunctionCall","src":"4220:33:5"},"nodeType":"YulExpressionStatement","src":"4220:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4155:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4164:6:5","type":""}],"src":"4130:129:5"},{"body":{"nodeType":"YulBlock","src":"4347:229:5","statements":[{"body":{"nodeType":"YulBlock","src":"4452:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4454:16:5"},"nodeType":"YulFunctionCall","src":"4454:18:5"},"nodeType":"YulExpressionStatement","src":"4454:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4424:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4432:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4421:2:5"},"nodeType":"YulFunctionCall","src":"4421:30:5"},"nodeType":"YulIf","src":"4418:56:5"},{"nodeType":"YulAssignment","src":"4484:25:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4496:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4504:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4492:3:5"},"nodeType":"YulFunctionCall","src":"4492:17:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4484:4:5"}]},{"nodeType":"YulAssignment","src":"4546:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4558:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"4564:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:5"},"nodeType":"YulFunctionCall","src":"4554:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4546:4:5"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4331:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4342:4:5","type":""}],"src":"4265:311:5"},{"body":{"nodeType":"YulBlock","src":"4625:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"4682:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4691:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4694:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4684:6:5"},"nodeType":"YulFunctionCall","src":"4684:12:5"},"nodeType":"YulExpressionStatement","src":"4684:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4648:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4673:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4655:17:5"},"nodeType":"YulFunctionCall","src":"4655:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4645:2:5"},"nodeType":"YulFunctionCall","src":"4645:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4638:6:5"},"nodeType":"YulFunctionCall","src":"4638:43:5"},"nodeType":"YulIf","src":"4635:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4618:5:5","type":""}],"src":"4582:122:5"},{"body":{"nodeType":"YulBlock","src":"4762:87:5","statements":[{"nodeType":"YulAssignment","src":"4772:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4794:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4781:12:5"},"nodeType":"YulFunctionCall","src":"4781:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4772:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4837:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4810:26:5"},"nodeType":"YulFunctionCall","src":"4810:33:5"},"nodeType":"YulExpressionStatement","src":"4810:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4740:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4748:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4756:5:5","type":""}],"src":"4710:139:5"},{"body":{"nodeType":"YulBlock","src":"4974:608:5","statements":[{"nodeType":"YulAssignment","src":"4984:90:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5066:6:5"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5009:56:5"},"nodeType":"YulFunctionCall","src":"5009:64:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4993:15:5"},"nodeType":"YulFunctionCall","src":"4993:81:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4984:5:5"}]},{"nodeType":"YulVariableDeclaration","src":"5083:16:5","value":{"name":"array","nodeType":"YulIdentifier","src":"5094:5:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5087:3:5","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5116:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"5123:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5109:6:5"},"nodeType":"YulFunctionCall","src":"5109:21:5"},"nodeType":"YulExpressionStatement","src":"5109:21:5"},{"nodeType":"YulAssignment","src":"5139:23:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5150:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5157:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:5"},"nodeType":"YulFunctionCall","src":"5146:16:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5139:3:5"}]},{"nodeType":"YulVariableDeclaration","src":"5172:44:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5190:6:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5202:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5210:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5198:3:5"},"nodeType":"YulFunctionCall","src":"5198:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5186:3:5"},"nodeType":"YulFunctionCall","src":"5186:30:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5176:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"5244:103:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5258:77:5"},"nodeType":"YulFunctionCall","src":"5258:79:5"},"nodeType":"YulExpressionStatement","src":"5258:79:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5231:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5239:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5228:2:5"},"nodeType":"YulFunctionCall","src":"5228:15:5"},"nodeType":"YulIf","src":"5225:122:5"},{"body":{"nodeType":"YulBlock","src":"5432:144:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:21:5","value":{"name":"src","nodeType":"YulIdentifier","src":"5465:3:5"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5451:10:5","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5489:3:5"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5515:10:5"},{"name":"end","nodeType":"YulIdentifier","src":"5527:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5494:20:5"},"nodeType":"YulFunctionCall","src":"5494:37:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5482:6:5"},"nodeType":"YulFunctionCall","src":"5482:50:5"},"nodeType":"YulExpressionStatement","src":"5482:50:5"},{"nodeType":"YulAssignment","src":"5545:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5556:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5561:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:5"},"nodeType":"YulFunctionCall","src":"5552:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5545:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5385:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5390:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5382:2:5"},"nodeType":"YulFunctionCall","src":"5382:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5398:25:5","statements":[{"nodeType":"YulAssignment","src":"5400:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5411:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5416:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:5"},"nodeType":"YulFunctionCall","src":"5407:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5400:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"5360:21:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5362:17:5","value":{"name":"offset","nodeType":"YulIdentifier","src":"5373:6:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5366:3:5","type":""}]}]},"src":"5356:220:5"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4944:6:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4952:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4960:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4968:5:5","type":""}],"src":"4872:710:5"},{"body":{"nodeType":"YulBlock","src":"5682:293:5","statements":[{"body":{"nodeType":"YulBlock","src":"5731:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5733:77:5"},"nodeType":"YulFunctionCall","src":"5733:79:5"},"nodeType":"YulExpressionStatement","src":"5733:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5710:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5718:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5706:3:5"},"nodeType":"YulFunctionCall","src":"5706:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"5725:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5702:3:5"},"nodeType":"YulFunctionCall","src":"5702:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5695:6:5"},"nodeType":"YulFunctionCall","src":"5695:35:5"},"nodeType":"YulIf","src":"5692:122:5"},{"nodeType":"YulVariableDeclaration","src":"5823:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5850:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5837:12:5"},"nodeType":"YulFunctionCall","src":"5837:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5827:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5866:103:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5942:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5938:3:5"},"nodeType":"YulFunctionCall","src":"5938:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"5957:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5965:3:5"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5875:62:5"},"nodeType":"YulFunctionCall","src":"5875:94:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5866:5:5"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5660:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"5668:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5676:5:5","type":""}],"src":"5605:370:5"},{"body":{"nodeType":"YulBlock","src":"6380:2114:5","statements":[{"body":{"nodeType":"YulBlock","src":"6427:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6429:77:5"},"nodeType":"YulFunctionCall","src":"6429:79:5"},"nodeType":"YulExpressionStatement","src":"6429:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6401:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6397:3:5"},"nodeType":"YulFunctionCall","src":"6397:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"6422:3:5","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6393:3:5"},"nodeType":"YulFunctionCall","src":"6393:33:5"},"nodeType":"YulIf","src":"6390:120:5"},{"nodeType":"YulBlock","src":"6520:326:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6535:45:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6566:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6577:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6562:3:5"},"nodeType":"YulFunctionCall","src":"6562:17:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6549:12:5"},"nodeType":"YulFunctionCall","src":"6549:31:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6539:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6627:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6629:77:5"},"nodeType":"YulFunctionCall","src":"6629:79:5"},"nodeType":"YulExpressionStatement","src":"6629:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6599:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6607:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6596:2:5"},"nodeType":"YulFunctionCall","src":"6596:30:5"},"nodeType":"YulIf","src":"6593:117:5"},{"nodeType":"YulAssignment","src":"6724:112:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6808:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6819:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6804:3:5"},"nodeType":"YulFunctionCall","src":"6804:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6828:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"6742:61:5"},"nodeType":"YulFunctionCall","src":"6742:94:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6724:6:5"},{"name":"value1","nodeType":"YulIdentifier","src":"6732:6:5"}]}]},{"nodeType":"YulBlock","src":"6856:327:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6871:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6913:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:5"},"nodeType":"YulFunctionCall","src":"6898:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6885:12:5"},"nodeType":"YulFunctionCall","src":"6885:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6875:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6964:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6966:77:5"},"nodeType":"YulFunctionCall","src":"6966:79:5"},"nodeType":"YulExpressionStatement","src":"6966:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6936:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6944:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6933:2:5"},"nodeType":"YulFunctionCall","src":"6933:30:5"},"nodeType":"YulIf","src":"6930:117:5"},{"nodeType":"YulAssignment","src":"7061:112:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7145:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7156:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:5"},"nodeType":"YulFunctionCall","src":"7141:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7165:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7079:61:5"},"nodeType":"YulFunctionCall","src":"7079:94:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7061:6:5"},{"name":"value3","nodeType":"YulIdentifier","src":"7069:6:5"}]}]},{"nodeType":"YulBlock","src":"7193:313:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7208:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7239:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7250:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7235:3:5"},"nodeType":"YulFunctionCall","src":"7235:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7222:12:5"},"nodeType":"YulFunctionCall","src":"7222:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7212:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7301:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7303:77:5"},"nodeType":"YulFunctionCall","src":"7303:79:5"},"nodeType":"YulExpressionStatement","src":"7303:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7273:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7281:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7270:2:5"},"nodeType":"YulFunctionCall","src":"7270:30:5"},"nodeType":"YulIf","src":"7267:117:5"},{"nodeType":"YulAssignment","src":"7398:98:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7479:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:5"},"nodeType":"YulFunctionCall","src":"7464:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7488:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7416:47:5"},"nodeType":"YulFunctionCall","src":"7416:80:5"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7398:6:5"},{"name":"value5","nodeType":"YulIdentifier","src":"7406:6:5"}]}]},{"nodeType":"YulBlock","src":"7516:321:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7531:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7562:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7573:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7558:3:5"},"nodeType":"YulFunctionCall","src":"7558:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7545:12:5"},"nodeType":"YulFunctionCall","src":"7545:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7535:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7624:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7626:77:5"},"nodeType":"YulFunctionCall","src":"7626:79:5"},"nodeType":"YulExpressionStatement","src":"7626:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7596:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7604:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7593:2:5"},"nodeType":"YulFunctionCall","src":"7593:30:5"},"nodeType":"YulIf","src":"7590:117:5"},{"nodeType":"YulAssignment","src":"7721:106:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7799:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7810:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7795:3:5"},"nodeType":"YulFunctionCall","src":"7795:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7819:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7739:55:5"},"nodeType":"YulFunctionCall","src":"7739:88:5"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7721:6:5"},{"name":"value7","nodeType":"YulIdentifier","src":"7729:6:5"}]}]},{"nodeType":"YulBlock","src":"7847:325:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7862:47:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7904:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:5"},"nodeType":"YulFunctionCall","src":"7889:19:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7876:12:5"},"nodeType":"YulFunctionCall","src":"7876:33:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7866:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7956:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7958:77:5"},"nodeType":"YulFunctionCall","src":"7958:79:5"},"nodeType":"YulExpressionStatement","src":"7958:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7928:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"7936:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7925:2:5"},"nodeType":"YulFunctionCall","src":"7925:30:5"},"nodeType":"YulIf","src":"7922:117:5"},{"nodeType":"YulAssignment","src":"8053:109:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8134:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8145:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8130:3:5"},"nodeType":"YulFunctionCall","src":"8130:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8154:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8071:58:5"},"nodeType":"YulFunctionCall","src":"8071:91:5"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"8053:6:5"},{"name":"value9","nodeType":"YulIdentifier","src":"8061:6:5"}]}]},{"nodeType":"YulBlock","src":"8182:305:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8197:47:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8239:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:5"},"nodeType":"YulFunctionCall","src":"8224:19:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8211:12:5"},"nodeType":"YulFunctionCall","src":"8211:33:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8201:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8291:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8293:77:5"},"nodeType":"YulFunctionCall","src":"8293:79:5"},"nodeType":"YulExpressionStatement","src":"8293:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8271:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8260:2:5"},"nodeType":"YulFunctionCall","src":"8260:30:5"},"nodeType":"YulIf","src":"8257:117:5"},{"nodeType":"YulAssignment","src":"8388:89:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8449:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8460:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:5"},"nodeType":"YulFunctionCall","src":"8445:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8469:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8399:45:5"},"nodeType":"YulFunctionCall","src":"8399:78:5"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"8388:7:5"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6269:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6280:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6292:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6300:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6308:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6316:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6324:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6332:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6340:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6348:6:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"6356:6:5","type":""},{"name":"value9","nodeType":"YulTypedName","src":"6364:6:5","type":""},{"name":"value10","nodeType":"YulTypedName","src":"6372:7:5","type":""}],"src":"5981:2513:5"},{"body":{"nodeType":"YulBlock","src":"8566:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"8612:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8614:77:5"},"nodeType":"YulFunctionCall","src":"8614:79:5"},"nodeType":"YulExpressionStatement","src":"8614:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8587:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8583:3:5"},"nodeType":"YulFunctionCall","src":"8583:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"8608:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8579:3:5"},"nodeType":"YulFunctionCall","src":"8579:32:5"},"nodeType":"YulIf","src":"8576:119:5"},{"nodeType":"YulBlock","src":"8705:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8720:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8734:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8724:6:5","type":""}]},{"nodeType":"YulAssignment","src":"8749:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8795:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:5"},"nodeType":"YulFunctionCall","src":"8780:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8804:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8759:20:5"},"nodeType":"YulFunctionCall","src":"8759:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8749:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8536:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8547:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8559:6:5","type":""}],"src":"8500:329:5"},{"body":{"nodeType":"YulBlock","src":"8880:81:5","statements":[{"nodeType":"YulAssignment","src":"8890:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8905:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8912:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8901:3:5"},"nodeType":"YulFunctionCall","src":"8901:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8890:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8872:7:5","type":""}],"src":"8835:126:5"},{"body":{"nodeType":"YulBlock","src":"9012:51:5","statements":[{"nodeType":"YulAssignment","src":"9022:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9051:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9033:17:5"},"nodeType":"YulFunctionCall","src":"9033:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9022:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8994:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9004:7:5","type":""}],"src":"8967:96:5"},{"body":{"nodeType":"YulBlock","src":"9134:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9151:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9174:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9156:17:5"},"nodeType":"YulFunctionCall","src":"9156:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9144:6:5"},"nodeType":"YulFunctionCall","src":"9144:37:5"},"nodeType":"YulExpressionStatement","src":"9144:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9122:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9129:3:5","type":""}],"src":"9069:118:5"},{"body":{"nodeType":"YulBlock","src":"9291:124:5","statements":[{"nodeType":"YulAssignment","src":"9301:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9313:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9324:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:5"},"nodeType":"YulFunctionCall","src":"9309:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9301:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9381:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9394:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9405:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9390:3:5"},"nodeType":"YulFunctionCall","src":"9390:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9337:43:5"},"nodeType":"YulFunctionCall","src":"9337:71:5"},"nodeType":"YulExpressionStatement","src":"9337:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9263:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9275:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9286:4:5","type":""}],"src":"9193:222:5"},{"body":{"nodeType":"YulBlock","src":"9453:28:5","statements":[{"nodeType":"YulAssignment","src":"9463:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"9470:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9463:3:5"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9439:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9449:3:5","type":""}],"src":"9421:60:5"},{"body":{"nodeType":"YulBlock","src":"9547:82:5","statements":[{"nodeType":"YulAssignment","src":"9557:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9615:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9597:17:5"},"nodeType":"YulFunctionCall","src":"9597:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9588:8:5"},"nodeType":"YulFunctionCall","src":"9588:34:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9570:17:5"},"nodeType":"YulFunctionCall","src":"9570:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9557:9:5"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9527:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9537:9:5","type":""}],"src":"9487:142:5"},{"body":{"nodeType":"YulBlock","src":"9695:66:5","statements":[{"nodeType":"YulAssignment","src":"9705:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9749:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9718:30:5"},"nodeType":"YulFunctionCall","src":"9718:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9705:9:5"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9675:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9685:9:5","type":""}],"src":"9635:126:5"},{"body":{"nodeType":"YulBlock","src":"9840:66:5","statements":[{"nodeType":"YulAssignment","src":"9850:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9894:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9863:30:5"},"nodeType":"YulFunctionCall","src":"9863:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9850:9:5"}]}]},"name":"convert_t_contract$_IWETH_$937_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9830:9:5","type":""}],"src":"9767:139:5"},{"body":{"nodeType":"YulBlock","src":"9990:79:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10007:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10056:5:5"}],"functionName":{"name":"convert_t_contract$_IWETH_$937_to_t_address","nodeType":"YulIdentifier","src":"10012:43:5"},"nodeType":"YulFunctionCall","src":"10012:50:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10000:6:5"},"nodeType":"YulFunctionCall","src":"10000:63:5"},"nodeType":"YulExpressionStatement","src":"10000:63:5"}]},"name":"abi_encode_t_contract$_IWETH_$937_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9978:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9985:3:5","type":""}],"src":"9912:157:5"},{"body":{"nodeType":"YulBlock","src":"10186:137:5","statements":[{"nodeType":"YulAssignment","src":"10196:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10208:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10219:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10204:3:5"},"nodeType":"YulFunctionCall","src":"10204:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10196:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10289:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10313:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:5"},"nodeType":"YulFunctionCall","src":"10298:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IWETH_$937_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10232:56:5"},"nodeType":"YulFunctionCall","src":"10232:84:5"},"nodeType":"YulExpressionStatement","src":"10232:84:5"}]},"name":"abi_encode_tuple_t_contract$_IWETH_$937__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10158:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10170:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10181:4:5","type":""}],"src":"10075:248:5"},{"body":{"nodeType":"YulBlock","src":"10372:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:5"},"nodeType":"YulFunctionCall","src":"10431:12:5"},"nodeType":"YulExpressionStatement","src":"10431:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10395:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10402:17:5"},"nodeType":"YulFunctionCall","src":"10402:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10392:2:5"},"nodeType":"YulFunctionCall","src":"10392:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10385:6:5"},"nodeType":"YulFunctionCall","src":"10385:43:5"},"nodeType":"YulIf","src":"10382:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10365:5:5","type":""}],"src":"10329:122:5"},{"body":{"nodeType":"YulBlock","src":"10509:87:5","statements":[{"nodeType":"YulAssignment","src":"10519:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10541:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10528:12:5"},"nodeType":"YulFunctionCall","src":"10528:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10519:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10584:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10557:26:5"},"nodeType":"YulFunctionCall","src":"10557:33:5"},"nodeType":"YulExpressionStatement","src":"10557:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10487:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"10495:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10503:5:5","type":""}],"src":"10457:139:5"},{"body":{"nodeType":"YulBlock","src":"10668:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"10714:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10716:77:5"},"nodeType":"YulFunctionCall","src":"10716:79:5"},"nodeType":"YulExpressionStatement","src":"10716:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10689:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"10698:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10685:3:5"},"nodeType":"YulFunctionCall","src":"10685:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"10710:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10681:3:5"},"nodeType":"YulFunctionCall","src":"10681:32:5"},"nodeType":"YulIf","src":"10678:119:5"},{"nodeType":"YulBlock","src":"10807:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10822:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10836:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10826:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10851:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10897:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:5"},"nodeType":"YulFunctionCall","src":"10882:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10906:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10861:20:5"},"nodeType":"YulFunctionCall","src":"10861:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:5"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10638:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10649:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10661:6:5","type":""}],"src":"10602:329:5"},{"body":{"nodeType":"YulBlock","src":"10965:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10982:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10985:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10975:6:5"},"nodeType":"YulFunctionCall","src":"10975:88:5"},"nodeType":"YulExpressionStatement","src":"10975:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11079:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11082:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11072:6:5"},"nodeType":"YulFunctionCall","src":"11072:15:5"},"nodeType":"YulExpressionStatement","src":"11072:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11103:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11106:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11096:6:5"},"nodeType":"YulFunctionCall","src":"11096:15:5"},"nodeType":"YulExpressionStatement","src":"11096:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10937:180:5"},{"body":{"nodeType":"YulBlock","src":"11249:206:5","statements":[{"nodeType":"YulAssignment","src":"11259:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11271:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11282:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:5"},"nodeType":"YulFunctionCall","src":"11267:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11259:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11339:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11363:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:5"},"nodeType":"YulFunctionCall","src":"11348:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11295:43:5"},"nodeType":"YulFunctionCall","src":"11295:71:5"},"nodeType":"YulExpressionStatement","src":"11295:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11420:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11433:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11444:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11429:3:5"},"nodeType":"YulFunctionCall","src":"11429:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11376:43:5"},"nodeType":"YulFunctionCall","src":"11376:72:5"},"nodeType":"YulExpressionStatement","src":"11376:72:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11213:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11225:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11233:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11244:4:5","type":""}],"src":"11123:332:5"},{"body":{"nodeType":"YulBlock","src":"11489:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11506:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11509:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11499:6:5"},"nodeType":"YulFunctionCall","src":"11499:88:5"},"nodeType":"YulExpressionStatement","src":"11499:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11603:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11606:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:5"},"nodeType":"YulFunctionCall","src":"11596:15:5"},"nodeType":"YulExpressionStatement","src":"11596:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11627:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11630:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11620:6:5"},"nodeType":"YulFunctionCall","src":"11620:15:5"},"nodeType":"YulExpressionStatement","src":"11620:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11461:180:5"},{"body":{"nodeType":"YulBlock","src":"11692:146:5","statements":[{"nodeType":"YulAssignment","src":"11702:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11725:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11707:17:5"},"nodeType":"YulFunctionCall","src":"11707:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11702:1:5"}]},{"nodeType":"YulAssignment","src":"11736:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11759:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11741:17:5"},"nodeType":"YulFunctionCall","src":"11741:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11736:1:5"}]},{"body":{"nodeType":"YulBlock","src":"11783:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11785:16:5"},"nodeType":"YulFunctionCall","src":"11785:18:5"},"nodeType":"YulExpressionStatement","src":"11785:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11777:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"11780:1:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11774:2:5"},"nodeType":"YulFunctionCall","src":"11774:8:5"},"nodeType":"YulIf","src":"11771:34:5"},{"nodeType":"YulAssignment","src":"11815:17:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11827:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"11830:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11823:3:5"},"nodeType":"YulFunctionCall","src":"11823:9:5"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11815:4:5"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11678:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"11681:1:5","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11687:4:5","type":""}],"src":"11647:191:5"},{"body":{"nodeType":"YulBlock","src":"11903:51:5","statements":[{"nodeType":"YulAssignment","src":"11913:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11942:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11924:17:5"},"nodeType":"YulFunctionCall","src":"11924:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11913:7:5"}]}]},"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11885:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11895:7:5","type":""}],"src":"11844:110:5"},{"body":{"nodeType":"YulBlock","src":"12017:93:5","statements":[{"body":{"nodeType":"YulBlock","src":"12088:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12097:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12100:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12090:6:5"},"nodeType":"YulFunctionCall","src":"12090:12:5"},"nodeType":"YulExpressionStatement","src":"12090:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12040:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12079:5:5"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12047:31:5"},"nodeType":"YulFunctionCall","src":"12047:38:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12037:2:5"},"nodeType":"YulFunctionCall","src":"12037:49:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12030:6:5"},"nodeType":"YulFunctionCall","src":"12030:57:5"},"nodeType":"YulIf","src":"12027:77:5"}]},"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12010:5:5","type":""}],"src":"11960:150:5"},{"body":{"nodeType":"YulBlock","src":"12182:101:5","statements":[{"nodeType":"YulAssignment","src":"12192:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12214:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12201:12:5"},"nodeType":"YulFunctionCall","src":"12201:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12192:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12271:5:5"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12230:40:5"},"nodeType":"YulFunctionCall","src":"12230:47:5"},"nodeType":"YulExpressionStatement","src":"12230:47:5"}]},"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12160:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"12168:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12176:5:5","type":""}],"src":"12116:167:5"},{"body":{"nodeType":"YulBlock","src":"12369:277:5","statements":[{"body":{"nodeType":"YulBlock","src":"12415:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12417:77:5"},"nodeType":"YulFunctionCall","src":"12417:79:5"},"nodeType":"YulExpressionStatement","src":"12417:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12390:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"12399:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12386:3:5"},"nodeType":"YulFunctionCall","src":"12386:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"12411:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12382:3:5"},"nodeType":"YulFunctionCall","src":"12382:32:5"},"nodeType":"YulIf","src":"12379:119:5"},{"nodeType":"YulBlock","src":"12508:131:5","statements":[{"nodeType":"YulVariableDeclaration","src":"12523:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"12537:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12527:6:5","type":""}]},{"nodeType":"YulAssignment","src":"12552:77:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12601:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"12612:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12597:3:5"},"nodeType":"YulFunctionCall","src":"12597:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12621:7:5"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$190","nodeType":"YulIdentifier","src":"12562:34:5"},"nodeType":"YulFunctionCall","src":"12562:67:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12552:6:5"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$190","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12339:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12350:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12362:6:5","type":""}],"src":"12289:357:5"},{"body":{"nodeType":"YulBlock","src":"12696:261:5","statements":[{"nodeType":"YulAssignment","src":"12706:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12729:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12711:17:5"},"nodeType":"YulFunctionCall","src":"12711:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12706:1:5"}]},{"nodeType":"YulAssignment","src":"12740:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12763:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12745:17:5"},"nodeType":"YulFunctionCall","src":"12745:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12740:1:5"}]},{"body":{"nodeType":"YulBlock","src":"12903:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12905:16:5"},"nodeType":"YulFunctionCall","src":"12905:18:5"},"nodeType":"YulExpressionStatement","src":"12905:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12824:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12831:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"12899:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12827:3:5"},"nodeType":"YulFunctionCall","src":"12827:74:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12821:2:5"},"nodeType":"YulFunctionCall","src":"12821:81:5"},"nodeType":"YulIf","src":"12818:107:5"},{"nodeType":"YulAssignment","src":"12935:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12946:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"12949:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12942:3:5"},"nodeType":"YulFunctionCall","src":"12942:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12935:3:5"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12683:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"12686:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12692:3:5","type":""}],"src":"12652:305:5"},{"body":{"nodeType":"YulBlock","src":"13016:51:5","statements":[{"nodeType":"YulAssignment","src":"13026:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13055:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"13037:17:5"},"nodeType":"YulFunctionCall","src":"13037:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13026:7:5"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12998:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13008:7:5","type":""}],"src":"12963:104:5"},{"body":{"nodeType":"YulBlock","src":"13124:87:5","statements":[{"body":{"nodeType":"YulBlock","src":"13189:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13198:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13201:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13191:6:5"},"nodeType":"YulFunctionCall","src":"13191:12:5"},"nodeType":"YulExpressionStatement","src":"13191:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13147:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13180:5:5"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"13154:25:5"},"nodeType":"YulFunctionCall","src":"13154:32:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13144:2:5"},"nodeType":"YulFunctionCall","src":"13144:43:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13137:6:5"},"nodeType":"YulFunctionCall","src":"13137:51:5"},"nodeType":"YulIf","src":"13134:71:5"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13117:5:5","type":""}],"src":"13073:138:5"},{"body":{"nodeType":"YulBlock","src":"13277:95:5","statements":[{"nodeType":"YulAssignment","src":"13287:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13309:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13296:12:5"},"nodeType":"YulFunctionCall","src":"13296:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13287:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13360:5:5"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"13325:34:5"},"nodeType":"YulFunctionCall","src":"13325:41:5"},"nodeType":"YulExpressionStatement","src":"13325:41:5"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13255:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"13263:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13271:5:5","type":""}],"src":"13217:155:5"},{"body":{"nodeType":"YulBlock","src":"13452:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"13498:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13500:77:5"},"nodeType":"YulFunctionCall","src":"13500:79:5"},"nodeType":"YulExpressionStatement","src":"13500:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13473:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"13482:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13469:3:5"},"nodeType":"YulFunctionCall","src":"13469:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13465:3:5"},"nodeType":"YulFunctionCall","src":"13465:32:5"},"nodeType":"YulIf","src":"13462:119:5"},{"nodeType":"YulBlock","src":"13591:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13606:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"13620:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13610:6:5","type":""}]},{"nodeType":"YulAssignment","src":"13635:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13678:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"13689:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13674:3:5"},"nodeType":"YulFunctionCall","src":"13674:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13698:7:5"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"13645:28:5"},"nodeType":"YulFunctionCall","src":"13645:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13635:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13422:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13433:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13445:6:5","type":""}],"src":"13378:345:5"},{"body":{"nodeType":"YulBlock","src":"13818:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13835:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13838:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13828:6:5"},"nodeType":"YulFunctionCall","src":"13828:12:5"},"nodeType":"YulExpressionStatement","src":"13828:12:5"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"13729:117:5"},{"body":{"nodeType":"YulBlock","src":"13941:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13958:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13961:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13951:6:5"},"nodeType":"YulFunctionCall","src":"13951:12:5"},"nodeType":"YulExpressionStatement","src":"13951:12:5"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"13852:117:5"},{"body":{"nodeType":"YulBlock","src":"14064:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14081:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14084:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14074:6:5"},"nodeType":"YulFunctionCall","src":"14074:12:5"},"nodeType":"YulExpressionStatement","src":"14074:12:5"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"13975:117:5"},{"body":{"nodeType":"YulBlock","src":"14188:634:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14198:51:5","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"14237:11:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14224:12:5"},"nodeType":"YulFunctionCall","src":"14224:25:5"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"14202:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"14343:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"14345:77:5"},"nodeType":"YulFunctionCall","src":"14345:79:5"},"nodeType":"YulExpressionStatement","src":"14345:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14272:18:5"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14300:12:5"},"nodeType":"YulFunctionCall","src":"14300:14:5"},{"name":"base_ref","nodeType":"YulIdentifier","src":"14316:8:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14296:3:5"},"nodeType":"YulFunctionCall","src":"14296:29:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14331:4:5","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14327:3:5"},"nodeType":"YulFunctionCall","src":"14327:12:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14292:3:5"},"nodeType":"YulFunctionCall","src":"14292:48:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14268:3:5"},"nodeType":"YulFunctionCall","src":"14268:73:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14261:6:5"},"nodeType":"YulFunctionCall","src":"14261:81:5"},"nodeType":"YulIf","src":"14258:168:5"},{"nodeType":"YulAssignment","src":"14435:41:5","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"14447:8:5"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14457:18:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14443:3:5"},"nodeType":"YulFunctionCall","src":"14443:33:5"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"14435:4:5"}]},{"nodeType":"YulAssignment","src":"14486:28:5","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14509:4:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14496:12:5"},"nodeType":"YulFunctionCall","src":"14496:18:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14486:6:5"}]},{"body":{"nodeType":"YulBlock","src":"14557:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"14559:77:5"},"nodeType":"YulFunctionCall","src":"14559:79:5"},"nodeType":"YulExpressionStatement","src":"14559:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14529:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14537:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14526:2:5"},"nodeType":"YulFunctionCall","src":"14526:30:5"},"nodeType":"YulIf","src":"14523:117:5"},{"nodeType":"YulAssignment","src":"14649:21:5","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14661:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"14667:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14657:3:5"},"nodeType":"YulFunctionCall","src":"14657:13:5"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"14649:4:5"}]},{"body":{"nodeType":"YulBlock","src":"14732:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"14734:77:5"},"nodeType":"YulFunctionCall","src":"14734:79:5"},"nodeType":"YulExpressionStatement","src":"14734:79:5"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14686:4:5"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14696:12:5"},"nodeType":"YulFunctionCall","src":"14696:14:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14716:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14724:4:5","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14712:3:5"},"nodeType":"YulFunctionCall","src":"14712:17:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14692:3:5"},"nodeType":"YulFunctionCall","src":"14692:38:5"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"14682:3:5"},"nodeType":"YulFunctionCall","src":"14682:49:5"},"nodeType":"YulIf","src":"14679:136:5"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"14149:8:5","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"14159:11:5","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"14175:4:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"14181:6:5","type":""}],"src":"14098:724:5"},{"body":{"nodeType":"YulBlock","src":"14876:300:5","statements":[{"nodeType":"YulAssignment","src":"14886:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14909:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14891:17:5"},"nodeType":"YulFunctionCall","src":"14891:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14886:1:5"}]},{"nodeType":"YulAssignment","src":"14920:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14943:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14925:17:5"},"nodeType":"YulFunctionCall","src":"14925:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14920:1:5"}]},{"body":{"nodeType":"YulBlock","src":"15118:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15120:16:5"},"nodeType":"YulFunctionCall","src":"15120:18:5"},"nodeType":"YulExpressionStatement","src":"15120:18:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15030:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15023:6:5"},"nodeType":"YulFunctionCall","src":"15023:9:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15016:6:5"},"nodeType":"YulFunctionCall","src":"15016:17:5"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15038:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15045:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"15113:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15041:3:5"},"nodeType":"YulFunctionCall","src":"15041:74:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15035:2:5"},"nodeType":"YulFunctionCall","src":"15035:81:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15012:3:5"},"nodeType":"YulFunctionCall","src":"15012:105:5"},"nodeType":"YulIf","src":"15009:131:5"},{"nodeType":"YulAssignment","src":"15150:20:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15165:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"15168:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15161:3:5"},"nodeType":"YulFunctionCall","src":"15161:9:5"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"15150:7:5"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14859:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"14862:1:5","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14868:7:5","type":""}],"src":"14828:348:5"},{"body":{"nodeType":"YulBlock","src":"15210:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15227:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15230:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15220:6:5"},"nodeType":"YulFunctionCall","src":"15220:88:5"},"nodeType":"YulExpressionStatement","src":"15220:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15324:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15327:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15317:6:5"},"nodeType":"YulFunctionCall","src":"15317:15:5"},"nodeType":"YulExpressionStatement","src":"15317:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15348:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15351:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15341:6:5"},"nodeType":"YulFunctionCall","src":"15341:15:5"},"nodeType":"YulExpressionStatement","src":"15341:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15182:180:5"},{"body":{"nodeType":"YulBlock","src":"15410:143:5","statements":[{"nodeType":"YulAssignment","src":"15420:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15443:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15425:17:5"},"nodeType":"YulFunctionCall","src":"15425:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15420:1:5"}]},{"nodeType":"YulAssignment","src":"15454:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15477:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15459:17:5"},"nodeType":"YulFunctionCall","src":"15459:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15454:1:5"}]},{"body":{"nodeType":"YulBlock","src":"15501:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15503:16:5"},"nodeType":"YulFunctionCall","src":"15503:18:5"},"nodeType":"YulExpressionStatement","src":"15503:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15498:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15491:6:5"},"nodeType":"YulFunctionCall","src":"15491:9:5"},"nodeType":"YulIf","src":"15488:35:5"},{"nodeType":"YulAssignment","src":"15533:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15542:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"15545:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15538:3:5"},"nodeType":"YulFunctionCall","src":"15538:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15533:1:5"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15399:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"15402:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15408:1:5","type":""}],"src":"15368:185:5"},{"body":{"nodeType":"YulBlock","src":"15633:66:5","statements":[{"nodeType":"YulAssignment","src":"15643:50:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15687:5:5"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"15656:30:5"},"nodeType":"YulFunctionCall","src":"15656:37:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15643:9:5"}]}]},"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15613:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15623:9:5","type":""}],"src":"15559:140:5"},{"body":{"nodeType":"YulBlock","src":"15784:80:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15801:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15851:5:5"}],"functionName":{"name":"convert_t_contract$_IERC20_$190_to_t_address","nodeType":"YulIdentifier","src":"15806:44:5"},"nodeType":"YulFunctionCall","src":"15806:51:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15794:6:5"},"nodeType":"YulFunctionCall","src":"15794:64:5"},"nodeType":"YulExpressionStatement","src":"15794:64:5"}]},"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15772:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15779:3:5","type":""}],"src":"15705:159:5"},{"body":{"nodeType":"YulBlock","src":"16010:220:5","statements":[{"nodeType":"YulAssignment","src":"16020:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16032:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16043:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16028:3:5"},"nodeType":"YulFunctionCall","src":"16028:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16020:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16114:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16127:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16138:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:5"},"nodeType":"YulFunctionCall","src":"16123:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16056:57:5"},"nodeType":"YulFunctionCall","src":"16056:85:5"},"nodeType":"YulExpressionStatement","src":"16056:85:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16195:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16208:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16219:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16204:3:5"},"nodeType":"YulFunctionCall","src":"16204:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16151:43:5"},"nodeType":"YulFunctionCall","src":"16151:72:5"},"nodeType":"YulExpressionStatement","src":"16151:72:5"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15974:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15986:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15994:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16005:4:5","type":""}],"src":"15870:360:5"},{"body":{"nodeType":"YulBlock","src":"16279:190:5","statements":[{"nodeType":"YulAssignment","src":"16289:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16316:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16298:17:5"},"nodeType":"YulFunctionCall","src":"16298:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16289:5:5"}]},{"body":{"nodeType":"YulBlock","src":"16412:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16414:16:5"},"nodeType":"YulFunctionCall","src":"16414:18:5"},"nodeType":"YulExpressionStatement","src":"16414:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16337:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"16344:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16334:2:5"},"nodeType":"YulFunctionCall","src":"16334:77:5"},"nodeType":"YulIf","src":"16331:103:5"},{"nodeType":"YulAssignment","src":"16443:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16454:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"16461:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16450:3:5"},"nodeType":"YulFunctionCall","src":"16450:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16443:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16265:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16275:3:5","type":""}],"src":"16236:233:5"},{"body":{"nodeType":"YulBlock","src":"16528:32:5","statements":[{"nodeType":"YulAssignment","src":"16538:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"16549:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16538:7:5"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16510:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16520:7:5","type":""}],"src":"16475:85:5"},{"body":{"nodeType":"YulBlock","src":"16634:90:5","statements":[{"nodeType":"YulAssignment","src":"16644:74:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16710:5:5"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"16684:25:5"},"nodeType":"YulFunctionCall","src":"16684:32:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16675:8:5"},"nodeType":"YulFunctionCall","src":"16675:42:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16657:17:5"},"nodeType":"YulFunctionCall","src":"16657:61:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16644:9:5"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16614:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16624:9:5","type":""}],"src":"16566:158:5"},{"body":{"nodeType":"YulBlock","src":"16803:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16820:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16864:5:5"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"16825:38:5"},"nodeType":"YulFunctionCall","src":"16825:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16813:6:5"},"nodeType":"YulFunctionCall","src":"16813:58:5"},"nodeType":"YulExpressionStatement","src":"16813:58:5"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16791:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16798:3:5","type":""}],"src":"16730:147:5"},{"body":{"nodeType":"YulBlock","src":"16989:132:5","statements":[{"nodeType":"YulAssignment","src":"16999:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17011:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17022:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17007:3:5"},"nodeType":"YulFunctionCall","src":"17007:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16999:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17087:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17100:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17111:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17096:3:5"},"nodeType":"YulFunctionCall","src":"17096:17:5"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17035:51:5"},"nodeType":"YulFunctionCall","src":"17035:79:5"},"nodeType":"YulExpressionStatement","src":"17035:79:5"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16961:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16973:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16984:4:5","type":""}],"src":"16883:238:5"},{"body":{"nodeType":"YulBlock","src":"17223:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17240:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17245:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17233:6:5"},"nodeType":"YulFunctionCall","src":"17233:19:5"},"nodeType":"YulExpressionStatement","src":"17233:19:5"},{"nodeType":"YulAssignment","src":"17261:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17280:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17285:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:5"},"nodeType":"YulFunctionCall","src":"17276:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17261:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17195:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"17200:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17211:11:5","type":""}],"src":"17127:169:5"},{"body":{"nodeType":"YulBlock","src":"17408:119:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17430:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17438:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17426:3:5"},"nodeType":"YulFunctionCall","src":"17426:14:5"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"17442:34:5","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17419:6:5"},"nodeType":"YulFunctionCall","src":"17419:58:5"},"nodeType":"YulExpressionStatement","src":"17419:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17498:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17506:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:5"},"nodeType":"YulFunctionCall","src":"17494:15:5"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"17511:8:5","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17487:6:5"},"nodeType":"YulFunctionCall","src":"17487:33:5"},"nodeType":"YulExpressionStatement","src":"17487:33:5"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17400:6:5","type":""}],"src":"17302:225:5"},{"body":{"nodeType":"YulBlock","src":"17679:220:5","statements":[{"nodeType":"YulAssignment","src":"17689:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17755:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17760:2:5","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17696:58:5"},"nodeType":"YulFunctionCall","src":"17696:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17689:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17861:3:5"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"17772:88:5"},"nodeType":"YulFunctionCall","src":"17772:93:5"},"nodeType":"YulExpressionStatement","src":"17772:93:5"},{"nodeType":"YulAssignment","src":"17874:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17885:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17890:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17881:3:5"},"nodeType":"YulFunctionCall","src":"17881:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17874:3:5"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17667:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17675:3:5","type":""}],"src":"17533:366:5"},{"body":{"nodeType":"YulBlock","src":"18076:248:5","statements":[{"nodeType":"YulAssignment","src":"18086:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18098:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18109:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18094:3:5"},"nodeType":"YulFunctionCall","src":"18094:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18086:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18133:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18144:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:5"},"nodeType":"YulFunctionCall","src":"18129:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18152:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"18158:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18148:3:5"},"nodeType":"YulFunctionCall","src":"18148:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18122:6:5"},"nodeType":"YulFunctionCall","src":"18122:47:5"},"nodeType":"YulExpressionStatement","src":"18122:47:5"},{"nodeType":"YulAssignment","src":"18178:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18312:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18186:124:5"},"nodeType":"YulFunctionCall","src":"18186:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18178:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18056:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18071:4:5","type":""}],"src":"17905:419:5"},{"body":{"nodeType":"YulBlock","src":"18484:288:5","statements":[{"nodeType":"YulAssignment","src":"18494:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18506:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18517:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18502:3:5"},"nodeType":"YulFunctionCall","src":"18502:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18494:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18574:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18587:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18598:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18583:3:5"},"nodeType":"YulFunctionCall","src":"18583:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18530:43:5"},"nodeType":"YulFunctionCall","src":"18530:71:5"},"nodeType":"YulExpressionStatement","src":"18530:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18655:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18668:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18679:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18664:3:5"},"nodeType":"YulFunctionCall","src":"18664:18:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18611:43:5"},"nodeType":"YulFunctionCall","src":"18611:72:5"},"nodeType":"YulExpressionStatement","src":"18611:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18737:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18750:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18761:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18746:3:5"},"nodeType":"YulFunctionCall","src":"18746:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18693:43:5"},"nodeType":"YulFunctionCall","src":"18693:72:5"},"nodeType":"YulExpressionStatement","src":"18693:72:5"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18440:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18452:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18460:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18468:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18479:4:5","type":""}],"src":"18330:442:5"},{"body":{"nodeType":"YulBlock","src":"18820:48:5","statements":[{"nodeType":"YulAssignment","src":"18830:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18855:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18848:6:5"},"nodeType":"YulFunctionCall","src":"18848:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18841:6:5"},"nodeType":"YulFunctionCall","src":"18841:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18830:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18802:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18812:7:5","type":""}],"src":"18778:90:5"},{"body":{"nodeType":"YulBlock","src":"18914:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"18968:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18977:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18980:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18970:6:5"},"nodeType":"YulFunctionCall","src":"18970:12:5"},"nodeType":"YulExpressionStatement","src":"18970:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18937:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18959:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"18944:14:5"},"nodeType":"YulFunctionCall","src":"18944:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18934:2:5"},"nodeType":"YulFunctionCall","src":"18934:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18927:6:5"},"nodeType":"YulFunctionCall","src":"18927:40:5"},"nodeType":"YulIf","src":"18924:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18907:5:5","type":""}],"src":"18874:116:5"},{"body":{"nodeType":"YulBlock","src":"19056:77:5","statements":[{"nodeType":"YulAssignment","src":"19066:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19081:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19075:5:5"},"nodeType":"YulFunctionCall","src":"19075:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19066:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19121:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19097:23:5"},"nodeType":"YulFunctionCall","src":"19097:30:5"},"nodeType":"YulExpressionStatement","src":"19097:30:5"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19034:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"19042:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19050:5:5","type":""}],"src":"18996:137:5"},{"body":{"nodeType":"YulBlock","src":"19213:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"19259:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19261:77:5"},"nodeType":"YulFunctionCall","src":"19261:79:5"},"nodeType":"YulExpressionStatement","src":"19261:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19234:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"19243:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19230:3:5"},"nodeType":"YulFunctionCall","src":"19230:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"19255:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19226:3:5"},"nodeType":"YulFunctionCall","src":"19226:32:5"},"nodeType":"YulIf","src":"19223:119:5"},{"nodeType":"YulBlock","src":"19352:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19367:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"19381:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19371:6:5","type":""}]},{"nodeType":"YulAssignment","src":"19396:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19439:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19450:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19435:3:5"},"nodeType":"YulFunctionCall","src":"19435:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19459:7:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"19406:28:5"},"nodeType":"YulFunctionCall","src":"19406:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19396:6:5"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19183:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19194:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19206:6:5","type":""}],"src":"19139:345:5"},{"body":{"nodeType":"YulBlock","src":"19553:80:5","statements":[{"nodeType":"YulAssignment","src":"19563:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19578:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19572:5:5"},"nodeType":"YulFunctionCall","src":"19572:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19563:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19621:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19594:26:5"},"nodeType":"YulFunctionCall","src":"19594:33:5"},"nodeType":"YulExpressionStatement","src":"19594:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19531:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"19539:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19547:5:5","type":""}],"src":"19490:143:5"},{"body":{"nodeType":"YulBlock","src":"19716:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"19762:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19764:77:5"},"nodeType":"YulFunctionCall","src":"19764:79:5"},"nodeType":"YulExpressionStatement","src":"19764:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19737:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"19746:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19733:3:5"},"nodeType":"YulFunctionCall","src":"19733:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"19758:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19729:3:5"},"nodeType":"YulFunctionCall","src":"19729:32:5"},"nodeType":"YulIf","src":"19726:119:5"},{"nodeType":"YulBlock","src":"19855:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19870:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"19884:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19874:6:5","type":""}]},{"nodeType":"YulAssignment","src":"19899:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19945:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19956:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19941:3:5"},"nodeType":"YulFunctionCall","src":"19941:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19965:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19909:31:5"},"nodeType":"YulFunctionCall","src":"19909:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19899:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19686:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19697:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19709:6:5","type":""}],"src":"19639:351:5"},{"body":{"nodeType":"YulBlock","src":"20041:73:5","statements":[{"nodeType":"YulAssignment","src":"20051:57:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20066:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"20073:34:5","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20062:3:5"},"nodeType":"YulFunctionCall","src":"20062:46:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20051:7:5"}]}]},"name":"cleanup_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20023:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20033:7:5","type":""}],"src":"19996:118:5"},{"body":{"nodeType":"YulBlock","src":"20180:82:5","statements":[{"nodeType":"YulAssignment","src":"20190:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20248:5:5"}],"functionName":{"name":"cleanup_t_uint128","nodeType":"YulIdentifier","src":"20230:17:5"},"nodeType":"YulFunctionCall","src":"20230:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"20221:8:5"},"nodeType":"YulFunctionCall","src":"20221:34:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20203:17:5"},"nodeType":"YulFunctionCall","src":"20203:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"20190:9:5"}]}]},"name":"convert_t_uint128_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20160:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"20170:9:5","type":""}],"src":"20120:142:5"},{"body":{"nodeType":"YulBlock","src":"20333:66:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20350:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20386:5:5"}],"functionName":{"name":"convert_t_uint128_to_t_uint256","nodeType":"YulIdentifier","src":"20355:30:5"},"nodeType":"YulFunctionCall","src":"20355:37:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20343:6:5"},"nodeType":"YulFunctionCall","src":"20343:50:5"},"nodeType":"YulExpressionStatement","src":"20343:50:5"}]},"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20321:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20328:3:5","type":""}],"src":"20268:131:5"},{"body":{"nodeType":"YulBlock","src":"20531:206:5","statements":[{"nodeType":"YulAssignment","src":"20541:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20553:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20564:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20549:3:5"},"nodeType":"YulFunctionCall","src":"20549:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20541:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20621:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20634:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20645:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20630:3:5"},"nodeType":"YulFunctionCall","src":"20630:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20577:43:5"},"nodeType":"YulFunctionCall","src":"20577:71:5"},"nodeType":"YulExpressionStatement","src":"20577:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20702:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20715:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20726:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20711:3:5"},"nodeType":"YulFunctionCall","src":"20711:18:5"}],"functionName":{"name":"abi_encode_t_uint128_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20658:43:5"},"nodeType":"YulFunctionCall","src":"20658:72:5"},"nodeType":"YulExpressionStatement","src":"20658:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20495:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20507:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20515:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20526:4:5","type":""}],"src":"20405:332:5"},{"body":{"nodeType":"YulBlock","src":"20856:34:5","statements":[{"nodeType":"YulAssignment","src":"20866:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"20881:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20866:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20828:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"20833:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20844:11:5","type":""}],"src":"20743:147:5"},{"body":{"nodeType":"YulBlock","src":"20947:103:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20970:3:5"},{"name":"src","nodeType":"YulIdentifier","src":"20975:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"20980:6:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20957:12:5"},"nodeType":"YulFunctionCall","src":"20957:30:5"},"nodeType":"YulExpressionStatement","src":"20957:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21028:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21033:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21024:3:5"},"nodeType":"YulFunctionCall","src":"21024:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"21042:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21017:6:5"},"nodeType":"YulFunctionCall","src":"21017:27:5"},"nodeType":"YulExpressionStatement","src":"21017:27:5"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20929:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20934:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"20939:6:5","type":""}],"src":"20896:154:5"},{"body":{"nodeType":"YulBlock","src":"21196:196:5","statements":[{"nodeType":"YulAssignment","src":"21206:95:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21289:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21294:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21213:75:5"},"nodeType":"YulFunctionCall","src":"21213:88:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21206:3:5"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21335:5:5"},{"name":"pos","nodeType":"YulIdentifier","src":"21342:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21347:6:5"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"21311:23:5"},"nodeType":"YulFunctionCall","src":"21311:43:5"},"nodeType":"YulExpressionStatement","src":"21311:43:5"},{"nodeType":"YulAssignment","src":"21363:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21374:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"21379:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21370:3:5"},"nodeType":"YulFunctionCall","src":"21370:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21363:3:5"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"21169:5:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"21176:6:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21184:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21192:3:5","type":""}],"src":"21078:314:5"},{"body":{"nodeType":"YulBlock","src":"21542:147:5","statements":[{"nodeType":"YulAssignment","src":"21553:110:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21642:6:5"},{"name":"value1","nodeType":"YulIdentifier","src":"21650:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"21659:3:5"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21560:81:5"},"nodeType":"YulFunctionCall","src":"21560:103:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21553:3:5"}]},{"nodeType":"YulAssignment","src":"21673:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"21680:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21673:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21513:3:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21519:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21527:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21538:3:5","type":""}],"src":"21398:291:5"},{"body":{"nodeType":"YulBlock","src":"21754:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21771:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21791:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21776:14:5"},"nodeType":"YulFunctionCall","src":"21776:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21764:6:5"},"nodeType":"YulFunctionCall","src":"21764:34:5"},"nodeType":"YulExpressionStatement","src":"21764:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21742:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21749:3:5","type":""}],"src":"21695:109:5"},{"body":{"nodeType":"YulBlock","src":"21930:200:5","statements":[{"nodeType":"YulAssignment","src":"21940:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21952:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"21963:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21948:3:5"},"nodeType":"YulFunctionCall","src":"21948:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21940:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22014:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22027:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22038:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22023:3:5"},"nodeType":"YulFunctionCall","src":"22023:17:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21976:37:5"},"nodeType":"YulFunctionCall","src":"21976:65:5"},"nodeType":"YulExpressionStatement","src":"21976:65:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22095:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22108:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22119:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22104:3:5"},"nodeType":"YulFunctionCall","src":"22104:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22051:43:5"},"nodeType":"YulFunctionCall","src":"22051:72:5"},"nodeType":"YulExpressionStatement","src":"22051:72:5"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21894:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21906:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21914:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21925:4:5","type":""}],"src":"21810:320:5"},{"body":{"nodeType":"YulBlock","src":"22290:234:5","statements":[{"nodeType":"YulAssignment","src":"22300:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22312:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22323:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22308:3:5"},"nodeType":"YulFunctionCall","src":"22308:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22300:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22394:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22407:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22418:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22403:3:5"},"nodeType":"YulFunctionCall","src":"22403:17:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22336:57:5"},"nodeType":"YulFunctionCall","src":"22336:85:5"},"nodeType":"YulExpressionStatement","src":"22336:85:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22489:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22502:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22513:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22498:3:5"},"nodeType":"YulFunctionCall","src":"22498:18:5"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22431:57:5"},"nodeType":"YulFunctionCall","src":"22431:86:5"},"nodeType":"YulExpressionStatement","src":"22431:86:5"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22254:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22266:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22274:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22285:4:5","type":""}],"src":"22136:388:5"},{"body":{"nodeType":"YulBlock","src":"22656:206:5","statements":[{"nodeType":"YulAssignment","src":"22666:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22678:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22689:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22674:3:5"},"nodeType":"YulFunctionCall","src":"22674:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22666:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22746:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22759:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22770:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22755:3:5"},"nodeType":"YulFunctionCall","src":"22755:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22702:43:5"},"nodeType":"YulFunctionCall","src":"22702:71:5"},"nodeType":"YulExpressionStatement","src":"22702:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22827:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22840:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22851:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22836:3:5"},"nodeType":"YulFunctionCall","src":"22836:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22783:43:5"},"nodeType":"YulFunctionCall","src":"22783:72:5"},"nodeType":"YulExpressionStatement","src":"22783:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22620:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22632:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22640:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22651:4:5","type":""}],"src":"22530:332:5"},{"body":{"nodeType":"YulBlock","src":"22974:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22996:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"23004:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22992:3:5"},"nodeType":"YulFunctionCall","src":"22992:14:5"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23008:34:5","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22985:6:5"},"nodeType":"YulFunctionCall","src":"22985:58:5"},"nodeType":"YulExpressionStatement","src":"22985:58:5"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22966:6:5","type":""}],"src":"22868:182:5"},{"body":{"nodeType":"YulBlock","src":"23202:220:5","statements":[{"nodeType":"YulAssignment","src":"23212:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23278:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"23283:2:5","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23219:58:5"},"nodeType":"YulFunctionCall","src":"23219:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23212:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23384:3:5"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"23295:88:5"},"nodeType":"YulFunctionCall","src":"23295:93:5"},"nodeType":"YulExpressionStatement","src":"23295:93:5"},{"nodeType":"YulAssignment","src":"23397:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23408:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"23413:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23404:3:5"},"nodeType":"YulFunctionCall","src":"23404:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23397:3:5"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23190:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23198:3:5","type":""}],"src":"23056:366:5"},{"body":{"nodeType":"YulBlock","src":"23599:248:5","statements":[{"nodeType":"YulAssignment","src":"23609:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23621:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23632:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:5"},"nodeType":"YulFunctionCall","src":"23617:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23609:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23656:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23667:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23652:3:5"},"nodeType":"YulFunctionCall","src":"23652:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23675:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"23681:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23671:3:5"},"nodeType":"YulFunctionCall","src":"23671:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23645:6:5"},"nodeType":"YulFunctionCall","src":"23645:47:5"},"nodeType":"YulExpressionStatement","src":"23645:47:5"},{"nodeType":"YulAssignment","src":"23701:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23835:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23709:124:5"},"nodeType":"YulFunctionCall","src":"23709:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23701:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23579:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23594:4:5","type":""}],"src":"23428:419:5"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address payable[]\n    function abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_contract$_IERC20_$190_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_payable_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_contract$_IERC20_$190_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_array$_t_address_payable_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value8, value9 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value10 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IWETH_$937_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IWETH_$937_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWETH_$937_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IWETH_$937__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWETH_$937_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_contract$_IERC20_$190(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$190(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$190(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$190(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$190(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$190(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$190(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function convert_t_contract$_IERC20_$190_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$190_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint128(value)))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$190_t_contract$_IERC20_$190__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$190_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1001":[{"length":32,"start":635},{"length":32,"start":2422},{"length":32,"start":3010}]},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80637a9d7c14116100595780637a9d7c141461011a5780638da5cb5b14610143578063ad5c46481461016e578063ddca3f4314610199578063f2fde38b146101c457610091565b806324e1c18d146100935780636ca591a7146100be578063715018a6146100da57806373fee090146100f157610091565b3661009157005b005b34801561009f57600080fd5b506100a86101ed565b6040516100b591906113a5565b60405180910390f35b6100d860048036038101906100d391906116b6565b6101f3565b005b3480156100e657600080fd5b506100ef610b26565b005b3480156100fd57600080fd5b5061011860048036038101906101139190611803565b610b3a565b005b34801561012657600080fd5b50610141600480360381019061013c9190611803565b610b4c565b005b34801561014f57600080fd5b50610158610b97565b6040516101659190611871565b60405180910390f35b34801561017a57600080fd5b50610183610bc0565b60405161019091906118eb565b60405180910390f35b3480156101a557600080fd5b506101ae610be4565b6040516101bb91906113a5565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190611932565b610bea565b005b60015481565b6001548b8b90501115801561020d5750888890508b8b9050145b801561021e57508888905087879050145b801561022f57508686905085859050145b610265576040517f90b42d6500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060400160405280600081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152509050600034111561036957806020015173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b5050505050348160000181815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16816000015160405161036091906113a5565b60405180910390a15b60005b88889050811015610abf57600073ffffffffffffffffffffffffffffffffffffffff168989838181106103a2576103a161195f565b5b90506020020160208101906103b79190611932565b73ffffffffffffffffffffffffffffffffffffffff1614156105a0578281815181106103e6576103e561195f565b5b602002602001015182600001511015610455577f0b74b0798ec89f7cf91b1446e01c1bb75b7d55c45b104edfb364a46a074e2f5682600001518483815181106104325761043161195f565b5b602002602001015160405161044892919061198e565b60405180910390a1610abf565b600083828151811061046a5761046961195f565b5b6020026020010151111561059b5782818151811061048b5761048a61195f565b5b6020026020010151826000018181516104a491906119e6565b91508181525050816020015173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d8483815181106104de576104dd61195f565b5b60200260200101516040518263ffffffff1660e01b815260040161050291906113a5565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b5050505061055f83828151811061054a5761054961195f565b5b602002602001015161055a610c6e565b610c76565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161059291906113a5565b60405180910390a15b610aac565b816020015173ffffffffffffffffffffffffffffffffffffffff168d8d838181106105ce576105cd61195f565b5b90506020020160208101906105e39190611a58565b73ffffffffffffffffffffffffffffffffffffffff1614156107b2578a8a828181106106125761061161195f565b5b90506020020160208101906106279190611a58565b73ffffffffffffffffffffffffffffffffffffffff168d8d838181106106505761064f61195f565b5b90506020020160208101906106659190611a58565b73ffffffffffffffffffffffffffffffffffffffff16141561073f576106cc8d8d838181106106975761069661195f565b5b90506020020160208101906106ac9190611a58565b8483815181106106bf576106be61195f565b5b6020026020010151610cc1565b8281815181106106df576106de61195f565b5b6020026020010151826000018181516106f89190611a85565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed16826000015160405161073291906113a5565b60405180910390a1610aac565b8281815181106107525761075161195f565b5b60200260200101518260000181815161076b91906119e6565b915081815250507f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1682600001516040516107a591906113a5565b60405180910390a16107fe565b6107fd8d8d838181106107c8576107c761195f565b5b90506020020160208101906107dd9190611a58565b8483815181106107f0576107ef61195f565b5b6020026020010151610cc1565b5b60006108cd8c8c848181106108165761081561195f565b5b905060200201602081019061082b9190611a58565b8f8f8581811061083e5761083d61195f565b5b90506020020160208101906108539190611a58565b8c8c868181106108665761086561195f565b5b905060200201602081019061087b9190611932565b8b8b8781811061088e5761088d61195f565b5b90506020020160208101906108a39190611b19565b8a8a888181106108b6576108b561195f565b5b90506020028101906108c89190611b55565b610dba565b90506000612710826002546108e29190611bb8565b6108ec9190611c41565b9050836020015173ffffffffffffffffffffffffffffffffffffffff168d8d8581811061091c5761091b61195f565b5b90506020020160208101906109319190611a58565b73ffffffffffffffffffffffffffffffffffffffff1614156109db578082856000015161095e9190611a85565b61096891906119e6565b84600001818152505061099b7f000000000000000000000000000000000000000000000000000000000000000082611117565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed1684600001516040516109ce91906113a5565b60405180910390a1610aa9565b610a178d8d858181106109f1576109f061195f565b5b9050602002016020810190610a069190611a58565b8284610a1291906119e6565b6111b0565b610a488d8d85818110610a2d57610a2c61195f565b5b9050602002016020810190610a429190611a58565b82611117565b7f680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c8d8d85818110610a7c57610a7b61195f565b5b9050602002016020810190610a919190611a58565b83604051610aa0929190611c93565b60405180910390a15b50505b8080610ab790611cbc565b91505061036c565b50600081600001511115610b1857610adf816020015182600001516111b0565b7f59e3c56b3739d587caa0270fae7c28e1b6a1af555395ad122400ff97d48fed166000604051610b0f9190611d40565b60405180910390a15b505050505050505050505050565b610b2e611242565b610b3860006112c0565b565b610b42611242565b8060028190555050565b610b54611242565b806001819055507f5091ccfe22ca8f99d8f1f07c6ae3a61daf990d74ef229d46898624ff3977238c600154604051610b8c91906113a5565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610bf2611242565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611dde565b60405180910390fd5b610c6b816112c0565b50565b600033905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610cbc573d6000803e3d6000fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cfe93929190611dfe565b602060405180830381600087803b158015610d1857600080fd5b505af1158015610d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d509190611e6d565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6d3eb25a413c05d8107fc49deb2789bef7f612582b2482804c0b0423b6638ee83604051610dae91906113a5565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610e22576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e5d9190611871565b60206040518083038186803b158015610e7557600080fd5b505afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190611eaf565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3876fffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610efa929190611f29565b602060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4c9190611e6d565b5060008573ffffffffffffffffffffffffffffffffffffffff1660008686604051610f78929190611f91565b60006040518083038185875af1925050503d8060008114610fb5576040519150601f19603f3d011682016040523d82523d6000602084013e610fba565b606091505b505090507fb1bbdf0cbdd013d8d322184c42c16dafe4b2b3b66c3d60f46874b6c78b9a87f68183604051610fef929190611fb9565b60405180910390a18061103b5788886040517f7155081c000000000000000000000000000000000000000000000000000000008152600401611032929190611fe2565b60405180910390fd5b818973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110759190611871565b60206040518083038186803b15801561108d57600080fd5b505afa1580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190611eaf565b6110cf91906119e6565b91507f74496fce2cdc392d99808924e4161c005195a64fee4c166b02c2b716db28abb08260405161110091906113a5565b60405180910390a181925050509695505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61113b610b97565b836040518363ffffffff1660e01b815260040161115992919061200b565b602060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ab9190611e6d565b505050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111eb92919061200b565b602060405180830381600087803b15801561120557600080fd5b505af1158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190611e6d565b505050565b61124a611384565b73ffffffffffffffffffffffffffffffffffffffff16611268610b97565b73ffffffffffffffffffffffffffffffffffffffff16146112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590612080565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61139f8161138c565b82525050565b60006020820190506113ba6000830184611396565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126113f9576113f86113d4565b5b8235905067ffffffffffffffff811115611416576114156113d9565b5b602083019150836020820283011115611432576114316113de565b5b9250929050565b60008083601f84011261144f5761144e6113d4565b5b8235905067ffffffffffffffff81111561146c5761146b6113d9565b5b602083019150836020820283011115611488576114876113de565b5b9250929050565b60008083601f8401126114a5576114a46113d4565b5b8235905067ffffffffffffffff8111156114c2576114c16113d9565b5b6020830191508360208202830111156114de576114dd6113de565b5b9250929050565b60008083601f8401126114fb576114fa6113d4565b5b8235905067ffffffffffffffff811115611518576115176113d9565b5b602083019150836020820283011115611534576115336113de565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115848261153b565b810181811067ffffffffffffffff821117156115a3576115a261154c565b5b80604052505050565b60006115b66113c0565b90506115c2828261157b565b919050565b600067ffffffffffffffff8211156115e2576115e161154c565b5b602082029050602081019050919050565b6115fc8161138c565b811461160757600080fd5b50565b600081359050611619816115f3565b92915050565b600061163261162d846115c7565b6115ac565b90508083825260208201905060208402830185811115611655576116546113de565b5b835b8181101561167e578061166a888261160a565b845260208401935050602081019050611657565b5050509392505050565b600082601f83011261169d5761169c6113d4565b5b81356116ad84826020860161161f565b91505092915050565b600080600080600080600080600080600060c08c8e0312156116db576116da6113ca565b5b60008c013567ffffffffffffffff8111156116f9576116f86113cf565b5b6117058e828f016113e3565b9b509b505060208c013567ffffffffffffffff811115611728576117276113cf565b5b6117348e828f016113e3565b995099505060408c013567ffffffffffffffff811115611757576117566113cf565b5b6117638e828f01611439565b975097505060608c013567ffffffffffffffff811115611786576117856113cf565b5b6117928e828f0161148f565b955095505060808c013567ffffffffffffffff8111156117b5576117b46113cf565b5b6117c18e828f016114e5565b935093505060a08c013567ffffffffffffffff8111156117e4576117e36113cf565b5b6117f08e828f01611688565b9150509295989b509295989b9093969950565b600060208284031215611819576118186113ca565b5b60006118278482850161160a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061185b82611830565b9050919050565b61186b81611850565b82525050565b60006020820190506118866000830184611862565b92915050565b6000819050919050565b60006118b16118ac6118a784611830565b61188c565b611830565b9050919050565b60006118c382611896565b9050919050565b60006118d5826118b8565b9050919050565b6118e5816118ca565b82525050565b600060208201905061190060008301846118dc565b92915050565b61190f81611850565b811461191a57600080fd5b50565b60008135905061192c81611906565b92915050565b600060208284031215611948576119476113ca565b5b60006119568482850161191d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506119a36000830185611396565b6119b06020830184611396565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f18261138c565b91506119fc8361138c565b925082821015611a0f57611a0e6119b7565b5b828203905092915050565b6000611a2582611850565b9050919050565b611a3581611a1a565b8114611a4057600080fd5b50565b600081359050611a5281611a2c565b92915050565b600060208284031215611a6e57611a6d6113ca565b5b6000611a7c84828501611a43565b91505092915050565b6000611a908261138c565b9150611a9b8361138c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ad057611acf6119b7565b5b828201905092915050565b6000611ae682611830565b9050919050565b611af681611adb565b8114611b0157600080fd5b50565b600081359050611b1381611aed565b92915050565b600060208284031215611b2f57611b2e6113ca565b5b6000611b3d84828501611b04565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611b7257611b71611b46565b5b80840192508235915067ffffffffffffffff821115611b9457611b93611b4b565b5b602083019250600182023603831315611bb057611baf611b50565b5b509250929050565b6000611bc38261138c565b9150611bce8361138c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c0757611c066119b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c4c8261138c565b9150611c578361138c565b925082611c6757611c66611c12565b5b828204905092915050565b6000611c7d826118b8565b9050919050565b611c8d81611c72565b82525050565b6000604082019050611ca86000830185611c84565b611cb56020830184611396565b9392505050565b6000611cc78261138c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cfa57611cf96119b7565b5b600182019050919050565b6000819050919050565b6000611d2a611d25611d2084611d05565b61188c565b61138c565b9050919050565b611d3a81611d0f565b82525050565b6000602082019050611d556000830184611d31565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dc8602683611d5b565b9150611dd382611d6c565b604082019050919050565b60006020820190508181036000830152611df781611dbb565b9050919050565b6000606082019050611e136000830186611862565b611e206020830185611862565b611e2d6040830184611396565b949350505050565b60008115159050919050565b611e4a81611e35565b8114611e5557600080fd5b50565b600081519050611e6781611e41565b92915050565b600060208284031215611e8357611e826113ca565b5b6000611e9184828501611e58565b91505092915050565b600081519050611ea9816115f3565b92915050565b600060208284031215611ec557611ec46113ca565b5b6000611ed384828501611e9a565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611f13611f0e611f0984611edc565b61188c565b61138c565b9050919050565b611f2381611ef8565b82525050565b6000604082019050611f3e6000830185611862565b611f4b6020830184611f1a565b9392505050565b600081905092915050565b82818337600083830152505050565b6000611f788385611f52565b9350611f85838584611f5d565b82840190509392505050565b6000611f9e828486611f6c565b91508190509392505050565b611fb381611e35565b82525050565b6000604082019050611fce6000830185611faa565b611fdb6020830184611396565b9392505050565b6000604082019050611ff76000830185611c84565b6120046020830184611c84565b9392505050565b60006040820190506120206000830185611862565b61202d6020830184611396565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061206a602083611d5b565b915061207582612034565b602082019050919050565b600060208201905081810360008301526120998161205d565b905091905056fea264697066735822122063d0dbee4619c9f11ba3f772102320ea2fbee16b97858046fa3e99ca34e3741164736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9D7C14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A9D7C14 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24E1C18D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x6CA591A7 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x73FEE090 EQ PUSH2 0xF1 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xB26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP12 DUP12 SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI POP DUP9 DUP9 SWAP1 POP DUP12 DUP12 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI POP DUP9 DUP9 SWAP1 POP DUP8 DUP8 SWAP1 POP EQ JUMPDEST DUP1 ISZERO PUSH2 0x22F JUMPI POP DUP7 DUP7 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ JUMPDEST PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B42D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x369 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLVALUE DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x3A2 JUMPI PUSH2 0x3A1 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x455 JUMPI PUSH32 0xB74B0798EC89F7CF91B1446E01C1BB75B7D55C45B104EDFB364A46A074E2F56 DUP3 PUSH1 0x0 ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x448 SWAP3 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x59B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x55F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x54A JUMPI PUSH2 0x549 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x55A PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xAAC JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B2 JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73F JUMPI PUSH2 0x6CC DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAAC JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x7FD DUP14 DUP14 DUP4 DUP2 DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C7 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x195F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8CD DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP16 DUP16 DUP6 DUP2 DUP2 LT PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x2 SLOAD PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x1A85 JUMP JUMPDEST PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x99B PUSH32 0x0 DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0xA17 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP3 DUP5 PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0xA48 DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH32 0x680F2E4F4032EBF1774E8CDBADDCB1B617A5A606411C8CA96257ADA338D3833C DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x195F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAB7 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xADF DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x11B0 JUMP JUMPDEST PUSH32 0x59E3C56B3739D587CAA0270FAE7C28E1B6A1AF555395AD122400FF97D48FED16 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB2E PUSH2 0x1242 JUMP JUMPDEST PUSH2 0xB38 PUSH1 0x0 PUSH2 0x12C0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1242 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x5091CCFE22CA8F99D8F1F07C6AE3A61DAF990D74EF229D46898624FF3977238C PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP2 PUSH2 0x12C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6D3EB25A413C05D8107FC49DEB2789BEF7F612582B2482804C0B0423B6638EE DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4C SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF78 SWAP3 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH32 0xB1BBDF0CBDD013D8D322184C42C16DAFE4B2B3B66C3D60F46874B6C78B9A87F6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEF SWAP3 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x103B JUMPI DUP9 DUP9 PUSH1 0x40 MLOAD PUSH32 0x7155081C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x10CF SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH32 0x74496FCE2CDC392D99808924E4161C005195A64FEE4C166B02C2B716DB28ABB0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x113B PUSH2 0xB97 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP3 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1187 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EB SWAP3 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x124A PUSH2 0x1384 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1268 PUSH2 0xB97 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139F DUP2 PUSH2 0x138C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1416 JUMPI PUSH2 0x1415 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1432 JUMPI PUSH2 0x1431 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x144F JUMPI PUSH2 0x144E PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C1 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1584 DUP3 PUSH2 0x153B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x154C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B6 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x157B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x154C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x138C JUMP JUMPDEST DUP2 EQ PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1619 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH2 0x162D DUP5 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x167E JUMPI DUP1 PUSH2 0x166A DUP9 DUP3 PUSH2 0x160A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1657 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x161F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x16DB JUMPI PUSH2 0x16DA PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1705 DUP15 DUP3 DUP16 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP12 POP SWAP12 POP POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1734 DUP15 DUP3 DUP16 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP10 POP SWAP10 POP POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH2 0x1756 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1763 DUP15 DUP3 DUP16 ADD PUSH2 0x1439 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x1792 DUP15 DUP3 DUP16 ADD PUSH2 0x148F JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x17C1 DUP15 DUP3 DUP16 ADD PUSH2 0x14E5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH2 0x17F0 DUP15 DUP3 DUP16 ADD PUSH2 0x1688 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1827 DUP5 DUP3 DUP6 ADD PUSH2 0x160A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185B DUP3 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186B DUP2 PUSH2 0x1850 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1886 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B1 PUSH2 0x18AC PUSH2 0x18A7 DUP5 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C3 DUP3 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D5 DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x190F DUP2 PUSH2 0x1850 JUMP JUMPDEST DUP2 EQ PUSH2 0x191A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x192C DUP2 PUSH2 0x1906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1948 JUMPI PUSH2 0x1947 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP5 DUP3 DUP6 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x19B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F1 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x19FC DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A25 DUP3 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A52 DUP2 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP5 DUP3 DUP6 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9B DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x1ACF PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE6 DUP3 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B13 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2E PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3D DUP5 DUP3 DUP6 ADD PUSH2 0x1B04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1B46 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x1B4B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x1B50 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC3 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCE DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1C06 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C4C DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C57 DUP4 PUSH2 0x138C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x1C12 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7D DUP3 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8D DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CA8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1CB5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP3 PUSH2 0x138C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2A PUSH2 0x1D25 PUSH2 0x1D20 DUP5 PUSH2 0x1D05 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3A DUP2 PUSH2 0x1D0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 PUSH1 0x26 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF7 DUP2 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E13 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1E2D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E67 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E82 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E91 DUP5 DUP3 DUP6 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EA9 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F13 PUSH2 0x1F0E PUSH2 0x1F09 DUP5 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F23 DUP2 PUSH2 0x1EF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1F4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F78 DUP4 DUP6 PUSH2 0x1F52 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F85 DUP4 DUP6 DUP5 PUSH2 0x1F5D JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E DUP3 DUP5 DUP7 PUSH2 0x1F6C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH2 0x1E35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1FDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FF7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2020 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x202D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206A PUSH1 0x20 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 DUP3 PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2099 DUP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xD0DBEE46 NOT 0xC9 CALL SHL LOG3 0xF7 PUSH19 0x102320EA2FBEE16B97858046FA3E99CA34E374 GT PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"416:8270:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5586:3098;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;2068:74:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2265:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:27:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1418:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1382:30:4;;;;:::o;5586:3098::-;5905:15;;5885:9;;:16;;:35;;:90;;;;;5960:8;;:15;;5940:9;;:16;;:35;5885:90;:143;;;;;6013:8;;:15;;5995:7;;:14;;:33;5885:143;:198;;;;;6069:7;;:14;;6048:10;;:17;;:35;5885:198;5866:260;;6102:24;;;;;;;;;;;;;;5866:260;6137:24;6164:17;;;;;;;;6173:1;6164:17;;;;6176:4;6164:17;;;;;6137:44;;6208:1;6196:9;:13;6192:190;;;6225:8;:13;;;:21;;;6254:9;6225:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:9;6280:8;:20;;:32;;;;;6331:40;6350:8;:20;;;6331:40;;;;;;:::i;:::-;;;;;;;;6192:190;6397:9;6392:2132;6416:7;;:14;;6412:1;:18;6392:2132;;;6524:1;6502:24;;:7;;6510:1;6502:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:24;;;6498:536;;;6573:6;6580:1;6573:9;;;;;;;;:::i;:::-;;;;;;;;6550:8;:20;;;:32;6546:154;;;6611:43;6622:8;:20;;;6644:6;6651:1;6644:9;;;;;;;;:::i;:::-;;;;;;;;6611:43;;;;;;;:::i;:::-;;;;;;;;6676:5;;6546:154;6733:1;6721:6;6728:1;6721:9;;;;;;;;:::i;:::-;;;;;;;;:13;6717:277;;;6782:6;6789:1;6782:9;;;;;;;;:::i;:::-;;;;;;;;6758:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;6813:8;:13;;;:22;;;6836:6;6843:1;6836:9;;;;;;;;:::i;:::-;;;;;;;;6813:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:40;6880:6;6887:1;6880:9;;;;;;;;:::i;:::-;;;;;;;;6891:16;:14;:16::i;:::-;6868:11;:40::i;:::-;6935;6954:8;:20;;;6935:40;;;;;;:::i;:::-;;;;;;;;6717:277;7011:8;;6498:536;7155:8;:13;;;7139:29;;:9;;7149:1;7139:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:29;;;7135:520;;;7208:8;;7217:1;7208:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7192:27;;:9;;7202:1;7192:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:27;;;7188:263;;;7243:37;7256:9;;7266:1;7256:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7270:6;7277:1;7270:9;;;;;;;;:::i;:::-;;;;;;;;7243:12;:37::i;:::-;7326:6;7333:1;7326:9;;;;;;;;:::i;:::-;;;;;;;;7302:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;7362:40;7381:8;:20;;;7362:40;;;;;;:::i;:::-;;;;;;;;7424:8;;7188:263;7492:6;7499:1;7492:9;;;;;;;;:::i;:::-;;;;;;;;7468:8;:20;;:33;;;;;;;:::i;:::-;;;;;;;;7524:40;7543:8;:20;;;7524:40;;;;;;:::i;:::-;;;;;;;;7135:520;;;7603:37;7616:9;;7626:1;7616:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7630:6;7637:1;7630:9;;;;;;;;:::i;:::-;;;;;;;;7603:12;:37::i;:::-;7135:520;7730:20;7753:174;7780:8;;7789:1;7780:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7809:9;;7819:1;7809:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7839:7;;7847:1;7839:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7867;;7878:1;7867:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;7898:12;;7911:1;7898:15;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;7753:9;:174::i;:::-;7730:197;;7941:14;7981:5;7965:12;7959:3;;:18;;;;:::i;:::-;7958:28;;;;:::i;:::-;7941:45;;8019:8;:13;;;8004:28;;:8;;8013:1;8004:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:28;;;8000:514;;;8173:9;8138:12;8095:8;:20;;;:55;;;;:::i;:::-;:87;;;;:::i;:::-;8052:8;:20;;:130;;;;;8200:28;8212:4;8218:9;8200:11;:28::i;:::-;8251:40;8270:8;:20;;;8251:40;;;;;;:::i;:::-;;;;;;;;8000:514;;;8330:52;8344:8;;8353:1;8344:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8372:9;8357:12;:24;;;;:::i;:::-;8330:13;:52::i;:::-;8400:35;8412:8;;8421:1;8412:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8425:9;8400:11;:35::i;:::-;8458:41;8473:8;;8482:1;8473:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8486:12;8458:41;;;;;;;:::i;:::-;;;;;;;;8000:514;6437:2087;;6392:2132;6432:3;;;;;:::i;:::-;;;;6392:2132;;;;8560:1;8537:8;:20;;;:24;8533:145;;;8577:50;8591:8;:13;;;8606:8;:20;;;8577:13;:50::i;:::-;8646:21;8665:1;8646:21;;;;;;:::i;:::-;;;;;;;;8533:145;5856:2828;5586:3098;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2068:74:4:-;1094:13:0;:11;:13::i;:::-;2132:3:4::1;2126;:9;;;;2068:74:::0;:::o;2265:155::-;1094:13:0;:11;:13::i;:::-;2357:3:4::1;2339:15;:21;;;;2375:38;2397:15;;2375:38;;;;;;:::i;:::-;;;;;;;;2265:155:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1318:27:4:-;;;:::o;1418:18::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3094:129:4:-;3143:7;3206:10;3199:17;;3094:129;:::o;3412:117::-;3495:9;3487:27;;:35;3515:6;3487:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3412:117;;:::o;1755:207::-;1829:9;:22;;;1852:10;1872:4;1879:6;1829:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1941:4;1902:53;;1921:10;1902:53;;;1948:6;1902:53;;;;;;:::i;:::-;;;;;;;;1755:207;;:::o;3990:1107::-;4398:7;4440:1;4421:21;;:7;:21;;;4417:50;;;4451:16;;;;;;;;;;;;;;4417:50;4558:20;4581:8;:18;;;4608:4;4581:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4558:56;;4624:9;:17;;;4642:7;4651:17;4624:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4680:12;4698:10;:15;;4721:1;4724:12;;4698:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:58;;;4752:39;4769:7;4778:12;4752:39;;;;;;;:::i;:::-;;;;;;;;4806:7;4801:144;;4884:8;4921:9;4834:111;;;;;;;;;;;;:::i;:::-;;;;;;;;4801:144;5006:12;4970:8;:18;;;4997:4;4970:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;4955:63;;5033:28;5048:12;5033:28;;;;;;:::i;:::-;;;;;;;;5078:12;5071:19;;;;3990:1107;;;;;;;;:::o;2935:108::-;3005:5;:14;;;3020:7;:5;:7::i;:::-;3029:6;3005:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2935:108;;:::o;2642:113::-;2714:5;:14;;;2729:10;2741:6;2714:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2642:113;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1163:582;1250:8;1260:6;1310:3;1303:4;1295:6;1291:17;1287:27;1277:122;;1318:79;;:::i;:::-;1277:122;1431:6;1418:20;1408:30;;1461:18;1453:6;1450:30;1447:117;;;1483:79;;:::i;:::-;1447:117;1597:4;1589:6;1585:17;1573:29;;1651:3;1643:4;1635:6;1631:17;1621:8;1617:32;1614:41;1611:128;;;1658:79;;:::i;:::-;1611:128;1163:582;;;;;:::o;1768:568::-;1841:8;1851:6;1901:3;1894:4;1886:6;1882:17;1878:27;1868:122;;1909:79;;:::i;:::-;1868:122;2022:6;2009:20;1999:30;;2052:18;2044:6;2041:30;2038:117;;;2074:79;;:::i;:::-;2038:117;2188:4;2180:6;2176:17;2164:29;;2242:3;2234:4;2226:6;2222:17;2212:8;2208:32;2205:41;2202:128;;;2249:79;;:::i;:::-;2202:128;1768:568;;;;;:::o;2367:576::-;2448:8;2458:6;2508:3;2501:4;2493:6;2489:17;2485:27;2475:122;;2516:79;;:::i;:::-;2475:122;2629:6;2616:20;2606:30;;2659:18;2651:6;2648:30;2645:117;;;2681:79;;:::i;:::-;2645:117;2795:4;2787:6;2783:17;2771:29;;2849:3;2841:4;2833:6;2829:17;2819:8;2815:32;2812:41;2809:128;;;2856:79;;:::i;:::-;2809:128;2367:576;;;;;:::o;2964:579::-;3048:8;3058:6;3108:3;3101:4;3093:6;3089:17;3085:27;3075:122;;3116:79;;:::i;:::-;3075:122;3229:6;3216:20;3206:30;;3259:18;3251:6;3248:30;3245:117;;;3281:79;;:::i;:::-;3245:117;3395:4;3387:6;3383:17;3371:29;;3449:3;3441:4;3433:6;3429:17;3419:8;3415:32;3412:41;3409:128;;;3456:79;;:::i;:::-;3409:128;2964:579;;;;;:::o;3549:102::-;3590:6;3641:2;3637:7;3632:2;3625:5;3621:14;3617:28;3607:38;;3549:102;;;:::o;3657:180::-;3705:77;3702:1;3695:88;3802:4;3799:1;3792:15;3826:4;3823:1;3816:15;3843:281;3926:27;3948:4;3926:27;:::i;:::-;3918:6;3914:40;4056:6;4044:10;4041:22;4020:18;4008:10;4005:34;4002:62;3999:88;;;4067:18;;:::i;:::-;3999:88;4107:10;4103:2;4096:22;3886:238;3843:281;;:::o;4130:129::-;4164:6;4191:20;;:::i;:::-;4181:30;;4220:33;4248:4;4240:6;4220:33;:::i;:::-;4130:129;;;:::o;4265:311::-;4342:4;4432:18;4424:6;4421:30;4418:56;;;4454:18;;:::i;:::-;4418:56;4504:4;4496:6;4492:17;4484:25;;4564:4;4558;4554:15;4546:23;;4265:311;;;:::o;4582:122::-;4655:24;4673:5;4655:24;:::i;:::-;4648:5;4645:35;4635:63;;4694:1;4691;4684:12;4635:63;4582:122;:::o;4710:139::-;4756:5;4794:6;4781:20;4772:29;;4810:33;4837:5;4810:33;:::i;:::-;4710:139;;;;:::o;4872:710::-;4968:5;4993:81;5009:64;5066:6;5009:64;:::i;:::-;4993:81;:::i;:::-;4984:90;;5094:5;5123:6;5116:5;5109:21;5157:4;5150:5;5146:16;5139:23;;5210:4;5202:6;5198:17;5190:6;5186:30;5239:3;5231:6;5228:15;5225:122;;;5258:79;;:::i;:::-;5225:122;5373:6;5356:220;5390:6;5385:3;5382:15;5356:220;;;5465:3;5494:37;5527:3;5515:10;5494:37;:::i;:::-;5489:3;5482:50;5561:4;5556:3;5552:14;5545:21;;5432:144;5416:4;5411:3;5407:14;5400:21;;5356:220;;;5360:21;4974:608;;4872:710;;;;;:::o;5605:370::-;5676:5;5725:3;5718:4;5710:6;5706:17;5702:27;5692:122;;5733:79;;:::i;:::-;5692:122;5850:6;5837:20;5875:94;5965:3;5957:6;5950:4;5942:6;5938:17;5875:94;:::i;:::-;5866:103;;5682:293;5605:370;;;;:::o;5981:2513::-;6292:6;6300;6308;6316;6324;6332;6340;6348;6356;6364;6372:7;6422:3;6410:9;6401:7;6397:23;6393:33;6390:120;;;6429:79;;:::i;:::-;6390:120;6577:1;6566:9;6562:17;6549:31;6607:18;6599:6;6596:30;6593:117;;;6629:79;;:::i;:::-;6593:117;6742:94;6828:7;6819:6;6808:9;6804:22;6742:94;:::i;:::-;6724:112;;;;6520:326;6913:2;6902:9;6898:18;6885:32;6944:18;6936:6;6933:30;6930:117;;;6966:79;;:::i;:::-;6930:117;7079:94;7165:7;7156:6;7145:9;7141:22;7079:94;:::i;:::-;7061:112;;;;6856:327;7250:2;7239:9;7235:18;7222:32;7281:18;7273:6;7270:30;7267:117;;;7303:79;;:::i;:::-;7267:117;7416:80;7488:7;7479:6;7468:9;7464:22;7416:80;:::i;:::-;7398:98;;;;7193:313;7573:2;7562:9;7558:18;7545:32;7604:18;7596:6;7593:30;7590:117;;;7626:79;;:::i;:::-;7590:117;7739:88;7819:7;7810:6;7799:9;7795:22;7739:88;:::i;:::-;7721:106;;;;7516:321;7904:3;7893:9;7889:19;7876:33;7936:18;7928:6;7925:30;7922:117;;;7958:79;;:::i;:::-;7922:117;8071:91;8154:7;8145:6;8134:9;8130:22;8071:91;:::i;:::-;8053:109;;;;7847:325;8239:3;8228:9;8224:19;8211:33;8271:18;8263:6;8260:30;8257:117;;;8293:79;;:::i;:::-;8257:117;8399:78;8469:7;8460:6;8449:9;8445:22;8399:78;:::i;:::-;8388:89;;8182:305;5981:2513;;;;;;;;;;;;;;:::o;8500:329::-;8559:6;8608:2;8596:9;8587:7;8583:23;8579:32;8576:119;;;8614:79;;:::i;:::-;8576:119;8734:1;8759:53;8804:7;8795:6;8784:9;8780:22;8759:53;:::i;:::-;8749:63;;8705:117;8500:329;;;;:::o;8835:126::-;8872:7;8912:42;8905:5;8901:54;8890:65;;8835:126;;;:::o;8967:96::-;9004:7;9033:24;9051:5;9033:24;:::i;:::-;9022:35;;8967:96;;;:::o;9069:118::-;9156:24;9174:5;9156:24;:::i;:::-;9151:3;9144:37;9069:118;;:::o;9193:222::-;9286:4;9324:2;9313:9;9309:18;9301:26;;9337:71;9405:1;9394:9;9390:17;9381:6;9337:71;:::i;:::-;9193:222;;;;:::o;9421:60::-;9449:3;9470:5;9463:12;;9421:60;;;:::o;9487:142::-;9537:9;9570:53;9588:34;9597:24;9615:5;9597:24;:::i;:::-;9588:34;:::i;:::-;9570:53;:::i;:::-;9557:66;;9487:142;;;:::o;9635:126::-;9685:9;9718:37;9749:5;9718:37;:::i;:::-;9705:50;;9635:126;;;:::o;9767:139::-;9830:9;9863:37;9894:5;9863:37;:::i;:::-;9850:50;;9767:139;;;:::o;9912:157::-;10012:50;10056:5;10012:50;:::i;:::-;10007:3;10000:63;9912:157;;:::o;10075:248::-;10181:4;10219:2;10208:9;10204:18;10196:26;;10232:84;10313:1;10302:9;10298:17;10289:6;10232:84;:::i;:::-;10075:248;;;;:::o;10329:122::-;10402:24;10420:5;10402:24;:::i;:::-;10395:5;10392:35;10382:63;;10441:1;10438;10431:12;10382:63;10329:122;:::o;10457:139::-;10503:5;10541:6;10528:20;10519:29;;10557:33;10584:5;10557:33;:::i;:::-;10457:139;;;;:::o;10602:329::-;10661:6;10710:2;10698:9;10689:7;10685:23;10681:32;10678:119;;;10716:79;;:::i;:::-;10678:119;10836:1;10861:53;10906:7;10897:6;10886:9;10882:22;10861:53;:::i;:::-;10851:63;;10807:117;10602:329;;;;:::o;10937:180::-;10985:77;10982:1;10975:88;11082:4;11079:1;11072:15;11106:4;11103:1;11096:15;11123:332;11244:4;11282:2;11271:9;11267:18;11259:26;;11295:71;11363:1;11352:9;11348:17;11339:6;11295:71;:::i;:::-;11376:72;11444:2;11433:9;11429:18;11420:6;11376:72;:::i;:::-;11123:332;;;;;:::o;11461:180::-;11509:77;11506:1;11499:88;11606:4;11603:1;11596:15;11630:4;11627:1;11620:15;11647:191;11687:4;11707:20;11725:1;11707:20;:::i;:::-;11702:25;;11741:20;11759:1;11741:20;:::i;:::-;11736:25;;11780:1;11777;11774:8;11771:34;;;11785:18;;:::i;:::-;11771:34;11830:1;11827;11823:9;11815:17;;11647:191;;;;:::o;11844:110::-;11895:7;11924:24;11942:5;11924:24;:::i;:::-;11913:35;;11844:110;;;:::o;11960:150::-;12047:38;12079:5;12047:38;:::i;:::-;12040:5;12037:49;12027:77;;12100:1;12097;12090:12;12027:77;11960:150;:::o;12116:167::-;12176:5;12214:6;12201:20;12192:29;;12230:47;12271:5;12230:47;:::i;:::-;12116:167;;;;:::o;12289:357::-;12362:6;12411:2;12399:9;12390:7;12386:23;12382:32;12379:119;;;12417:79;;:::i;:::-;12379:119;12537:1;12562:67;12621:7;12612:6;12601:9;12597:22;12562:67;:::i;:::-;12552:77;;12508:131;12289:357;;;;:::o;12652:305::-;12692:3;12711:20;12729:1;12711:20;:::i;:::-;12706:25;;12745:20;12763:1;12745:20;:::i;:::-;12740:25;;12899:1;12831:66;12827:74;12824:1;12821:81;12818:107;;;12905:18;;:::i;:::-;12818:107;12949:1;12946;12942:9;12935:16;;12652:305;;;;:::o;12963:104::-;13008:7;13037:24;13055:5;13037:24;:::i;:::-;13026:35;;12963:104;;;:::o;13073:138::-;13154:32;13180:5;13154:32;:::i;:::-;13147:5;13144:43;13134:71;;13201:1;13198;13191:12;13134:71;13073:138;:::o;13217:155::-;13271:5;13309:6;13296:20;13287:29;;13325:41;13360:5;13325:41;:::i;:::-;13217:155;;;;:::o;13378:345::-;13445:6;13494:2;13482:9;13473:7;13469:23;13465:32;13462:119;;;13500:79;;:::i;:::-;13462:119;13620:1;13645:61;13698:7;13689:6;13678:9;13674:22;13645:61;:::i;:::-;13635:71;;13591:125;13378:345;;;;:::o;13729:117::-;13838:1;13835;13828:12;13852:117;13961:1;13958;13951:12;13975:117;14084:1;14081;14074:12;14098:724;14175:4;14181:6;14237:11;14224:25;14337:1;14331:4;14327:12;14316:8;14300:14;14296:29;14292:48;14272:18;14268:73;14258:168;;14345:79;;:::i;:::-;14258:168;14457:18;14447:8;14443:33;14435:41;;14509:4;14496:18;14486:28;;14537:18;14529:6;14526:30;14523:117;;;14559:79;;:::i;:::-;14523:117;14667:2;14661:4;14657:13;14649:21;;14724:4;14716:6;14712:17;14696:14;14692:38;14686:4;14682:49;14679:136;;;14734:79;;:::i;:::-;14679:136;14188:634;14098:724;;;;;:::o;14828:348::-;14868:7;14891:20;14909:1;14891:20;:::i;:::-;14886:25;;14925:20;14943:1;14925:20;:::i;:::-;14920:25;;15113:1;15045:66;15041:74;15038:1;15035:81;15030:1;15023:9;15016:17;15012:105;15009:131;;;15120:18;;:::i;:::-;15009:131;15168:1;15165;15161:9;15150:20;;14828:348;;;;:::o;15182:180::-;15230:77;15227:1;15220:88;15327:4;15324:1;15317:15;15351:4;15348:1;15341:15;15368:185;15408:1;15425:20;15443:1;15425:20;:::i;:::-;15420:25;;15459:20;15477:1;15459:20;:::i;:::-;15454:25;;15498:1;15488:35;;15503:18;;:::i;:::-;15488:35;15545:1;15542;15538:9;15533:14;;15368:185;;;;:::o;15559:140::-;15623:9;15656:37;15687:5;15656:37;:::i;:::-;15643:50;;15559:140;;;:::o;15705:159::-;15806:51;15851:5;15806:51;:::i;:::-;15801:3;15794:64;15705:159;;:::o;15870:360::-;16005:4;16043:2;16032:9;16028:18;16020:26;;16056:85;16138:1;16127:9;16123:17;16114:6;16056:85;:::i;:::-;16151:72;16219:2;16208:9;16204:18;16195:6;16151:72;:::i;:::-;15870:360;;;;;:::o;16236:233::-;16275:3;16298:24;16316:5;16298:24;:::i;:::-;16289:33;;16344:66;16337:5;16334:77;16331:103;;;16414:18;;:::i;:::-;16331:103;16461:1;16454:5;16450:13;16443:20;;16236:233;;;:::o;16475:85::-;16520:7;16549:5;16538:16;;16475:85;;;:::o;16566:158::-;16624:9;16657:61;16675:42;16684:32;16710:5;16684:32;:::i;:::-;16675:42;:::i;:::-;16657:61;:::i;:::-;16644:74;;16566:158;;;:::o;16730:147::-;16825:45;16864:5;16825:45;:::i;:::-;16820:3;16813:58;16730:147;;:::o;16883:238::-;16984:4;17022:2;17011:9;17007:18;16999:26;;17035:79;17111:1;17100:9;17096:17;17087:6;17035:79;:::i;:::-;16883:238;;;;:::o;17127:169::-;17211:11;17245:6;17240:3;17233:19;17285:4;17280:3;17276:14;17261:29;;17127:169;;;;:::o;17302:225::-;17442:34;17438:1;17430:6;17426:14;17419:58;17511:8;17506:2;17498:6;17494:15;17487:33;17302:225;:::o;17533:366::-;17675:3;17696:67;17760:2;17755:3;17696:67;:::i;:::-;17689:74;;17772:93;17861:3;17772:93;:::i;:::-;17890:2;17885:3;17881:12;17874:19;;17533:366;;;:::o;17905:419::-;18071:4;18109:2;18098:9;18094:18;18086:26;;18158:9;18152:4;18148:20;18144:1;18133:9;18129:17;18122:47;18186:131;18312:4;18186:131;:::i;:::-;18178:139;;17905:419;;;:::o;18330:442::-;18479:4;18517:2;18506:9;18502:18;18494:26;;18530:71;18598:1;18587:9;18583:17;18574:6;18530:71;:::i;:::-;18611:72;18679:2;18668:9;18664:18;18655:6;18611:72;:::i;:::-;18693;18761:2;18750:9;18746:18;18737:6;18693:72;:::i;:::-;18330:442;;;;;;:::o;18778:90::-;18812:7;18855:5;18848:13;18841:21;18830:32;;18778:90;;;:::o;18874:116::-;18944:21;18959:5;18944:21;:::i;:::-;18937:5;18934:32;18924:60;;18980:1;18977;18970:12;18924:60;18874:116;:::o;18996:137::-;19050:5;19081:6;19075:13;19066:22;;19097:30;19121:5;19097:30;:::i;:::-;18996:137;;;;:::o;19139:345::-;19206:6;19255:2;19243:9;19234:7;19230:23;19226:32;19223:119;;;19261:79;;:::i;:::-;19223:119;19381:1;19406:61;19459:7;19450:6;19439:9;19435:22;19406:61;:::i;:::-;19396:71;;19352:125;19139:345;;;;:::o;19490:143::-;19547:5;19578:6;19572:13;19563:22;;19594:33;19621:5;19594:33;:::i;:::-;19490:143;;;;:::o;19639:351::-;19709:6;19758:2;19746:9;19737:7;19733:23;19729:32;19726:119;;;19764:79;;:::i;:::-;19726:119;19884:1;19909:64;19965:7;19956:6;19945:9;19941:22;19909:64;:::i;:::-;19899:74;;19855:128;19639:351;;;;:::o;19996:118::-;20033:7;20073:34;20066:5;20062:46;20051:57;;19996:118;;;:::o;20120:142::-;20170:9;20203:53;20221:34;20230:24;20248:5;20230:24;:::i;:::-;20221:34;:::i;:::-;20203:53;:::i;:::-;20190:66;;20120:142;;;:::o;20268:131::-;20355:37;20386:5;20355:37;:::i;:::-;20350:3;20343:50;20268:131;;:::o;20405:332::-;20526:4;20564:2;20553:9;20549:18;20541:26;;20577:71;20645:1;20634:9;20630:17;20621:6;20577:71;:::i;:::-;20658:72;20726:2;20715:9;20711:18;20702:6;20658:72;:::i;:::-;20405:332;;;;;:::o;20743:147::-;20844:11;20881:3;20866:18;;20743:147;;;;:::o;20896:154::-;20980:6;20975:3;20970;20957:30;21042:1;21033:6;21028:3;21024:16;21017:27;20896:154;;;:::o;21078:314::-;21192:3;21213:88;21294:6;21289:3;21213:88;:::i;:::-;21206:95;;21311:43;21347:6;21342:3;21335:5;21311:43;:::i;:::-;21379:6;21374:3;21370:16;21363:23;;21078:314;;;;;:::o;21398:291::-;21538:3;21560:103;21659:3;21650:6;21642;21560:103;:::i;:::-;21553:110;;21680:3;21673:10;;21398:291;;;;;:::o;21695:109::-;21776:21;21791:5;21776:21;:::i;:::-;21771:3;21764:34;21695:109;;:::o;21810:320::-;21925:4;21963:2;21952:9;21948:18;21940:26;;21976:65;22038:1;22027:9;22023:17;22014:6;21976:65;:::i;:::-;22051:72;22119:2;22108:9;22104:18;22095:6;22051:72;:::i;:::-;21810:320;;;;;:::o;22136:388::-;22285:4;22323:2;22312:9;22308:18;22300:26;;22336:85;22418:1;22407:9;22403:17;22394:6;22336:85;:::i;:::-;22431:86;22513:2;22502:9;22498:18;22489:6;22431:86;:::i;:::-;22136:388;;;;;:::o;22530:332::-;22651:4;22689:2;22678:9;22674:18;22666:26;;22702:71;22770:1;22759:9;22755:17;22746:6;22702:71;:::i;:::-;22783:72;22851:2;22840:9;22836:18;22827:6;22783:72;:::i;:::-;22530:332;;;;;:::o;22868:182::-;23008:34;23004:1;22996:6;22992:14;22985:58;22868:182;:::o;23056:366::-;23198:3;23219:67;23283:2;23278:3;23219:67;:::i;:::-;23212:74;;23295:93;23384:3;23295:93;:::i;:::-;23413:2;23408:3;23404:12;23397:19;;23056:366;;;:::o;23428:419::-;23594:4;23632:2;23621:9;23617:18;23609:26;;23681:9;23675:4;23671:20;23667:1;23656:9;23652:17;23645:47;23709:131;23835:4;23709:131;:::i;:::-;23701:139;;23428:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1681200","executionCost":"infinite","totalCost":"infinite"},"external":{"":"174","WETH()":"infinite","fee()":"2495","maxTransactions()":"2430","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"infinite","owner()":"2544","renounceOwnership()":"30443","setMaxTransactionLimit(uint256)":"infinite","setfee(uint256)":"24851","transferOwnership(address)":"30835"},"internal":{"depositToken(contract IERC20,uint256)":"infinite","fillQuote(contract IERC20,contract IERC20,address,address,bytes calldata)":"infinite","setDestination()":"22","transferEth(uint256,address)":"infinite","withdrawFee(contract IERC20,uint256)":"infinite","withdrawToken(contract IERC20,uint256)":"infinite"}},"methodIdentifiers":{"WETH()":"ad5c4648","fee()":"ddca3f43","maxTransactions()":"24e1c18d","multiSwap(address[],address[],address[],address[],bytes[],uint256[])":"6ca591a7","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMaxTransactionLimit(uint256)":"7a9d7c14","setfee(uint256)":"73fee090","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"}],\"name\":\"FillQuote_Swap_Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid_Multiswap_Data\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reqAmount_\",\"type\":\"uint256\"}],\"name\":\"BadRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wethBal_\",\"type\":\"uint256\"}],\"name\":\"EtherBalanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"TransferSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boughtAmount_\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialBuyTokenBalance\",\"type\":\"uint256\"}],\"name\":\"ZeroXCallSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTransactions\",\"type\":\"uint256\"}],\"name\":\"maxTransactionsChange\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"sellToken\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"buyToken\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"spender\",\"type\":\"address[]\"},{\"internalType\":\"address payable[]\",\"name\":\"swapTarget\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"swapCallData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"multiSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setMaxTransactionLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Chitranshu Varshney\",\"details\":\"A contract for swapping ERC20 tokens using 0x-API quotes.\",\"events\":{\"TransferSuccessful(address,address,uint256)\":{\"details\":\"Event to notify if transfer successful or failed after account approval verified\"}},\"kind\":\"dev\",\"methods\":{\"multiSwap(address[],address[],address[],address[],bytes[],uint256[])\":{\"details\":\"Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\",\"params\":{\"amount\":\"amount of sell token to swap.\",\"buyToken\":\"addresses of sell tokens\",\"sellToken\":\"addresses of sell tokens\",\"spender\":\"The address approved for spending the sellToken.\",\"swapCallData\":\"The data to call the swap function on the swapTarget.\",\"swapTarget\":\"The target contract to execute the swap.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMaxTransactionLimit(uint256)\":{\"details\":\"Sets the maximum transaction limit.\",\"params\":{\"num\":\"The new maximum transaction limit.\"}},\"setfee(uint256)\":{\"details\":\"Sets the fee for the transactions.\",\"params\":{\"num\":\"The new fee value.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AlphaVaultSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVaultSwap.sol\":\"AlphaVaultSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVaultSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\n/**\\n * @title AlphaVaultSwap\\n * @author Chitranshu Varshney\\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\\n */\\n\\ncontract AlphaVaultSwap is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\\n\\n    struct wethInfo {\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n\\n    // address private destination;\\n\\n    constructor(address _WETH) {\\n        WETH = IWETH(_WETH);\\n        maxTransactions = 25;\\n        fee = 0;\\n    }\\n\\n    /**\\n     * @dev Deposits ERC20 tokens into the contract.\\n     * @param sellToken The token to deposit.\\n     * @param amount The amount to deposit.\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        sellToken.transferFrom(msg.sender, address(this), amount);\\n\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Sets the fee for the transactions.\\n     * @param num The new fee value.\\n     */\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    /**\\n     * @dev Sets the maximum transaction limit.\\n     * @param num The new maximum transaction limit.\\n     */\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Transfers the fee amount of tokens to the owner.\\n     * @param token The token to transfer as a fee.\\n     * @param amount The amount to transfer.\\n     */\\n    function withdrawFee(IERC20 token, uint256 amount) internal {\\n        token.transfer(owner(), amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Transfers an amount of ETH to a given address.\\n     * @param amount The amount of ETH to transfer.\\n     * @param msgSender The address to receive the ETH.\\n     */\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param buyToken The token to buy.\\n     * @param sellToken The token to sell.\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @return boughtAmount The amount of buyToken bought.\\n     */ function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if (spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if (!success)\\n            revert FillQuote_Swap_Failed({\\n                buyToken: buyToken,\\n                sellToken: sellToken\\n            });\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @param amount amount of sell token to swap.\\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if (\\n            !(sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length)\\n        ) revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo = wethInfo(0, WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value;\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance =\\n                    WethInfo.eth_balance +\\n                    boughtAmount -\\n                    feeOfSwap;\\n                withdrawFee(WETH, feeOfSwap);\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\\n                withdrawFee(buyToken[i], feeOfSwap);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xed29b64440e84ef3eba7639ae5d0e8d0d56351dde169f7b34a77c7f2d958d893\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/AlphaVaultSwap.sol:AlphaVaultSwap","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1003,"contract":"contracts/AlphaVaultSwap.sol:AlphaVaultSwap","label":"maxTransactions","offset":0,"slot":"1","type":"t_uint256"},{"astId":1005,"contract":"contracts/AlphaVaultSwap.sol:AlphaVaultSwap","label":"fee","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlphaVaultSwap.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AlphaVaultSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\\n/**\\n * @title AlphaVaultSwap\\n * @author Chitranshu Varshney\\n * @dev A contract for swapping ERC20 tokens using 0x-API quotes.\\n */\\n\\ncontract AlphaVaultSwap is Ownable {\\n    // AlphaVault custom events\\n    event WithdrawTokens(IERC20 buyToken, uint256 boughtAmount_);\\n    event EtherBalanceChange(uint256 wethBal_);\\n    event BadRequest(uint256 wethBal_, uint256 reqAmount_);\\n    event ZeroXCallSuccess(bool status, uint256 initialBuyTokenBalance);\\n    event buyTokenBought(uint256 buTokenAmount);\\n    event maxTransactionsChange(uint256 maxTransactions);\\n\\n    /**\\n     * @dev Event to notify if transfer successful or failed\\n     * after account approval verified\\n     */\\n    event TransferSuccessful(\\n        address indexed from_,\\n        address indexed to_,\\n        uint256 amount_\\n    );\\n\\n    error InvalidAddress();\\n    error Invalid_Multiswap_Data();\\n    error FillQuote_Swap_Failed(IERC20 buyToken, IERC20 sellToken);\\n\\n    struct wethInfo {\\n        uint256 eth_balance;\\n        IWETH wETH;\\n    }\\n    // The WETH contract.\\n    IWETH public immutable WETH;\\n    // IERC20 ERC20Interface;\\n\\n    uint256 public maxTransactions;\\n    uint256 public fee;\\n\\n    // address private destination;\\n\\n    constructor(address _WETH) {\\n        WETH = IWETH(_WETH);\\n        maxTransactions = 25;\\n        fee = 0;\\n    }\\n\\n    /**\\n     * @dev Deposits ERC20 tokens into the contract.\\n     * @param sellToken The token to deposit.\\n     * @param amount The amount to deposit.\\n     */\\n    function depositToken(IERC20 sellToken, uint256 amount) private {\\n        sellToken.transferFrom(msg.sender, address(this), amount);\\n\\n        emit TransferSuccessful(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Sets the fee for the transactions.\\n     * @param num The new fee value.\\n     */\\n    function setfee(uint256 num) external onlyOwner {\\n        fee = num;\\n    }\\n\\n    /**\\n     * @dev Sets the maximum transaction limit.\\n     * @param num The new maximum transaction limit.\\n     */\\n    function setMaxTransactionLimit(uint256 num) external onlyOwner {\\n        maxTransactions = num;\\n        emit maxTransactionsChange(maxTransactions);\\n    }\\n\\n    // Payable fallback to allow this contract to receive protocol fee refunds.\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    // Transfer tokens held by this contrat to the sender/owner.\\n    function withdrawToken(IERC20 token, uint256 amount) internal {\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Transfers the fee amount of tokens to the owner.\\n     * @param token The token to transfer as a fee.\\n     * @param amount The amount to transfer.\\n     */\\n    function withdrawFee(IERC20 token, uint256 amount) internal {\\n        token.transfer(owner(), amount);\\n    }\\n\\n    //Sets destination address to msg.sender\\n    function setDestination() internal view returns (address) {\\n        // destination = msg.sender;\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Transfers an amount of ETH to a given address.\\n     * @param amount The amount of ETH to transfer.\\n     * @param msgSender The address to receive the ETH.\\n     */\\n    function transferEth(uint256 amount, address msgSender) internal {\\n        payable(msgSender).transfer(amount);\\n    }\\n\\n    /**\\n     * @dev Swaps ERC20->ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param buyToken The token to buy.\\n     * @param sellToken The token to sell.\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @return boughtAmount The amount of buyToken bought.\\n     */ function fillQuote(\\n        // The `buyTokenAddress` field from the API response.\\n        IERC20 buyToken,\\n        IERC20 sellToken,\\n        // The `allowanceTarget` field from the API response.\\n        address spender,\\n        // The `to` field from the API response.\\n        address swapTarget,\\n        // The `data` field from the API response.\\n        bytes calldata swapCallData\\n    ) internal returns (uint256) {\\n        if (spender == address(0)) revert InvalidAddress();\\n        // Track our balance of the buyToken to determine how much we've bought.\\n        uint256 boughtAmount = buyToken.balanceOf(address(this));\\n        sellToken.approve(spender, type(uint128).max);\\n        (bool success, ) = swapTarget.call{value: 0}(swapCallData);\\n        emit ZeroXCallSuccess(success, boughtAmount);\\n        if (!success)\\n            revert FillQuote_Swap_Failed({\\n                buyToken: buyToken,\\n                sellToken: sellToken\\n            });\\n        boughtAmount = buyToken.balanceOf(address(this)) - boughtAmount;\\n        emit buyTokenBought(boughtAmount);\\n        return boughtAmount;\\n    }\\n\\n    /**\\n     * @dev Swaps multiple ERC20-> multiple ERC20 tokens held by this contract using a 0x-API quote.\\n     * @param sellToken addresses of sell tokens\\n     * @param buyToken addresses of sell tokens\\n     * @param spender The address approved for spending the sellToken.\\n     * @param swapTarget The target contract to execute the swap.\\n     * @param swapCallData The data to call the swap function on the swapTarget.\\n     * @param amount amount of sell token to swap.\\n     */\\n    function multiSwap(\\n        IERC20[] calldata sellToken,\\n        IERC20[] calldata buyToken,\\n        address[] calldata spender,\\n        address payable[] calldata swapTarget,\\n        bytes[] calldata swapCallData,\\n        uint256[] memory amount\\n    ) external payable {\\n        if (\\n            !(sellToken.length <= maxTransactions &&\\n                sellToken.length == buyToken.length &&\\n                spender.length == buyToken.length &&\\n                swapTarget.length == spender.length)\\n        ) revert Invalid_Multiswap_Data();\\n\\n        wethInfo memory WethInfo = wethInfo(0, WETH);\\n\\n        if (msg.value > 0) {\\n            WethInfo.wETH.deposit{value: msg.value}();\\n            WethInfo.eth_balance = msg.value;\\n            emit EtherBalanceChange(WethInfo.eth_balance);\\n        }\\n\\n        for (uint256 i = 0; i < spender.length; i++) {\\n            // ETHER & WETH Withdrawl request.\\n            if (spender[i] == address(0)) {\\n                if (WethInfo.eth_balance < amount[i]) {\\n                    emit BadRequest(WethInfo.eth_balance, amount[i]);\\n                    break;\\n                }\\n                if (amount[i] > 0) {\\n                    WethInfo.eth_balance -= amount[i];\\n                    WethInfo.wETH.withdraw(amount[i]);\\n                    transferEth(amount[i], setDestination());\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                }\\n                continue;\\n            }\\n            // Condition For using Deposited Ether before using WETH From user balance.\\n            if (sellToken[i] == WethInfo.wETH) {\\n                if (sellToken[i] == buyToken[i]) {\\n                    depositToken(sellToken[i], amount[i]);\\n                    WethInfo.eth_balance += amount[i];\\n                    emit EtherBalanceChange(WethInfo.eth_balance);\\n                    continue;\\n                }\\n                WethInfo.eth_balance -= amount[i];\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                depositToken(sellToken[i], amount[i]);\\n            }\\n\\n            // Variable to store amount of tokens purchased.\\n            uint256 boughtAmount = fillQuote(\\n                buyToken[i],\\n                sellToken[i],\\n                spender[i],\\n                swapTarget[i],\\n                swapCallData[i]\\n            );\\n            uint feeOfSwap = (fee * boughtAmount) / 10000;\\n            if (buyToken[i] == WethInfo.wETH) {\\n                WethInfo.eth_balance =\\n                    WethInfo.eth_balance +\\n                    boughtAmount -\\n                    feeOfSwap;\\n                withdrawFee(WETH, feeOfSwap);\\n                emit EtherBalanceChange(WethInfo.eth_balance);\\n            } else {\\n                withdrawToken(buyToken[i], boughtAmount - feeOfSwap);\\n                withdrawFee(buyToken[i], feeOfSwap);\\n                emit WithdrawTokens(buyToken[i], boughtAmount);\\n            }\\n        }\\n        if (WethInfo.eth_balance > 0) {\\n            withdrawToken(WethInfo.wETH, WethInfo.eth_balance);\\n            emit EtherBalanceChange(0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xed29b64440e84ef3eba7639ae5d0e8d0d56351dde169f7b34a77c7f2d958d893\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}